// Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// --------------------------------------------------------------------------------
// Tool Version: Vivado v.2022.2 (win64) Build 3671981 Fri Oct 14 05:00:03 MDT 2022
// Date        : Fri May 24 19:13:44 2024
// Host        : DellInspiron running 64-bit major release  (build 9200)
// Command     : write_verilog -force -mode funcsim
//               c:/Users/janro/Pulpit/AGH_FILES/SR-2024S/lab07/mass_centroid/mass_centroid.gen/sources_1/bd/hdmi_vga/ip/hdmi_vga_vp_0_0/hdmi_vga_vp_0_0_sim_netlist.v
// Design      : hdmi_vga_vp_0_0
// Purpose     : This verilog netlist is a functional simulation representation of the design and should not be modified
//               or synthesized. This netlist cannot be used for SDF annotated simulation.
// Device      : xc7z010clg400-1
// --------------------------------------------------------------------------------
`timescale 1 ps / 1 ps

(* ORIG_REF_NAME = "c_addsub_0" *) (* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module c_addsub_0_HD243
   (CE,
    A,
    B,
    S);
  input CE;
  input [10:0]A;
  input [31:0]B;
  output [31:0]S;


endmodule

(* ORIG_REF_NAME = "delayLineBRAM" *) (* X_CORE_INFO = "blk_mem_gen_v8_4_5,Vivado 2022.2" *) 
module delayLineBRAM_HD242
   (clka,
    addra,
    dina,
    douta,
    wea);
  input clka;
  input [10:0]addra;
  input [16:0]dina;
  output [16:0]douta;
  input [0:0]wea;


endmodule

(* ORIG_REF_NAME = "add3" *) (* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_add3_HD244
   (CE,
    CLK,
    A,
    S);
  input CE;
  input CLK;
  input [11:0]A;
  output [11:0]S;


endmodule

(* ORIG_REF_NAME = "sub_cordinates" *) (* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_sub_cordinates_HD245
   (CE,
    CLK,
    A,
    B,
    S);
  input CE;
  input CLK;
  input [10:0]A;
  input [10:0]B;
  output [11:0]S;


endmodule

(* CHECK_LICENSE_TYPE = "hdmi_vga_vp_0_0,vp,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* IP_DEFINITION_SOURCE = "module_ref" *) 
(* X_CORE_INFO = "vp,Vivado 2022.2" *) 
(* NotValidForBitStream *)
module hdmi_vga_vp_0_0
   (pixel_in,
    h_sync_in,
    v_sync_in,
    de_in,
    clk,
    sw,
    pixel_out,
    h_sync_out,
    v_sync_out,
    de_out);
  input [23:0]pixel_in;
  input h_sync_in;
  input v_sync_in;
  input de_in;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, CLK_DOMAIN hdmi_vga_dvi2rgb_0_0_PixelClk, INSERT_VIP 0" *) input clk;
  input [2:0]sw;
  output [23:0]pixel_out;
  output h_sync_out;
  output v_sync_out;
  output de_out;

  wire clk;
  wire de_in;
  wire de_out;
  wire h_sync_in;
  wire h_sync_out;
  wire [23:0]pixel_in;
  wire [23:0]pixel_out;
  wire [2:0]sw;
  wire v_sync_in;
  wire v_sync_out;

  hdmi_vga_vp_0_0_vp inst
       (.clk(clk),
        .de_in(de_in),
        .de_out(de_out),
        .h_sync_in(h_sync_in),
        .h_sync_out(h_sync_out),
        .pixel_in(pixel_in),
        .pixel_out(pixel_out),
        .sw(sw),
        .v_sync_in(v_sync_in),
        .v_sync_out(v_sync_out));
endmodule

(* ORIG_REF_NAME = "YCrCb_module" *) 
module hdmi_vga_vp_0_0_YCrCb_module
   (\h_sync_mux[1] ,
    \v_sync_mux[1] ,
    E,
    SR,
    \val_reg[0] ,
    \val_reg[2] ,
    \FSM_onehot_state_reg[0] ,
    eof,
    \FSM_onehot_state_reg[0]_0 ,
    D,
    i_primitive,
    de_reg,
    v_sync_reg,
    h_sync_reg,
    clk,
    pixel_in,
    h_sync_in,
    v_sync_in,
    de_in,
    prev_h_sync,
    i0,
    i0_0,
    prev_v_sync,
    \pix_reg_reg[23] ,
    \pix_reg_reg[7] ,
    \pix_reg_reg[23]_0 ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[23]_1 ,
    sw,
    de_reg_reg,
    \de_mux[6] ,
    de_reg_reg_0,
    v_sync_reg_reg,
    \v_sync_mux[6] ,
    v_sync_reg_reg_0,
    h_sync_reg_reg,
    \h_sync_mux[6] ,
    h_sync_reg_reg_0,
    \pix_reg_reg[23]_2 ,
    \pix_reg_reg[22] ,
    \pix_reg_reg[21] ,
    \pix_reg_reg[20] ,
    \pix_reg_reg[19] ,
    \pix_reg_reg[18] ,
    \pix_reg_reg[17] ,
    \pix_reg_reg[16] );
  output \h_sync_mux[1] ;
  output \v_sync_mux[1] ;
  output [0:0]E;
  output [0:0]SR;
  output [0:0]\val_reg[0] ;
  output [0:0]\val_reg[2] ;
  output [0:0]\FSM_onehot_state_reg[0] ;
  output eof;
  output [0:0]\FSM_onehot_state_reg[0]_0 ;
  output [23:0]D;
  output [0:0]i_primitive;
  output de_reg;
  output v_sync_reg;
  output h_sync_reg;
  input clk;
  input [23:0]pixel_in;
  input h_sync_in;
  input v_sync_in;
  input de_in;
  input prev_h_sync;
  input i0;
  input i0_0;
  input prev_v_sync;
  input \pix_reg_reg[23] ;
  input \pix_reg_reg[7] ;
  input \pix_reg_reg[23]_0 ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[23]_1 ;
  input [2:0]sw;
  input de_reg_reg;
  input \de_mux[6] ;
  input de_reg_reg_0;
  input v_sync_reg_reg;
  input \v_sync_mux[6] ;
  input v_sync_reg_reg_0;
  input h_sync_reg_reg;
  input \h_sync_mux[6] ;
  input h_sync_reg_reg_0;
  input \pix_reg_reg[23]_2 ;
  input \pix_reg_reg[22] ;
  input \pix_reg_reg[21] ;
  input \pix_reg_reg[20] ;
  input \pix_reg_reg[19] ;
  input \pix_reg_reg[18] ;
  input \pix_reg_reg[17] ;
  input \pix_reg_reg[16] ;

  wire Cr_submod_n_10;
  wire Cr_submod_n_11;
  wire Cr_submod_n_8;
  wire Cr_submod_n_9;
  wire [23:0]D;
  wire [0:0]E;
  wire [0:0]\FSM_onehot_state_reg[0] ;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire [0:0]SR;
  wire clk;
  wire de_in;
  wire \de_mux[6] ;
  wire de_reg;
  wire de_reg_reg;
  wire de_reg_reg_0;
  wire eof;
  wire h_sync_in;
  wire \h_sync_mux[1] ;
  wire \h_sync_mux[6] ;
  wire h_sync_reg;
  wire h_sync_reg_reg;
  wire h_sync_reg_reg_0;
  wire i0;
  wire i0_0;
  wire [0:0]i_primitive;
  wire [23:0]\pix_mux[1] ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[16] ;
  wire \pix_reg_reg[17] ;
  wire \pix_reg_reg[18] ;
  wire \pix_reg_reg[19] ;
  wire \pix_reg_reg[20] ;
  wire \pix_reg_reg[21] ;
  wire \pix_reg_reg[22] ;
  wire \pix_reg_reg[23] ;
  wire \pix_reg_reg[23]_0 ;
  wire \pix_reg_reg[23]_1 ;
  wire \pix_reg_reg[23]_2 ;
  wire \pix_reg_reg[7] ;
  wire [23:0]pixel_in;
  wire prev_h_sync;
  wire prev_v_sync;
  wire [2:0]sw;
  wire v_sync_in;
  wire \v_sync_mux[1] ;
  wire \v_sync_mux[6] ;
  wire v_sync_reg;
  wire v_sync_reg_reg;
  wire v_sync_reg_reg_0;
  wire [0:0]\val_reg[0] ;
  wire [0:0]\val_reg[2] ;

  hdmi_vga_vp_0_0_YCrCb_submod__parameterized0 Cb_submod
       (.D(D),
        .clk(clk),
        .i_primitive(i_primitive),
        .\pix_reg_reg[15] (\pix_reg_reg[15] ),
        .\pix_reg_reg[16] (\pix_reg_reg[16] ),
        .\pix_reg_reg[17] (\pix_reg_reg[17] ),
        .\pix_reg_reg[18] (\pix_reg_reg[18] ),
        .\pix_reg_reg[19] (\pix_reg_reg[19] ),
        .\pix_reg_reg[20] (\pix_reg_reg[20] ),
        .\pix_reg_reg[21] (\pix_reg_reg[21] ),
        .\pix_reg_reg[22] (\pix_reg_reg[22] ),
        .\pix_reg_reg[23] ({\pix_mux[1] [23:16],\pix_mux[1] [7:0]}),
        .\pix_reg_reg[23]_0 (\pix_reg_reg[23] ),
        .\pix_reg_reg[23]_1 (\pix_reg_reg[23]_0 ),
        .\pix_reg_reg[23]_2 (\pix_reg_reg[23]_1 ),
        .\pix_reg_reg[23]_3 (\pix_reg_reg[23]_2 ),
        .\pix_reg_reg[23]_4 (Cr_submod_n_10),
        .\pix_reg_reg[7] (\pix_reg_reg[7] ),
        .pixel_in(pixel_in),
        .sw(sw[2:1]),
        .\val_reg[25] (Cr_submod_n_11),
        .\val_reg[25]_0 (Cr_submod_n_8),
        .\val_reg[25]_1 (Cr_submod_n_9));
  hdmi_vga_vp_0_0_YCrCb_submod__parameterized1 Cr_submod
       (.S(\pix_mux[1] [7:0]),
        .clk(clk),
        .i_primitive(Cr_submod_n_8),
        .i_primitive_0(Cr_submod_n_9),
        .i_primitive_1(Cr_submod_n_10),
        .i_primitive_2(Cr_submod_n_11),
        .pixel_in(pixel_in),
        .sw(sw[0]));
  hdmi_vga_vp_0_0_YCrCb_submod Y_submod
       (.S(\pix_mux[1] [23:16]),
        .clk(clk),
        .pixel_in(pixel_in));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized0 del_sync
       (.E(E),
        .\FSM_onehot_state_reg[0] (\FSM_onehot_state_reg[0] ),
        .\FSM_onehot_state_reg[0]_0 (\FSM_onehot_state_reg[0]_0 ),
        .SR(SR),
        .clk(clk),
        .de_in(de_in),
        .\de_mux[6] (\de_mux[6] ),
        .de_reg(de_reg),
        .de_reg_reg(de_reg_reg),
        .de_reg_reg_0(de_reg_reg_0),
        .eof(eof),
        .h_sync_in(h_sync_in),
        .\h_sync_mux[6] (\h_sync_mux[6] ),
        .h_sync_reg(h_sync_reg),
        .h_sync_reg_reg(h_sync_reg_reg),
        .h_sync_reg_reg_0(h_sync_reg_reg_0),
        .i0(i0),
        .i0_0(i0_0),
        .prev_h_sync(prev_h_sync),
        .prev_v_sync(prev_v_sync),
        .sw(sw),
        .v_sync_in(v_sync_in),
        .\v_sync_mux[6] (\v_sync_mux[6] ),
        .v_sync_reg(v_sync_reg),
        .v_sync_reg_reg(v_sync_reg_reg),
        .v_sync_reg_reg_0(v_sync_reg_reg_0),
        .\val_reg[0] (\val_reg[0] ),
        .\val_reg[1] (\v_sync_mux[1] ),
        .\val_reg[2] (\h_sync_mux[1] ),
        .\val_reg[2]_0 (\val_reg[2] ));
endmodule

(* ORIG_REF_NAME = "YCrCb_submod" *) 
module hdmi_vga_vp_0_0_YCrCb_submod
   (S,
    clk,
    pixel_in);
  output [7:0]S;
  input clk;
  input [23:0]pixel_in;

  wire [7:0]S;
  wire [8:0]\adder1_out[0]_3 ;
  wire [8:0]\adder1_out[1]_4 ;
  wire clk;
  wire [8:0]delay_out;
  wire [25:17]\mult_out[0]_0 ;
  wire [25:17]\mult_out[1]_1 ;
  wire [25:17]\mult_out[2]_2 ;
  wire [23:0]pixel_in;
  wire [8:8]NLW_add3_S_UNCONNECTED;
  wire [35:0]NLW_multA1_P_UNCONNECTED;
  wire [35:0]NLW_multA2_P_UNCONNECTED;
  wire [35:0]NLW_multA3_P_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__1 add1
       (.A(\mult_out[0]_0 ),
        .B(\mult_out[1]_1 ),
        .CE(1'b1),
        .CLK(clk),
        .S(\adder1_out[0]_3 ));
  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__2 add2
       (.A(delay_out),
        .B(\adder1_out[0]_3 ),
        .CE(1'b1),
        .CLK(clk),
        .S(\adder1_out[1]_4 ));
  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__3 add3
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .B(\adder1_out[1]_4 ),
        .CE(1'b1),
        .CLK(clk),
        .S({NLW_add3_S_UNCONNECTED[8],S}));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line mult2add_delay
       (.A(delay_out),
        .P(\mult_out[2]_2 ),
        .clk(clk));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__1 multA1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[23:16]}),
        .B({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA1_P_UNCONNECTED[35:26],\mult_out[0]_0 ,NLW_multA1_P_UNCONNECTED[16:0]}));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__2 multA2
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[7:0]}),
        .B({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA2_P_UNCONNECTED[35:26],\mult_out[1]_1 ,NLW_multA2_P_UNCONNECTED[16:0]}));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__3 multA3
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[15:8]}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA3_P_UNCONNECTED[35:26],\mult_out[2]_2 ,NLW_multA3_P_UNCONNECTED[16:0]}));
endmodule

(* ORIG_REF_NAME = "YCrCb_submod" *) 
module hdmi_vga_vp_0_0_YCrCb_submod__parameterized0
   (D,
    i_primitive,
    clk,
    pixel_in,
    \pix_reg_reg[23] ,
    \pix_reg_reg[23]_0 ,
    \pix_reg_reg[7] ,
    \pix_reg_reg[23]_1 ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[23]_2 ,
    \val_reg[25] ,
    \val_reg[25]_0 ,
    \val_reg[25]_1 ,
    sw,
    \pix_reg_reg[23]_3 ,
    \pix_reg_reg[23]_4 ,
    \pix_reg_reg[22] ,
    \pix_reg_reg[21] ,
    \pix_reg_reg[20] ,
    \pix_reg_reg[19] ,
    \pix_reg_reg[18] ,
    \pix_reg_reg[17] ,
    \pix_reg_reg[16] );
  output [23:0]D;
  output [0:0]i_primitive;
  input clk;
  input [23:0]pixel_in;
  input [15:0]\pix_reg_reg[23] ;
  input \pix_reg_reg[23]_0 ;
  input \pix_reg_reg[7] ;
  input \pix_reg_reg[23]_1 ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[23]_2 ;
  input \val_reg[25] ;
  input \val_reg[25]_0 ;
  input \val_reg[25]_1 ;
  input [1:0]sw;
  input \pix_reg_reg[23]_3 ;
  input \pix_reg_reg[23]_4 ;
  input \pix_reg_reg[22] ;
  input \pix_reg_reg[21] ;
  input \pix_reg_reg[20] ;
  input \pix_reg_reg[19] ;
  input \pix_reg_reg[18] ;
  input \pix_reg_reg[17] ;
  input \pix_reg_reg[16] ;

  wire [23:0]D;
  wire [8:0]\adder1_out[0]_8 ;
  wire [8:0]\adder1_out[1]_9 ;
  wire clk;
  wire [8:0]delay_out;
  wire [0:0]i_primitive;
  wire [25:17]\mult_out[0]_5 ;
  wire [25:17]\mult_out[1]_6 ;
  wire [25:17]\mult_out[2]_7 ;
  wire [15:8]\pix_mux[1] ;
  wire \pix_reg[16]_i_2_n_0 ;
  wire \pix_reg[17]_i_2_n_0 ;
  wire \pix_reg[18]_i_2_n_0 ;
  wire \pix_reg[19]_i_2_n_0 ;
  wire \pix_reg[20]_i_2_n_0 ;
  wire \pix_reg[21]_i_2_n_0 ;
  wire \pix_reg[22]_i_2_n_0 ;
  wire \pix_reg[23]_i_2_n_0 ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[16] ;
  wire \pix_reg_reg[17] ;
  wire \pix_reg_reg[18] ;
  wire \pix_reg_reg[19] ;
  wire \pix_reg_reg[20] ;
  wire \pix_reg_reg[21] ;
  wire \pix_reg_reg[22] ;
  wire [15:0]\pix_reg_reg[23] ;
  wire \pix_reg_reg[23]_0 ;
  wire \pix_reg_reg[23]_1 ;
  wire \pix_reg_reg[23]_2 ;
  wire \pix_reg_reg[23]_3 ;
  wire \pix_reg_reg[23]_4 ;
  wire \pix_reg_reg[7] ;
  wire [23:0]pixel_in;
  wire [1:0]sw;
  wire \val[25]_i_2_n_0 ;
  wire \val[25]_i_4_n_0 ;
  wire \val[25]_i_5_n_0 ;
  wire \val[25]_i_6_n_0 ;
  wire \val_reg[25] ;
  wire \val_reg[25]_0 ;
  wire \val_reg[25]_1 ;
  wire [8:8]NLW_add3_S_UNCONNECTED;
  wire [35:0]NLW_multA1_P_UNCONNECTED;
  wire [35:0]NLW_multA2_P_UNCONNECTED;
  wire [35:0]NLW_multA3_P_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__4 add1
       (.A(\mult_out[0]_5 ),
        .B(\mult_out[1]_6 ),
        .CE(1'b1),
        .CLK(clk),
        .S(\adder1_out[0]_8 ));
  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__5 add2
       (.A(delay_out),
        .B(\adder1_out[0]_8 ),
        .CE(1'b1),
        .CLK(clk),
        .S(\adder1_out[1]_9 ));
  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__6 add3
       (.A({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .B(\adder1_out[1]_9 ),
        .CE(1'b1),
        .CLK(clk),
        .S({NLW_add3_S_UNCONNECTED[8],\pix_mux[1] }));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line_116 mult2add_delay
       (.A(delay_out),
        .P(\mult_out[2]_7 ),
        .clk(clk));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__4 multA1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[23:16]}),
        .B({1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA1_P_UNCONNECTED[35:26],\mult_out[0]_5 ,NLW_multA1_P_UNCONNECTED[16:0]}));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__5 multA2
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[7:0]}),
        .B({1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA2_P_UNCONNECTED[35:26],\mult_out[1]_6 ,NLW_multA2_P_UNCONNECTED[16:0]}));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__6 multA3
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[15:8]}),
        .B({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA3_P_UNCONNECTED[35:26],\mult_out[2]_7 ,NLW_multA3_P_UNCONNECTED[16:0]}));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[0]_i_1 
       (.I0(\pix_reg[16]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[8]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [0]),
        .O(D[0]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[10]_i_1 
       (.I0(\pix_reg[18]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[2]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [10]),
        .O(D[10]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[11]_i_1 
       (.I0(\pix_reg[19]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[3]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [11]),
        .O(D[11]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[12]_i_1 
       (.I0(\pix_reg[20]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[4]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [12]),
        .O(D[12]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[13]_i_1 
       (.I0(\pix_reg[21]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[5]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [13]),
        .O(D[13]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[14]_i_1 
       (.I0(\pix_reg[22]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[6]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [14]),
        .O(D[14]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[15]_i_1 
       (.I0(\pix_reg[23]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[7]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [15]),
        .O(D[15]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[16]_i_1 
       (.I0(\pix_reg[16]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[16]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [8]),
        .O(D[16]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[16]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[16] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[16]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[17]_i_1 
       (.I0(\pix_reg[17]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[17]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [9]),
        .O(D[17]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[17]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[17] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[17]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[18]_i_1 
       (.I0(\pix_reg[18]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[18]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [10]),
        .O(D[18]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[18]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[18] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[18]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[19]_i_1 
       (.I0(\pix_reg[19]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[19]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [11]),
        .O(D[19]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[19]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[19] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[19]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[1]_i_1 
       (.I0(\pix_reg[17]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[9]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [1]),
        .O(D[1]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[20]_i_1 
       (.I0(\pix_reg[20]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[20]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [12]),
        .O(D[20]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[20]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[20] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[20]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[21]_i_1 
       (.I0(\pix_reg[21]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[21]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [13]),
        .O(D[21]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[21]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[21] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[21]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[22]_i_1 
       (.I0(\pix_reg[22]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[22]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [14]),
        .O(D[22]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[22]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[22] ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[22]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[23]_i_1 
       (.I0(\pix_reg[23]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[23]),
        .I3(\pix_reg_reg[23]_2 ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [15]),
        .O(D[23]));
  LUT6 #(
    .INIT(64'hCDCCCCCCCCCCCCCC)) 
    \pix_reg[23]_i_2 
       (.I0(sw[1]),
        .I1(\pix_reg_reg[23]_3 ),
        .I2(\val[25]_i_2_n_0 ),
        .I3(\pix_reg_reg[23]_4 ),
        .I4(\val[25]_i_4_n_0 ),
        .I5(sw[0]),
        .O(\pix_reg[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[2]_i_1 
       (.I0(\pix_reg[18]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[10]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [2]),
        .O(D[2]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[3]_i_1 
       (.I0(\pix_reg[19]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[11]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [3]),
        .O(D[3]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[4]_i_1 
       (.I0(\pix_reg[20]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[12]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [4]),
        .O(D[4]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[5]_i_1 
       (.I0(\pix_reg[21]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[13]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [5]),
        .O(D[5]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[6]_i_1 
       (.I0(\pix_reg[22]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[14]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [6]),
        .O(D[6]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[7]_i_1 
       (.I0(\pix_reg[23]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[15]),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_reg_reg[23] [7]),
        .O(D[7]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[8]_i_1 
       (.I0(\pix_reg[16]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[0]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [8]),
        .O(D[8]));
  LUT6 #(
    .INIT(64'hFFFFFFEAFFEAFFEA)) 
    \pix_reg[9]_i_1 
       (.I0(\pix_reg[17]_i_2_n_0 ),
        .I1(\pix_reg_reg[23]_0 ),
        .I2(pixel_in[1]),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[23]_1 ),
        .I5(\pix_mux[1] [9]),
        .O(D[9]));
  LUT4 #(
    .INIT(16'h4000)) 
    \val[25]_i_1 
       (.I0(\val[25]_i_2_n_0 ),
        .I1(\val_reg[25] ),
        .I2(\pix_reg_reg[23] [7]),
        .I3(\val[25]_i_4_n_0 ),
        .O(i_primitive));
  LUT4 #(
    .INIT(16'hF888)) 
    \val[25]_i_2 
       (.I0(\val[25]_i_5_n_0 ),
        .I1(\val[25]_i_6_n_0 ),
        .I2(\val_reg[25]_0 ),
        .I3(\val_reg[25]_1 ),
        .O(\val[25]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT5 #(
    .INIT(32'h000BFFFF)) 
    \val[25]_i_4 
       (.I0(\val[25]_i_5_n_0 ),
        .I1(\pix_mux[1] [12]),
        .I2(\pix_mux[1] [13]),
        .I3(\pix_mux[1] [14]),
        .I4(\pix_mux[1] [15]),
        .O(\val[25]_i_4_n_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \val[25]_i_5 
       (.I0(\pix_mux[1] [9]),
        .I1(\pix_mux[1] [8]),
        .I2(\pix_mux[1] [11]),
        .I3(\pix_mux[1] [10]),
        .O(\val[25]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair0" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \val[25]_i_6 
       (.I0(\pix_mux[1] [15]),
        .I1(\pix_mux[1] [14]),
        .I2(\pix_mux[1] [13]),
        .I3(\pix_mux[1] [12]),
        .O(\val[25]_i_6_n_0 ));
endmodule

(* ORIG_REF_NAME = "YCrCb_submod" *) 
module hdmi_vga_vp_0_0_YCrCb_submod__parameterized1
   (S,
    i_primitive,
    i_primitive_0,
    i_primitive_1,
    i_primitive_2,
    clk,
    pixel_in,
    sw);
  output [7:0]S;
  output i_primitive;
  output i_primitive_0;
  output i_primitive_1;
  output i_primitive_2;
  input clk;
  input [23:0]pixel_in;
  input [0:0]sw;

  wire [7:0]S;
  wire [8:0]\adder1_out[0]_13 ;
  wire [8:0]\adder1_out[1]_14 ;
  wire clk;
  wire [8:0]delay_out;
  wire i_primitive;
  wire i_primitive_0;
  wire i_primitive_1;
  wire i_primitive_2;
  wire [25:17]\mult_out[0]_10 ;
  wire [25:17]\mult_out[1]_11 ;
  wire [25:17]\mult_out[2]_12 ;
  wire [23:0]pixel_in;
  wire [0:0]sw;
  wire \val[25]_i_9_n_0 ;
  wire [8:8]NLW_add3_S_UNCONNECTED;
  wire [35:0]NLW_multA1_P_UNCONNECTED;
  wire [35:0]NLW_multA2_P_UNCONNECTED;
  wire [35:0]NLW_multA3_P_UNCONNECTED;

  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__7 add1
       (.A(\mult_out[0]_10 ),
        .B(\mult_out[1]_11 ),
        .CE(1'b1),
        .CLK(clk),
        .S(\adder1_out[0]_13 ));
  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder__8 add2
       (.A(delay_out),
        .B(\adder1_out[0]_13 ),
        .CE(1'b1),
        .CLK(clk),
        .S(\adder1_out[1]_14 ));
  (* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_adder add3
       (.A({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .B(\adder1_out[1]_14 ),
        .CE(1'b1),
        .CLK(clk),
        .S({NLW_add3_S_UNCONNECTED[8],S}));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line_95 mult2add_delay
       (.A(delay_out),
        .P(\mult_out[2]_12 ),
        .clk(clk));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__7 multA1
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[23:16]}),
        .B({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA1_P_UNCONNECTED[35:26],\mult_out[0]_10 ,NLW_multA1_P_UNCONNECTED[16:0]}));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply__8 multA2
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[7:0]}),
        .B({1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA2_P_UNCONNECTED[35:26],\mult_out[1]_11 ,NLW_multA2_P_UNCONNECTED[16:0]}));
  (* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_multiply multA3
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,pixel_in[15:8]}),
        .B({1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(clk),
        .P({NLW_multA3_P_UNCONNECTED[35:26],\mult_out[2]_12 ,NLW_multA3_P_UNCONNECTED[16:0]}));
  LUT6 #(
    .INIT(64'h8888888888888000)) 
    \pix_reg[23]_i_7 
       (.I0(S[7]),
        .I1(sw),
        .I2(S[0]),
        .I3(S[1]),
        .I4(S[6]),
        .I5(\val[25]_i_9_n_0 ),
        .O(i_primitive_1));
  LUT4 #(
    .INIT(16'hFEEE)) 
    \val[25]_i_3 
       (.I0(\val[25]_i_9_n_0 ),
        .I1(S[6]),
        .I2(S[1]),
        .I3(S[0]),
        .O(i_primitive_2));
  LUT4 #(
    .INIT(16'h8000)) 
    \val[25]_i_7 
       (.I0(S[1]),
        .I1(S[0]),
        .I2(S[3]),
        .I3(S[2]),
        .O(i_primitive));
  LUT4 #(
    .INIT(16'h8000)) 
    \val[25]_i_8 
       (.I0(S[7]),
        .I1(S[6]),
        .I2(S[5]),
        .I3(S[4]),
        .O(i_primitive_0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \val[25]_i_9 
       (.I0(S[3]),
        .I1(S[2]),
        .I2(S[5]),
        .I3(S[4]),
        .O(\val[25]_i_9_n_0 ));
endmodule

(* ORIG_REF_NAME = "accum" *) 
module hdmi_vga_vp_0_0_accum
   (Q,
    \val_reg[31] ,
    eof,
    E,
    clk);
  output [31:0]Q;
  input [10:0]\val_reg[31] ;
  input eof;
  input [0:0]E;
  input clk;

  wire [31:0]A2r;
  wire [0:0]E;
  wire [31:0]Q;
  wire clk;
  wire eof;
  wire [10:0]\val_reg[31] ;
  wire NLW_cumm_CE_UNCONNECTED;

  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  c_addsub_0_HD243 cumm
       (.A(\val_reg[31] ),
        .B(Q),
        .CE(NLW_cumm_CE_UNCONNECTED),
        .S(A2r));
  hdmi_vga_vp_0_0_register__parameterized2 reggi
       (.D(A2r),
        .E(E),
        .Q(Q),
        .clk(clk),
        .eof(eof));
endmodule

(* ORIG_REF_NAME = "accum" *) 
module hdmi_vga_vp_0_0_accum__xdcDup__1
   (Q,
    eof,
    E,
    clk);
  output [19:0]Q;
  input eof;
  input [0:0]E;
  input clk;

  wire [31:0]A2r;
  wire [0:0]E;
  wire [19:0]Q;
  wire clk;
  wire eof;
  wire reggi_n_0;
  wire reggi_n_1;
  wire reggi_n_10;
  wire reggi_n_11;
  wire reggi_n_2;
  wire reggi_n_3;
  wire reggi_n_4;
  wire reggi_n_5;
  wire reggi_n_6;
  wire reggi_n_7;
  wire reggi_n_8;
  wire reggi_n_9;
  wire NLW_cumm_CE_UNCONNECTED;

  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_c_addsub_0 cumm
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b1}),
        .B({reggi_n_0,reggi_n_1,reggi_n_2,reggi_n_3,reggi_n_4,reggi_n_5,reggi_n_6,reggi_n_7,reggi_n_8,reggi_n_9,reggi_n_10,reggi_n_11,Q}),
        .CE(NLW_cumm_CE_UNCONNECTED),
        .S(A2r));
  hdmi_vga_vp_0_0_register__parameterized2_45 reggi
       (.D(A2r),
        .E(E),
        .Q({reggi_n_0,reggi_n_1,reggi_n_2,reggi_n_3,reggi_n_4,reggi_n_5,reggi_n_6,reggi_n_7,reggi_n_8,reggi_n_9,reggi_n_10,reggi_n_11,Q}),
        .clk(clk),
        .eof(eof));
endmodule

(* ORIG_REF_NAME = "accum" *) 
module hdmi_vga_vp_0_0_accum__xdcDup__2
   (\val_reg[31] ,
    Q,
    eof,
    E,
    clk);
  output [31:0]\val_reg[31] ;
  input [10:0]Q;
  input eof;
  input [0:0]E;
  input clk;

  wire [31:0]A2r;
  wire [0:0]E;
  wire [10:0]Q;
  wire clk;
  wire eof;
  wire [31:0]\val_reg[31] ;
  wire NLW_cumm_CE_UNCONNECTED;

  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_c_addsub_0 cumm
       (.A(Q),
        .B(\val_reg[31] ),
        .CE(NLW_cumm_CE_UNCONNECTED),
        .S(A2r));
  hdmi_vga_vp_0_0_register__parameterized2_44 reggi
       (.D(A2r),
        .E(E),
        .clk(clk),
        .eof(eof),
        .\val_reg[31]_0 (\val_reg[31] ));
endmodule

(* ORIG_REF_NAME = "add3" *) (* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_add3
   (A,
    CLK,
    CE,
    S);
  input [11:0]A;
  input CLK;
  input CE;
  output [11:0]S;


endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire \<const0> ;
  wire [8:0]B;
  wire CLK;
  wire [7:0]\^S ;
  wire NLW_U0_C_OUT_UNCONNECTED;
  wire [8:8]NLW_U0_S_UNCONNECTED;

  assign S[8] = \<const0> ;
  assign S[7:0] = \^S [7:0];
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14 U0
       (.A({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S({NLW_U0_S_UNCONNECTED[8],\^S }),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__1
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire [8:0]A;
  wire [8:0]B;
  wire CLK;
  wire [8:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__1 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__2
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire [8:0]A;
  wire [8:0]B;
  wire CLK;
  wire [8:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__2 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__3
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire \<const0> ;
  wire [8:0]B;
  wire CLK;
  wire [7:0]\^S ;
  wire NLW_U0_C_OUT_UNCONNECTED;
  wire [8:8]NLW_U0_S_UNCONNECTED;

  assign S[8] = \<const0> ;
  assign S[7:0] = \^S [7:0];
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__3 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S({NLW_U0_S_UNCONNECTED[8],\^S }),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__4
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire [8:0]A;
  wire [8:0]B;
  wire CLK;
  wire [8:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__4 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__5
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire [8:0]A;
  wire [8:0]B;
  wire CLK;
  wire [8:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__5 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__6
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire \<const0> ;
  wire [8:0]B;
  wire CLK;
  wire [7:0]\^S ;
  wire NLW_U0_C_OUT_UNCONNECTED;
  wire [8:8]NLW_U0_S_UNCONNECTED;

  assign S[8] = \<const0> ;
  assign S[7:0] = \^S [7:0];
  GND GND
       (.G(\<const0> ));
  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__6 U0
       (.A({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S({NLW_U0_S_UNCONNECTED[8],\^S }),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__7
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire [8:0]A;
  wire [8:0]B;
  wire CLK;
  wire [8:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__7 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "adder,c_addsub_v12_0_14,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "adder" *) 
(* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_adder__8
   (A,
    B,
    CLK,
    CE,
    S);
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [8:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [8:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF s_intf:c_out_intf:sinit_intf:sset_intf:bypass_intf:c_in_intf:add_intf:b_intf:a_intf, ASSOCIATED_RESET SCLR, ASSOCIATED_CLKEN CE, FREQ_HZ 100000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 s_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME s_intf, LAYERED_METADATA undef" *) output [8:0]S;

  wire [8:0]A;
  wire [8:0]B;
  wire CLK;
  wire [8:0]S;
  wire NLW_U0_C_OUT_UNCONNECTED;

  (* C_ADD_MODE = "0" *) 
  (* C_AINIT_VAL = "0" *) 
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "9" *) 
  (* C_BORROW_LOW = "1" *) 
  (* C_BYPASS_LOW = "0" *) 
  (* C_B_CONSTANT = "0" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "000000000" *) 
  (* C_B_WIDTH = "9" *) 
  (* C_CE_OVERRIDES_BYPASS = "1" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_BYPASS = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_C_IN = "0" *) 
  (* C_HAS_C_OUT = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_SINIT = "0" *) 
  (* C_HAS_SSET = "0" *) 
  (* C_IMPLEMENTATION = "1" *) 
  (* C_LATENCY = "2" *) 
  (* C_OUT_WIDTH = "9" *) 
  (* C_SCLR_OVERRIDES_SSET = "1" *) 
  (* C_SINIT_VAL = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_c_addsub_v12_0_14__8 U0
       (.A(A),
        .ADD(1'b1),
        .B(B),
        .BYPASS(1'b0),
        .CE(1'b1),
        .CLK(CLK),
        .C_IN(1'b0),
        .C_OUT(NLW_U0_C_OUT_UNCONNECTED),
        .S(S),
        .SCLR(1'b0),
        .SINIT(1'b0),
        .SSET(1'b0));
endmodule

(* ORIG_REF_NAME = "bounding_box" *) 
module hdmi_vga_vp_0_0_bounding_box
   (SR,
    CO,
    \x_pos_reg[10] ,
    \y_min_r_reg[10]_0 ,
    \y_pos_reg[10] ,
    Q,
    \y_max_r_reg[10]_0 ,
    \x_min_r_reg[10]_0 ,
    \y_min_r_reg[10]_1 ,
    \y_max_r_out_reg[10]_0 ,
    \y_max_r_out_reg[10]_1 ,
    \y_max_r_out_reg[9]_0 ,
    \y_max_r_out_reg[6]_0 ,
    \x_min_r_out_reg[9]_0 ,
    \x_min_r_out_reg[10]_0 ,
    \y_min_r_out_reg[9]_0 ,
    \y_min_r_out_reg[10]_0 ,
    \x_max_r_out_reg[10]_0 ,
    \x_max_r_out_reg[10]_1 ,
    \x_max_r_out_reg[9]_0 ,
    \x_max_r_out_reg[6]_0 ,
    \pixel_r3_inferred__0/i__carry ,
    \x_min_r_out_reg[10]_1 ,
    \y_min_r_out_reg[10]_1 ,
    eof,
    clk,
    S,
    \x_min_r_reg[10]_1 ,
    DI,
    x_max_r0_carry__0_0,
    \x_max_r_reg[10]_0 ,
    y_min_r0_carry__0_0,
    \y_min_r_reg[10]_2 ,
    y_max_r0_carry__0_0,
    y_max_r0_carry__0_1,
    \y_max_r_reg[10]_1 ,
    \x_min_r_reg[10]_2 ,
    \y_min_r_reg[10]_3 ,
    \val_reg[18]_srl6_i_1 ,
    \val_reg[18]_srl6_i_1_0 ,
    \val_reg[18]_srl6_i_1_1 ,
    \val_reg[18]_srl6_i_1_2 ,
    E,
    \x_max_r_reg[10]_1 ,
    \y_min_r_reg[10]_4 ,
    \y_max_r_reg[10]_2 );
  output [0:0]SR;
  output [0:0]CO;
  output [0:0]\x_pos_reg[10] ;
  output [0:0]\y_min_r_reg[10]_0 ;
  output [0:0]\y_pos_reg[10] ;
  output [10:0]Q;
  output [10:0]\y_max_r_reg[10]_0 ;
  output [2:0]\x_min_r_reg[10]_0 ;
  output [2:0]\y_min_r_reg[10]_1 ;
  output [1:0]\y_max_r_out_reg[10]_0 ;
  output [10:0]\y_max_r_out_reg[10]_1 ;
  output [3:0]\y_max_r_out_reg[9]_0 ;
  output [3:0]\y_max_r_out_reg[6]_0 ;
  output [3:0]\x_min_r_out_reg[9]_0 ;
  output [10:0]\x_min_r_out_reg[10]_0 ;
  output [3:0]\y_min_r_out_reg[9]_0 ;
  output [10:0]\y_min_r_out_reg[10]_0 ;
  output [1:0]\x_max_r_out_reg[10]_0 ;
  output [10:0]\x_max_r_out_reg[10]_1 ;
  output [3:0]\x_max_r_out_reg[9]_0 ;
  output [3:0]\x_max_r_out_reg[6]_0 ;
  output \pixel_r3_inferred__0/i__carry ;
  output [0:0]\x_min_r_out_reg[10]_1 ;
  output [0:0]\y_min_r_out_reg[10]_1 ;
  input eof;
  input clk;
  input [0:0]S;
  input [0:0]\x_min_r_reg[10]_1 ;
  input [2:0]DI;
  input [0:0]x_max_r0_carry__0_0;
  input [1:0]\x_max_r_reg[10]_0 ;
  input [0:0]y_min_r0_carry__0_0;
  input [0:0]\y_min_r_reg[10]_2 ;
  input [2:0]y_max_r0_carry__0_0;
  input [0:0]y_max_r0_carry__0_1;
  input [1:0]\y_max_r_reg[10]_1 ;
  input [10:0]\x_min_r_reg[10]_2 ;
  input [10:0]\y_min_r_reg[10]_3 ;
  input [0:0]\val_reg[18]_srl6_i_1 ;
  input [0:0]\val_reg[18]_srl6_i_1_0 ;
  input [0:0]\val_reg[18]_srl6_i_1_1 ;
  input [0:0]\val_reg[18]_srl6_i_1_2 ;
  input [0:0]E;
  input [0:0]\x_max_r_reg[10]_1 ;
  input [0:0]\y_min_r_reg[10]_4 ;
  input [0:0]\y_max_r_reg[10]_2 ;

  wire [0:0]CO;
  wire [2:0]DI;
  wire [0:0]E;
  wire [10:0]Q;
  wire [0:0]S;
  wire [0:0]SR;
  wire clk;
  wire eof;
  wire \pixel_r3_inferred__0/i__carry ;
  wire [0:0]\val_reg[18]_srl6_i_1 ;
  wire [0:0]\val_reg[18]_srl6_i_1_0 ;
  wire [0:0]\val_reg[18]_srl6_i_1_1 ;
  wire [0:0]\val_reg[18]_srl6_i_1_2 ;
  wire [0:0]x_max_r0_carry__0_0;
  wire x_max_r0_carry__0_i_3_n_0;
  wire x_max_r0_carry__0_i_4_n_0;
  wire x_max_r0_carry__0_n_3;
  wire x_max_r0_carry_i_4_n_0;
  wire x_max_r0_carry_i_5_n_0;
  wire x_max_r0_carry_i_6_n_0;
  wire x_max_r0_carry_i_7_n_0;
  wire x_max_r0_carry_n_0;
  wire x_max_r0_carry_n_1;
  wire x_max_r0_carry_n_2;
  wire x_max_r0_carry_n_3;
  wire [1:0]\x_max_r_out_reg[10]_0 ;
  wire [10:0]\x_max_r_out_reg[10]_1 ;
  wire [3:0]\x_max_r_out_reg[6]_0 ;
  wire [3:0]\x_max_r_out_reg[9]_0 ;
  wire [1:0]\x_max_r_reg[10]_0 ;
  wire [0:0]\x_max_r_reg[10]_1 ;
  wire [9:2]x_min_r;
  wire x_min_r0_carry__0_i_1_n_0;
  wire x_min_r0_carry__0_i_2_n_0;
  wire x_min_r0_carry__0_i_4_n_0;
  wire x_min_r0_carry__0_n_3;
  wire x_min_r0_carry_i_1_n_0;
  wire x_min_r0_carry_i_2_n_0;
  wire x_min_r0_carry_i_3_n_0;
  wire x_min_r0_carry_i_4_n_0;
  wire x_min_r0_carry_i_5_n_0;
  wire x_min_r0_carry_i_6_n_0;
  wire x_min_r0_carry_i_7_n_0;
  wire x_min_r0_carry_n_0;
  wire x_min_r0_carry_n_1;
  wire x_min_r0_carry_n_2;
  wire x_min_r0_carry_n_3;
  wire [10:0]\x_min_r_out_reg[10]_0 ;
  wire [0:0]\x_min_r_out_reg[10]_1 ;
  wire [3:0]\x_min_r_out_reg[9]_0 ;
  wire [2:0]\x_min_r_reg[10]_0 ;
  wire [0:0]\x_min_r_reg[10]_1 ;
  wire [10:0]\x_min_r_reg[10]_2 ;
  wire [0:0]\x_pos_reg[10] ;
  wire [2:0]y_max_r0_carry__0_0;
  wire [0:0]y_max_r0_carry__0_1;
  wire y_max_r0_carry__0_i_3_n_0;
  wire y_max_r0_carry__0_i_4_n_0;
  wire y_max_r0_carry__0_n_3;
  wire y_max_r0_carry_i_4_n_0;
  wire y_max_r0_carry_i_5_n_0;
  wire y_max_r0_carry_i_6_n_0;
  wire y_max_r0_carry_i_7_n_0;
  wire y_max_r0_carry_n_0;
  wire y_max_r0_carry_n_1;
  wire y_max_r0_carry_n_2;
  wire y_max_r0_carry_n_3;
  wire [1:0]\y_max_r_out_reg[10]_0 ;
  wire [10:0]\y_max_r_out_reg[10]_1 ;
  wire [3:0]\y_max_r_out_reg[6]_0 ;
  wire [3:0]\y_max_r_out_reg[9]_0 ;
  wire [10:0]\y_max_r_reg[10]_0 ;
  wire [1:0]\y_max_r_reg[10]_1 ;
  wire [0:0]\y_max_r_reg[10]_2 ;
  wire [9:2]y_min_r;
  wire [0:0]y_min_r0_carry__0_0;
  wire y_min_r0_carry__0_i_1_n_0;
  wire y_min_r0_carry__0_i_2_n_0;
  wire y_min_r0_carry__0_i_4_n_0;
  wire y_min_r0_carry__0_n_3;
  wire y_min_r0_carry_i_1_n_0;
  wire y_min_r0_carry_i_2_n_0;
  wire y_min_r0_carry_i_3_n_0;
  wire y_min_r0_carry_i_4_n_0;
  wire y_min_r0_carry_i_5_n_0;
  wire y_min_r0_carry_i_6_n_0;
  wire y_min_r0_carry_i_7_n_0;
  wire y_min_r0_carry_n_0;
  wire y_min_r0_carry_n_1;
  wire y_min_r0_carry_n_2;
  wire y_min_r0_carry_n_3;
  wire [10:0]\y_min_r_out_reg[10]_0 ;
  wire [0:0]\y_min_r_out_reg[10]_1 ;
  wire [3:0]\y_min_r_out_reg[9]_0 ;
  wire [0:0]\y_min_r_reg[10]_0 ;
  wire [2:0]\y_min_r_reg[10]_1 ;
  wire [0:0]\y_min_r_reg[10]_2 ;
  wire [10:0]\y_min_r_reg[10]_3 ;
  wire [0:0]\y_min_r_reg[10]_4 ;
  wire [0:0]\y_pos_reg[10] ;
  wire [3:0]NLW_x_max_r0_carry_O_UNCONNECTED;
  wire [3:2]NLW_x_max_r0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_x_max_r0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_x_min_r0_carry_O_UNCONNECTED;
  wire [3:2]NLW_x_min_r0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_x_min_r0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_y_max_r0_carry_O_UNCONNECTED;
  wire [3:2]NLW_y_max_r0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_y_max_r0_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_y_min_r0_carry_O_UNCONNECTED;
  wire [3:2]NLW_y_min_r0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_y_min_r0_carry__0_O_UNCONNECTED;

  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1
       (.I0(\y_max_r_out_reg[10]_1 [10]),
        .I1(\y_min_r_reg[10]_3 [10]),
        .O(\y_max_r_out_reg[10]_0 [1]));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1__1
       (.I0(\x_max_r_out_reg[10]_1 [10]),
        .I1(\x_min_r_reg[10]_2 [10]),
        .O(\x_max_r_out_reg[10]_0 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2
       (.I0(\y_max_r_out_reg[10]_1 [8]),
        .I1(\y_min_r_reg[10]_3 [8]),
        .I2(\y_min_r_reg[10]_3 [9]),
        .I3(\y_max_r_out_reg[10]_1 [9]),
        .O(\y_max_r_out_reg[10]_0 [0]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__1
       (.I0(\x_max_r_out_reg[10]_1 [8]),
        .I1(\x_min_r_reg[10]_2 [8]),
        .I2(\x_min_r_reg[10]_2 [9]),
        .I3(\x_max_r_out_reg[10]_1 [9]),
        .O(\x_max_r_out_reg[10]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_3__0
       (.I0(\y_min_r_out_reg[10]_0 [10]),
        .I1(\y_min_r_reg[10]_3 [10]),
        .O(\y_min_r_out_reg[10]_1 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1
       (.I0(\y_max_r_out_reg[10]_1 [6]),
        .I1(\y_min_r_reg[10]_3 [6]),
        .I2(\y_min_r_reg[10]_3 [7]),
        .I3(\y_max_r_out_reg[10]_1 [7]),
        .O(\y_max_r_out_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_1__1
       (.I0(\x_max_r_out_reg[10]_1 [9]),
        .I1(\x_min_r_reg[10]_2 [9]),
        .I2(\x_max_r_out_reg[10]_1 [10]),
        .I3(\x_min_r_reg[10]_2 [10]),
        .O(\x_max_r_out_reg[9]_0 [3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__2
       (.I0(\x_max_r_out_reg[10]_1 [6]),
        .I1(\x_min_r_reg[10]_2 [6]),
        .I2(\x_min_r_reg[10]_2 [7]),
        .I3(\x_max_r_out_reg[10]_1 [7]),
        .O(\x_max_r_out_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2
       (.I0(\y_max_r_out_reg[10]_1 [4]),
        .I1(\y_min_r_reg[10]_3 [4]),
        .I2(\y_min_r_reg[10]_3 [5]),
        .I3(\y_max_r_out_reg[10]_1 [5]),
        .O(\y_max_r_out_reg[6]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_2__1
       (.I0(\x_max_r_out_reg[10]_1 [7]),
        .I1(\x_min_r_reg[10]_2 [7]),
        .I2(\x_max_r_out_reg[10]_1 [6]),
        .I3(\x_min_r_reg[10]_2 [6]),
        .I4(\x_min_r_reg[10]_2 [8]),
        .I5(\x_max_r_out_reg[10]_1 [8]),
        .O(\x_max_r_out_reg[9]_0 [2]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__2
       (.I0(\x_max_r_out_reg[10]_1 [4]),
        .I1(\x_min_r_reg[10]_2 [4]),
        .I2(\x_min_r_reg[10]_2 [5]),
        .I3(\x_max_r_out_reg[10]_1 [5]),
        .O(\x_max_r_out_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3
       (.I0(\y_max_r_out_reg[10]_1 [2]),
        .I1(\y_min_r_reg[10]_3 [2]),
        .I2(\y_min_r_reg[10]_3 [3]),
        .I3(\y_max_r_out_reg[10]_1 [3]),
        .O(\y_max_r_out_reg[6]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_3__1
       (.I0(\x_max_r_out_reg[10]_1 [5]),
        .I1(\x_min_r_reg[10]_2 [5]),
        .I2(\x_max_r_out_reg[10]_1 [3]),
        .I3(\x_min_r_reg[10]_2 [3]),
        .I4(\x_min_r_reg[10]_2 [4]),
        .I5(\x_max_r_out_reg[10]_1 [4]),
        .O(\x_max_r_out_reg[9]_0 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__2
       (.I0(\x_max_r_out_reg[10]_1 [2]),
        .I1(\x_min_r_reg[10]_2 [2]),
        .I2(\x_min_r_reg[10]_2 [3]),
        .I3(\x_max_r_out_reg[10]_1 [3]),
        .O(\x_max_r_out_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4
       (.I0(\y_max_r_out_reg[10]_1 [0]),
        .I1(\y_min_r_reg[10]_3 [0]),
        .I2(\y_min_r_reg[10]_3 [1]),
        .I3(\y_max_r_out_reg[10]_1 [1]),
        .O(\y_max_r_out_reg[6]_0 [0]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    i__carry_i_4__1
       (.I0(\x_max_r_out_reg[10]_1 [1]),
        .I1(\x_min_r_reg[10]_2 [1]),
        .I2(\x_max_r_out_reg[10]_1 [0]),
        .I3(\x_min_r_reg[10]_2 [0]),
        .I4(\x_min_r_reg[10]_2 [2]),
        .I5(\x_max_r_out_reg[10]_1 [2]),
        .O(\x_max_r_out_reg[9]_0 [0]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__2
       (.I0(\x_max_r_out_reg[10]_1 [0]),
        .I1(\x_min_r_reg[10]_2 [0]),
        .I2(\x_min_r_reg[10]_2 [1]),
        .I3(\x_max_r_out_reg[10]_1 [1]),
        .O(\x_max_r_out_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r1_carry_i_1
       (.I0(\y_min_r_out_reg[10]_0 [9]),
        .I1(\y_min_r_reg[10]_3 [9]),
        .I2(\y_min_r_out_reg[10]_0 [10]),
        .I3(\y_min_r_reg[10]_3 [10]),
        .O(\y_min_r_out_reg[9]_0 [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r1_carry_i_2
       (.I0(\y_min_r_out_reg[10]_0 [7]),
        .I1(\y_min_r_reg[10]_3 [7]),
        .I2(\y_min_r_out_reg[10]_0 [6]),
        .I3(\y_min_r_reg[10]_3 [6]),
        .I4(\y_min_r_reg[10]_3 [8]),
        .I5(\y_min_r_out_reg[10]_0 [8]),
        .O(\y_min_r_out_reg[9]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r1_carry_i_3
       (.I0(\y_min_r_out_reg[10]_0 [5]),
        .I1(\y_min_r_reg[10]_3 [5]),
        .I2(\y_min_r_out_reg[10]_0 [3]),
        .I3(\y_min_r_reg[10]_3 [3]),
        .I4(\y_min_r_reg[10]_3 [4]),
        .I5(\y_min_r_out_reg[10]_0 [4]),
        .O(\y_min_r_out_reg[9]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r1_carry_i_4
       (.I0(\y_min_r_out_reg[10]_0 [1]),
        .I1(\y_min_r_reg[10]_3 [1]),
        .I2(\y_min_r_out_reg[10]_0 [0]),
        .I3(\y_min_r_reg[10]_3 [0]),
        .I4(\y_min_r_reg[10]_3 [2]),
        .I5(\y_min_r_out_reg[10]_0 [2]),
        .O(\y_min_r_out_reg[9]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r2_carry_i_1
       (.I0(\x_min_r_out_reg[10]_0 [9]),
        .I1(\x_min_r_reg[10]_2 [9]),
        .I2(\x_min_r_out_reg[10]_0 [10]),
        .I3(\x_min_r_reg[10]_2 [10]),
        .O(\x_min_r_out_reg[9]_0 [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r2_carry_i_2
       (.I0(\x_min_r_out_reg[10]_0 [7]),
        .I1(\x_min_r_reg[10]_2 [7]),
        .I2(\x_min_r_out_reg[10]_0 [6]),
        .I3(\x_min_r_reg[10]_2 [6]),
        .I4(\x_min_r_reg[10]_2 [8]),
        .I5(\x_min_r_out_reg[10]_0 [8]),
        .O(\x_min_r_out_reg[9]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r2_carry_i_3
       (.I0(\x_min_r_out_reg[10]_0 [5]),
        .I1(\x_min_r_reg[10]_2 [5]),
        .I2(\x_min_r_out_reg[10]_0 [3]),
        .I3(\x_min_r_reg[10]_2 [3]),
        .I4(\x_min_r_reg[10]_2 [4]),
        .I5(\x_min_r_out_reg[10]_0 [4]),
        .O(\x_min_r_out_reg[9]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r2_carry_i_4
       (.I0(\x_min_r_out_reg[10]_0 [1]),
        .I1(\x_min_r_reg[10]_2 [1]),
        .I2(\x_min_r_out_reg[10]_0 [0]),
        .I3(\x_min_r_reg[10]_2 [0]),
        .I4(\x_min_r_reg[10]_2 [2]),
        .I5(\x_min_r_out_reg[10]_0 [2]),
        .O(\x_min_r_out_reg[9]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r3_carry_i_1
       (.I0(\y_max_r_out_reg[10]_1 [9]),
        .I1(\y_min_r_reg[10]_3 [9]),
        .I2(\y_max_r_out_reg[10]_1 [10]),
        .I3(\y_min_r_reg[10]_3 [10]),
        .O(\y_max_r_out_reg[9]_0 [3]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r3_carry_i_2
       (.I0(\y_max_r_out_reg[10]_1 [7]),
        .I1(\y_min_r_reg[10]_3 [7]),
        .I2(\y_max_r_out_reg[10]_1 [6]),
        .I3(\y_min_r_reg[10]_3 [6]),
        .I4(\y_min_r_reg[10]_3 [8]),
        .I5(\y_max_r_out_reg[10]_1 [8]),
        .O(\y_max_r_out_reg[9]_0 [2]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r3_carry_i_3
       (.I0(\y_max_r_out_reg[10]_1 [5]),
        .I1(\y_min_r_reg[10]_3 [5]),
        .I2(\y_max_r_out_reg[10]_1 [3]),
        .I3(\y_min_r_reg[10]_3 [3]),
        .I4(\y_min_r_reg[10]_3 [4]),
        .I5(\y_max_r_out_reg[10]_1 [4]),
        .O(\y_max_r_out_reg[9]_0 [1]));
  LUT6 #(
    .INIT(64'h9009000000009009)) 
    pixel_r3_carry_i_4
       (.I0(\y_max_r_out_reg[10]_1 [1]),
        .I1(\y_min_r_reg[10]_3 [1]),
        .I2(\y_max_r_out_reg[10]_1 [0]),
        .I3(\y_min_r_reg[10]_3 [0]),
        .I4(\y_min_r_reg[10]_3 [2]),
        .I5(\y_max_r_out_reg[10]_1 [2]),
        .O(\y_max_r_out_reg[9]_0 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    pixel_r4_carry__0_i_3
       (.I0(\x_min_r_out_reg[10]_0 [10]),
        .I1(\x_min_r_reg[10]_2 [10]),
        .O(\x_min_r_out_reg[10]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    prev_eof_reg
       (.C(clk),
        .CE(1'b1),
        .D(eof),
        .Q(SR),
        .R(1'b0));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \val_reg[26]_srl6_i_2 
       (.I0(\val_reg[18]_srl6_i_1 ),
        .I1(\val_reg[18]_srl6_i_1_0 ),
        .I2(\val_reg[18]_srl6_i_1_1 ),
        .I3(\val_reg[18]_srl6_i_1_2 ),
        .O(\pixel_r3_inferred__0/i__carry ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 x_max_r0_carry
       (.CI(1'b0),
        .CO({x_max_r0_carry_n_0,x_max_r0_carry_n_1,x_max_r0_carry_n_2,x_max_r0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({DI,x_max_r0_carry_i_4_n_0}),
        .O(NLW_x_max_r0_carry_O_UNCONNECTED[3:0]),
        .S({x_max_r0_carry_i_5_n_0,x_max_r0_carry_i_6_n_0,x_max_r0_carry_i_7_n_0,x_max_r0_carry__0_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 x_max_r0_carry__0
       (.CI(x_max_r0_carry_n_0),
        .CO({NLW_x_max_r0_carry__0_CO_UNCONNECTED[3:2],\x_pos_reg[10] ,x_max_r0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\x_max_r_reg[10]_0 }),
        .O(NLW_x_max_r0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,x_max_r0_carry__0_i_3_n_0,x_max_r0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    x_max_r0_carry__0_i_3
       (.I0(Q[10]),
        .I1(\x_min_r_reg[10]_2 [10]),
        .O(x_max_r0_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_max_r0_carry__0_i_4
       (.I0(Q[8]),
        .I1(\x_min_r_reg[10]_2 [8]),
        .I2(Q[9]),
        .I3(\x_min_r_reg[10]_2 [9]),
        .O(x_max_r0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h7150)) 
    x_max_r0_carry_i_4
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(\x_min_r_reg[10]_2 [1]),
        .I3(\x_min_r_reg[10]_2 [0]),
        .O(x_max_r0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_max_r0_carry_i_5
       (.I0(Q[6]),
        .I1(\x_min_r_reg[10]_2 [6]),
        .I2(Q[7]),
        .I3(\x_min_r_reg[10]_2 [7]),
        .O(x_max_r0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_max_r0_carry_i_6
       (.I0(Q[4]),
        .I1(\x_min_r_reg[10]_2 [4]),
        .I2(Q[5]),
        .I3(\x_min_r_reg[10]_2 [5]),
        .O(x_max_r0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_max_r0_carry_i_7
       (.I0(Q[2]),
        .I1(\x_min_r_reg[10]_2 [2]),
        .I2(Q[3]),
        .I3(\x_min_r_reg[10]_2 [3]),
        .O(x_max_r0_carry_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[0] 
       (.C(clk),
        .CE(eof),
        .D(Q[0]),
        .Q(\x_max_r_out_reg[10]_1 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[10] 
       (.C(clk),
        .CE(eof),
        .D(Q[10]),
        .Q(\x_max_r_out_reg[10]_1 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[1] 
       (.C(clk),
        .CE(eof),
        .D(Q[1]),
        .Q(\x_max_r_out_reg[10]_1 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[2] 
       (.C(clk),
        .CE(eof),
        .D(Q[2]),
        .Q(\x_max_r_out_reg[10]_1 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[3] 
       (.C(clk),
        .CE(eof),
        .D(Q[3]),
        .Q(\x_max_r_out_reg[10]_1 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[4] 
       (.C(clk),
        .CE(eof),
        .D(Q[4]),
        .Q(\x_max_r_out_reg[10]_1 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[5] 
       (.C(clk),
        .CE(eof),
        .D(Q[5]),
        .Q(\x_max_r_out_reg[10]_1 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[6] 
       (.C(clk),
        .CE(eof),
        .D(Q[6]),
        .Q(\x_max_r_out_reg[10]_1 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[7] 
       (.C(clk),
        .CE(eof),
        .D(Q[7]),
        .Q(\x_max_r_out_reg[10]_1 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[8] 
       (.C(clk),
        .CE(eof),
        .D(Q[8]),
        .Q(\x_max_r_out_reg[10]_1 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_out_reg[9] 
       (.C(clk),
        .CE(eof),
        .D(Q[9]),
        .Q(\x_max_r_out_reg[10]_1 [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[0] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[10] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [10]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[1] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[2] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[3] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[4] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[5] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[6] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[7] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [7]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[8] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [8]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_max_r_reg[9] 
       (.C(clk),
        .CE(\x_max_r_reg[10]_1 ),
        .D(\x_min_r_reg[10]_2 [9]),
        .Q(Q[9]),
        .R(SR));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 x_min_r0_carry
       (.CI(1'b0),
        .CO({x_min_r0_carry_n_0,x_min_r0_carry_n_1,x_min_r0_carry_n_2,x_min_r0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({x_min_r0_carry_i_1_n_0,x_min_r0_carry_i_2_n_0,x_min_r0_carry_i_3_n_0,x_min_r0_carry_i_4_n_0}),
        .O(NLW_x_min_r0_carry_O_UNCONNECTED[3:0]),
        .S({x_min_r0_carry_i_5_n_0,x_min_r0_carry_i_6_n_0,x_min_r0_carry_i_7_n_0,S}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 x_min_r0_carry__0
       (.CI(x_min_r0_carry_n_0),
        .CO({NLW_x_min_r0_carry__0_CO_UNCONNECTED[3:2],CO,x_min_r0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,x_min_r0_carry__0_i_1_n_0,x_min_r0_carry__0_i_2_n_0}),
        .O(NLW_x_min_r0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,\x_min_r_reg[10]_1 ,x_min_r0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    x_min_r0_carry__0_i_1
       (.I0(\x_min_r_reg[10]_0 [2]),
        .I1(\x_min_r_reg[10]_2 [10]),
        .O(x_min_r0_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_min_r0_carry__0_i_2
       (.I0(x_min_r[9]),
        .I1(\x_min_r_reg[10]_2 [9]),
        .I2(x_min_r[8]),
        .I3(\x_min_r_reg[10]_2 [8]),
        .O(x_min_r0_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_min_r0_carry__0_i_4
       (.I0(x_min_r[8]),
        .I1(\x_min_r_reg[10]_2 [8]),
        .I2(x_min_r[9]),
        .I3(\x_min_r_reg[10]_2 [9]),
        .O(x_min_r0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_min_r0_carry_i_1
       (.I0(x_min_r[7]),
        .I1(\x_min_r_reg[10]_2 [7]),
        .I2(x_min_r[6]),
        .I3(\x_min_r_reg[10]_2 [6]),
        .O(x_min_r0_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_min_r0_carry_i_2
       (.I0(x_min_r[5]),
        .I1(\x_min_r_reg[10]_2 [5]),
        .I2(x_min_r[4]),
        .I3(\x_min_r_reg[10]_2 [4]),
        .O(x_min_r0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_min_r0_carry_i_3
       (.I0(x_min_r[3]),
        .I1(\x_min_r_reg[10]_2 [3]),
        .I2(x_min_r[2]),
        .I3(\x_min_r_reg[10]_2 [2]),
        .O(x_min_r0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_min_r0_carry_i_4
       (.I0(\x_min_r_reg[10]_0 [1]),
        .I1(\x_min_r_reg[10]_2 [1]),
        .I2(\x_min_r_reg[10]_0 [0]),
        .I3(\x_min_r_reg[10]_2 [0]),
        .O(x_min_r0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_min_r0_carry_i_5
       (.I0(x_min_r[6]),
        .I1(\x_min_r_reg[10]_2 [6]),
        .I2(x_min_r[7]),
        .I3(\x_min_r_reg[10]_2 [7]),
        .O(x_min_r0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_min_r0_carry_i_6
       (.I0(x_min_r[4]),
        .I1(\x_min_r_reg[10]_2 [4]),
        .I2(x_min_r[5]),
        .I3(\x_min_r_reg[10]_2 [5]),
        .O(x_min_r0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    x_min_r0_carry_i_7
       (.I0(x_min_r[2]),
        .I1(\x_min_r_reg[10]_2 [2]),
        .I2(x_min_r[3]),
        .I3(\x_min_r_reg[10]_2 [3]),
        .O(x_min_r0_carry_i_7_n_0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[0] 
       (.C(clk),
        .CE(eof),
        .D(\x_min_r_reg[10]_0 [0]),
        .Q(\x_min_r_out_reg[10]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[10] 
       (.C(clk),
        .CE(eof),
        .D(\x_min_r_reg[10]_0 [2]),
        .Q(\x_min_r_out_reg[10]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[1] 
       (.C(clk),
        .CE(eof),
        .D(\x_min_r_reg[10]_0 [1]),
        .Q(\x_min_r_out_reg[10]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[2] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[2]),
        .Q(\x_min_r_out_reg[10]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[3] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[3]),
        .Q(\x_min_r_out_reg[10]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[4] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[4]),
        .Q(\x_min_r_out_reg[10]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[5] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[5]),
        .Q(\x_min_r_out_reg[10]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[6] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[6]),
        .Q(\x_min_r_out_reg[10]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \x_min_r_out_reg[7] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[7]),
        .Q(\x_min_r_out_reg[10]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_min_r_out_reg[8] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[8]),
        .Q(\x_min_r_out_reg[10]_0 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \x_min_r_out_reg[9] 
       (.C(clk),
        .CE(eof),
        .D(x_min_r[9]),
        .Q(\x_min_r_out_reg[10]_0 [9]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [0]),
        .Q(\x_min_r_reg[10]_0 [0]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [10]),
        .Q(\x_min_r_reg[10]_0 [2]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [1]),
        .Q(\x_min_r_reg[10]_0 [1]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [2]),
        .Q(x_min_r[2]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [3]),
        .Q(x_min_r[3]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [4]),
        .Q(x_min_r[4]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [5]),
        .Q(x_min_r[5]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [6]),
        .Q(x_min_r[6]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \x_min_r_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [7]),
        .Q(x_min_r[7]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_min_r_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [8]),
        .Q(x_min_r[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_min_r_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\x_min_r_reg[10]_2 [9]),
        .Q(x_min_r[9]),
        .R(SR));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 y_max_r0_carry
       (.CI(1'b0),
        .CO({y_max_r0_carry_n_0,y_max_r0_carry_n_1,y_max_r0_carry_n_2,y_max_r0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({y_max_r0_carry__0_0,y_max_r0_carry_i_4_n_0}),
        .O(NLW_y_max_r0_carry_O_UNCONNECTED[3:0]),
        .S({y_max_r0_carry_i_5_n_0,y_max_r0_carry_i_6_n_0,y_max_r0_carry_i_7_n_0,y_max_r0_carry__0_1}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 y_max_r0_carry__0
       (.CI(y_max_r0_carry_n_0),
        .CO({NLW_y_max_r0_carry__0_CO_UNCONNECTED[3:2],\y_pos_reg[10] ,y_max_r0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\y_max_r_reg[10]_1 }),
        .O(NLW_y_max_r0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,y_max_r0_carry__0_i_3_n_0,y_max_r0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h9)) 
    y_max_r0_carry__0_i_3
       (.I0(\y_max_r_reg[10]_0 [10]),
        .I1(\y_min_r_reg[10]_3 [10]),
        .O(y_max_r0_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_max_r0_carry__0_i_4
       (.I0(\y_max_r_reg[10]_0 [8]),
        .I1(\y_min_r_reg[10]_3 [8]),
        .I2(\y_max_r_reg[10]_0 [9]),
        .I3(\y_min_r_reg[10]_3 [9]),
        .O(y_max_r0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h7150)) 
    y_max_r0_carry_i_4
       (.I0(\y_max_r_reg[10]_0 [1]),
        .I1(\y_max_r_reg[10]_0 [0]),
        .I2(\y_min_r_reg[10]_3 [1]),
        .I3(\y_min_r_reg[10]_3 [0]),
        .O(y_max_r0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_max_r0_carry_i_5
       (.I0(\y_max_r_reg[10]_0 [6]),
        .I1(\y_min_r_reg[10]_3 [6]),
        .I2(\y_max_r_reg[10]_0 [7]),
        .I3(\y_min_r_reg[10]_3 [7]),
        .O(y_max_r0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_max_r0_carry_i_6
       (.I0(\y_max_r_reg[10]_0 [4]),
        .I1(\y_min_r_reg[10]_3 [4]),
        .I2(\y_max_r_reg[10]_0 [5]),
        .I3(\y_min_r_reg[10]_3 [5]),
        .O(y_max_r0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_max_r0_carry_i_7
       (.I0(\y_max_r_reg[10]_0 [2]),
        .I1(\y_min_r_reg[10]_3 [2]),
        .I2(\y_max_r_reg[10]_0 [3]),
        .I3(\y_min_r_reg[10]_3 [3]),
        .O(y_max_r0_carry_i_7_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[0] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [0]),
        .Q(\y_max_r_out_reg[10]_1 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[10] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [10]),
        .Q(\y_max_r_out_reg[10]_1 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[1] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [1]),
        .Q(\y_max_r_out_reg[10]_1 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[2] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [2]),
        .Q(\y_max_r_out_reg[10]_1 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[3] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [3]),
        .Q(\y_max_r_out_reg[10]_1 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[4] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [4]),
        .Q(\y_max_r_out_reg[10]_1 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[5] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [5]),
        .Q(\y_max_r_out_reg[10]_1 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[6] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [6]),
        .Q(\y_max_r_out_reg[10]_1 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[7] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [7]),
        .Q(\y_max_r_out_reg[10]_1 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[8] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [8]),
        .Q(\y_max_r_out_reg[10]_1 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_out_reg[9] 
       (.C(clk),
        .CE(eof),
        .D(\y_max_r_reg[10]_0 [9]),
        .Q(\y_max_r_out_reg[10]_1 [9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[0] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [0]),
        .Q(\y_max_r_reg[10]_0 [0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[10] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [10]),
        .Q(\y_max_r_reg[10]_0 [10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[1] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [1]),
        .Q(\y_max_r_reg[10]_0 [1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[2] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [2]),
        .Q(\y_max_r_reg[10]_0 [2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[3] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [3]),
        .Q(\y_max_r_reg[10]_0 [3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[4] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [4]),
        .Q(\y_max_r_reg[10]_0 [4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[5] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [5]),
        .Q(\y_max_r_reg[10]_0 [5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[6] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [6]),
        .Q(\y_max_r_reg[10]_0 [6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[7] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [7]),
        .Q(\y_max_r_reg[10]_0 [7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[8] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [8]),
        .Q(\y_max_r_reg[10]_0 [8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_max_r_reg[9] 
       (.C(clk),
        .CE(\y_max_r_reg[10]_2 ),
        .D(\y_min_r_reg[10]_3 [9]),
        .Q(\y_max_r_reg[10]_0 [9]),
        .R(SR));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 y_min_r0_carry
       (.CI(1'b0),
        .CO({y_min_r0_carry_n_0,y_min_r0_carry_n_1,y_min_r0_carry_n_2,y_min_r0_carry_n_3}),
        .CYINIT(1'b0),
        .DI({y_min_r0_carry_i_1_n_0,y_min_r0_carry_i_2_n_0,y_min_r0_carry_i_3_n_0,y_min_r0_carry_i_4_n_0}),
        .O(NLW_y_min_r0_carry_O_UNCONNECTED[3:0]),
        .S({y_min_r0_carry_i_5_n_0,y_min_r0_carry_i_6_n_0,y_min_r0_carry_i_7_n_0,y_min_r0_carry__0_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 y_min_r0_carry__0
       (.CI(y_min_r0_carry_n_0),
        .CO({NLW_y_min_r0_carry__0_CO_UNCONNECTED[3:2],\y_min_r_reg[10]_0 ,y_min_r0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,y_min_r0_carry__0_i_1_n_0,y_min_r0_carry__0_i_2_n_0}),
        .O(NLW_y_min_r0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,\y_min_r_reg[10]_2 ,y_min_r0_carry__0_i_4_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    y_min_r0_carry__0_i_1
       (.I0(\y_min_r_reg[10]_1 [2]),
        .I1(\y_min_r_reg[10]_3 [10]),
        .O(y_min_r0_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_min_r0_carry__0_i_2
       (.I0(y_min_r[9]),
        .I1(\y_min_r_reg[10]_3 [9]),
        .I2(y_min_r[8]),
        .I3(\y_min_r_reg[10]_3 [8]),
        .O(y_min_r0_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_min_r0_carry__0_i_4
       (.I0(y_min_r[8]),
        .I1(\y_min_r_reg[10]_3 [8]),
        .I2(y_min_r[9]),
        .I3(\y_min_r_reg[10]_3 [9]),
        .O(y_min_r0_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_min_r0_carry_i_1
       (.I0(y_min_r[7]),
        .I1(\y_min_r_reg[10]_3 [7]),
        .I2(y_min_r[6]),
        .I3(\y_min_r_reg[10]_3 [6]),
        .O(y_min_r0_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_min_r0_carry_i_2
       (.I0(y_min_r[5]),
        .I1(\y_min_r_reg[10]_3 [5]),
        .I2(y_min_r[4]),
        .I3(\y_min_r_reg[10]_3 [4]),
        .O(y_min_r0_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_min_r0_carry_i_3
       (.I0(y_min_r[3]),
        .I1(\y_min_r_reg[10]_3 [3]),
        .I2(y_min_r[2]),
        .I3(\y_min_r_reg[10]_3 [2]),
        .O(y_min_r0_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_min_r0_carry_i_4
       (.I0(\y_min_r_reg[10]_1 [1]),
        .I1(\y_min_r_reg[10]_3 [1]),
        .I2(\y_min_r_reg[10]_1 [0]),
        .I3(\y_min_r_reg[10]_3 [0]),
        .O(y_min_r0_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_min_r0_carry_i_5
       (.I0(y_min_r[6]),
        .I1(\y_min_r_reg[10]_3 [6]),
        .I2(y_min_r[7]),
        .I3(\y_min_r_reg[10]_3 [7]),
        .O(y_min_r0_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_min_r0_carry_i_6
       (.I0(y_min_r[4]),
        .I1(\y_min_r_reg[10]_3 [4]),
        .I2(y_min_r[5]),
        .I3(\y_min_r_reg[10]_3 [5]),
        .O(y_min_r0_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    y_min_r0_carry_i_7
       (.I0(y_min_r[2]),
        .I1(\y_min_r_reg[10]_3 [2]),
        .I2(y_min_r[3]),
        .I3(\y_min_r_reg[10]_3 [3]),
        .O(y_min_r0_carry_i_7_n_0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[0] 
       (.C(clk),
        .CE(eof),
        .D(\y_min_r_reg[10]_1 [0]),
        .Q(\y_min_r_out_reg[10]_0 [0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_out_reg[10] 
       (.C(clk),
        .CE(eof),
        .D(\y_min_r_reg[10]_1 [2]),
        .Q(\y_min_r_out_reg[10]_0 [10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[1] 
       (.C(clk),
        .CE(eof),
        .D(\y_min_r_reg[10]_1 [1]),
        .Q(\y_min_r_out_reg[10]_0 [1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[2] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[2]),
        .Q(\y_min_r_out_reg[10]_0 [2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[3] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[3]),
        .Q(\y_min_r_out_reg[10]_0 [3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_out_reg[4] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[4]),
        .Q(\y_min_r_out_reg[10]_0 [4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_out_reg[5] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[5]),
        .Q(\y_min_r_out_reg[10]_0 [5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[6] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[6]),
        .Q(\y_min_r_out_reg[10]_0 [6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[7] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[7]),
        .Q(\y_min_r_out_reg[10]_0 [7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_out_reg[8] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[8]),
        .Q(\y_min_r_out_reg[10]_0 [8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b1)) 
    \y_min_r_out_reg[9] 
       (.C(clk),
        .CE(eof),
        .D(y_min_r[9]),
        .Q(\y_min_r_out_reg[10]_0 [9]),
        .R(1'b0));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[0] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [0]),
        .Q(\y_min_r_reg[10]_1 [0]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_reg[10] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [10]),
        .Q(\y_min_r_reg[10]_1 [2]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[1] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [1]),
        .Q(\y_min_r_reg[10]_1 [1]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[2] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [2]),
        .Q(y_min_r[2]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[3] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [3]),
        .Q(y_min_r[3]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_reg[4] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [4]),
        .Q(y_min_r[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_reg[5] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [5]),
        .Q(y_min_r[5]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[6] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [6]),
        .Q(y_min_r[6]),
        .S(SR));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[7] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [7]),
        .Q(y_min_r[7]),
        .S(SR));
  FDRE #(
    .INIT(1'b0)) 
    \y_min_r_reg[8] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [8]),
        .Q(y_min_r[8]),
        .R(SR));
  FDSE #(
    .INIT(1'b1)) 
    \y_min_r_reg[9] 
       (.C(clk),
        .CE(\y_min_r_reg[10]_4 ),
        .D(\y_min_r_reg[10]_3 [9]),
        .Q(y_min_r[9]),
        .S(SR));
endmodule

(* ORIG_REF_NAME = "c_addsub_0" *) (* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_c_addsub_0
   (A,
    B,
    CE,
    S);
  input [10:0]A;
  input [31:0]B;
  input CE;
  output [31:0]S;


endmodule

(* ORIG_REF_NAME = "centroid" *) 
module hdmi_vga_vp_0_0_centroid
   (prev_h_sync,
    prev_v_sync,
    \de_mux[4] ,
    \FSM_onehot_state_reg[0] ,
    \FSM_onehot_state_reg[0]_0 ,
    \pixel_reg_reg[0] ,
    \val_reg[18] ,
    \val_reg[26] ,
    \v_sync_mux[4] ,
    \h_sync_mux[4] ,
    clk,
    \h_sync_mux[1] ,
    \v_sync_mux[1] ,
    eof,
    \pix_mux[5] ,
    \pix_mux[6] ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[15]_0 ,
    E,
    \dividend_reg_reg[31] ,
    D,
    SR,
    \y_pos_reg[10] ,
    \y_pos_reg[10]_0 );
  output prev_h_sync;
  output prev_v_sync;
  output \de_mux[4] ;
  output \FSM_onehot_state_reg[0] ;
  output \FSM_onehot_state_reg[0]_0 ;
  output \pixel_reg_reg[0] ;
  output \val_reg[18] ;
  output \val_reg[26] ;
  output \v_sync_mux[4] ;
  output \h_sync_mux[4] ;
  input clk;
  input \h_sync_mux[1] ;
  input \v_sync_mux[1] ;
  input eof;
  input [0:0]\pix_mux[5] ;
  input [0:0]\pix_mux[6] ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[15]_0 ;
  input [0:0]E;
  input [0:0]\dividend_reg_reg[31] ;
  input [1:0]D;
  input [0:0]SR;
  input [0:0]\y_pos_reg[10] ;
  input [0:0]\y_pos_reg[10]_0 ;

  wire [1:0]D;
  wire [0:0]E;
  wire \FSM_onehot_state_reg[0] ;
  wire \FSM_onehot_state_reg[0]_0 ;
  wire [0:0]SR;
  wire bound_box_n_1;
  wire bound_box_n_100;
  wire bound_box_n_101;
  wire bound_box_n_102;
  wire bound_box_n_103;
  wire bound_box_n_104;
  wire bound_box_n_105;
  wire bound_box_n_106;
  wire bound_box_n_107;
  wire bound_box_n_2;
  wire bound_box_n_3;
  wire bound_box_n_33;
  wire bound_box_n_34;
  wire bound_box_n_4;
  wire bound_box_n_46;
  wire bound_box_n_47;
  wire bound_box_n_48;
  wire bound_box_n_49;
  wire bound_box_n_50;
  wire bound_box_n_51;
  wire bound_box_n_52;
  wire bound_box_n_53;
  wire bound_box_n_54;
  wire bound_box_n_55;
  wire bound_box_n_56;
  wire bound_box_n_57;
  wire bound_box_n_69;
  wire bound_box_n_70;
  wire bound_box_n_71;
  wire bound_box_n_72;
  wire bound_box_n_84;
  wire bound_box_n_85;
  wire bound_box_n_97;
  wire bound_box_n_98;
  wire bound_box_n_99;
  wire cent_counter_n_14;
  wire cent_counter_n_15;
  wire cent_counter_n_2;
  wire cent_counter_n_27;
  wire cent_counter_n_28;
  wire cent_counter_n_29;
  wire cent_counter_n_30;
  wire cent_counter_n_31;
  wire cent_counter_n_32;
  wire cent_counter_n_33;
  wire cent_counter_n_34;
  wire cent_counter_n_35;
  wire cent_counter_n_36;
  wire cent_counter_n_37;
  wire cent_counter_n_38;
  wire cent_counter_n_39;
  wire cent_counter_n_40;
  wire cent_counter_n_41;
  wire cent_counter_n_42;
  wire cent_counter_n_43;
  wire cent_counter_n_44;
  wire cent_counter_n_45;
  wire cent_counter_n_46;
  wire cent_counter_n_47;
  wire cent_counter_n_48;
  wire cent_counter_n_49;
  wire cent_counter_n_50;
  wire cent_counter_n_51;
  wire cent_counter_n_52;
  wire cent_counter_n_53;
  wire cent_counter_n_54;
  wire cent_counter_n_55;
  wire cent_counter_n_56;
  wire cent_counter_n_57;
  wire cent_counter_n_58;
  wire cent_counter_n_59;
  wire cent_counter_n_60;
  wire cent_counter_n_61;
  wire cent_counter_n_62;
  wire cent_counter_n_63;
  wire cent_counter_n_64;
  wire cent_counter_n_65;
  wire cent_counter_n_66;
  wire cent_counter_n_67;
  wire cent_counter_n_68;
  wire cent_counter_n_69;
  wire cent_counter_n_70;
  wire cent_counter_n_71;
  wire cent_counter_n_72;
  wire cent_counter_n_73;
  wire circle_drawer_n_0;
  wire circle_drawer_n_1;
  wire clk;
  wire counter_delay_n_6;
  wire de_box_out;
  wire de_count_out;
  wire \de_mux[4] ;
  wire div_mx_n_1;
  wire div_mx_n_10;
  wire div_mx_n_11;
  wire div_mx_n_2;
  wire div_mx_n_3;
  wire div_mx_n_4;
  wire div_mx_n_5;
  wire div_mx_n_6;
  wire div_mx_n_7;
  wire div_mx_n_8;
  wire div_mx_n_9;
  wire div_my_n_1;
  wire div_my_n_10;
  wire div_my_n_11;
  wire div_my_n_2;
  wire div_my_n_3;
  wire div_my_n_4;
  wire div_my_n_5;
  wire div_my_n_6;
  wire div_my_n_7;
  wire div_my_n_8;
  wire div_my_n_9;
  wire [0:0]\dividend_reg_reg[31] ;
  wire draw_bound_box_n_5;
  wire draw_bound_box_n_6;
  wire eof;
  wire \h_sync_mux[1] ;
  wire \h_sync_mux[4] ;
  wire [19:0]m00_r;
  wire [19:0]m00_w;
  wire [31:0]m01_r;
  wire [31:0]m01_w;
  wire [31:0]m10_r;
  wire [31:0]m10_w;
  wire [0:0]\pix_mux[5] ;
  wire [0:0]\pix_mux[6] ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[15]_0 ;
  wire [23:23]pixel_in;
  wire pixel_r1;
  wire pixel_r2;
  wire pixel_r3;
  wire pixel_r30_out;
  wire \pixel_reg_reg[0] ;
  wire prev_eof;
  wire prev_h_sync;
  wire prev_v_sync;
  wire \v_sync_mux[1] ;
  wire \v_sync_mux[4] ;
  wire \val_reg[18] ;
  wire \val_reg[26] ;
  wire [10:0]x_ind;
  wire [10:0]x_max;
  wire [10:0]x_max_r;
  wire x_max_r_2;
  wire [10:0]x_min;
  wire [10:0]x_min_r;
  wire x_min_r_3;
  wire [10:0]y_ind;
  wire [10:0]y_max;
  wire [10:0]y_max_r;
  wire y_max_r_0;
  wire [10:0]y_min;
  wire [10:0]y_min_r;
  wire y_min_r_1;
  wire [0:0]\y_pos_reg[10] ;
  wire [0:0]\y_pos_reg[10]_0 ;

  hdmi_vga_vp_0_0_bounding_box bound_box
       (.CO(bound_box_n_1),
        .DI({cent_counter_n_28,cent_counter_n_29,cent_counter_n_30}),
        .E(x_min_r_3),
        .Q(x_max_r),
        .S(cent_counter_n_14),
        .SR(prev_eof),
        .clk(clk),
        .eof(eof),
        .\pixel_r3_inferred__0/i__carry (bound_box_n_105),
        .\val_reg[18]_srl6_i_1 (pixel_r3),
        .\val_reg[18]_srl6_i_1_0 (pixel_r2),
        .\val_reg[18]_srl6_i_1_1 (pixel_r1),
        .\val_reg[18]_srl6_i_1_2 (pixel_r30_out),
        .x_max_r0_carry__0_0(cent_counter_n_2),
        .\x_max_r_out_reg[10]_0 ({bound_box_n_84,bound_box_n_85}),
        .\x_max_r_out_reg[10]_1 (x_max),
        .\x_max_r_out_reg[6]_0 ({bound_box_n_101,bound_box_n_102,bound_box_n_103,bound_box_n_104}),
        .\x_max_r_out_reg[9]_0 ({bound_box_n_97,bound_box_n_98,bound_box_n_99,bound_box_n_100}),
        .\x_max_r_reg[10]_0 ({cent_counter_n_31,cent_counter_n_32}),
        .\x_max_r_reg[10]_1 (x_max_r_2),
        .\x_min_r_out_reg[10]_0 (x_min),
        .\x_min_r_out_reg[10]_1 (bound_box_n_106),
        .\x_min_r_out_reg[9]_0 ({bound_box_n_54,bound_box_n_55,bound_box_n_56,bound_box_n_57}),
        .\x_min_r_reg[10]_0 ({x_min_r[10],x_min_r[1:0]}),
        .\x_min_r_reg[10]_1 (cent_counter_n_72),
        .\x_min_r_reg[10]_2 (x_ind),
        .\x_pos_reg[10] (bound_box_n_2),
        .y_max_r0_carry__0_0({cent_counter_n_33,cent_counter_n_34,cent_counter_n_35}),
        .y_max_r0_carry__0_1(cent_counter_n_15),
        .\y_max_r_out_reg[10]_0 ({bound_box_n_33,bound_box_n_34}),
        .\y_max_r_out_reg[10]_1 (y_max),
        .\y_max_r_out_reg[6]_0 ({bound_box_n_50,bound_box_n_51,bound_box_n_52,bound_box_n_53}),
        .\y_max_r_out_reg[9]_0 ({bound_box_n_46,bound_box_n_47,bound_box_n_48,bound_box_n_49}),
        .\y_max_r_reg[10]_0 (y_max_r),
        .\y_max_r_reg[10]_1 ({cent_counter_n_36,cent_counter_n_37}),
        .\y_max_r_reg[10]_2 (y_max_r_0),
        .y_min_r0_carry__0_0(cent_counter_n_27),
        .\y_min_r_out_reg[10]_0 (y_min),
        .\y_min_r_out_reg[10]_1 (bound_box_n_107),
        .\y_min_r_out_reg[9]_0 ({bound_box_n_69,bound_box_n_70,bound_box_n_71,bound_box_n_72}),
        .\y_min_r_reg[10]_0 (bound_box_n_3),
        .\y_min_r_reg[10]_1 ({y_min_r[10],y_min_r[1:0]}),
        .\y_min_r_reg[10]_2 (cent_counter_n_73),
        .\y_min_r_reg[10]_3 (y_ind),
        .\y_min_r_reg[10]_4 (y_min_r_1),
        .\y_pos_reg[10] (bound_box_n_4));
  hdmi_vga_vp_0_0_centroid_counters cent_counter
       (.D(D[1]),
        .DI({cent_counter_n_28,cent_counter_n_29,cent_counter_n_30}),
        .Q(x_ind),
        .S(cent_counter_n_14),
        .SR(SR),
        .clk(clk),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\pixel_r2_inferred__0/i__carry__0 (y_min),
        .\pixel_r3_inferred__1/i__carry__0 (y_max),
        .pixel_r4_carry__0(x_min),
        .\pixel_r4_inferred__0/i__carry__0 (x_max),
        .prev_h_sync(prev_h_sync),
        .prev_v_sync(prev_v_sync),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .x_max_r0_carry__0(x_max_r),
        .x_min_r0_carry__0({x_min_r[10],x_min_r[1:0]}),
        .\x_pos_reg[10]_0 ({cent_counter_n_31,cent_counter_n_32}),
        .\x_pos_reg[10]_1 ({cent_counter_n_45,cent_counter_n_46}),
        .\x_pos_reg[10]_2 ({cent_counter_n_66,cent_counter_n_67}),
        .\x_pos_reg[10]_3 (cent_counter_n_72),
        .\x_pos_reg[1]_0 (cent_counter_n_2),
        .\x_pos_reg[6]_0 ({cent_counter_n_47,cent_counter_n_48,cent_counter_n_49,cent_counter_n_50}),
        .\x_pos_reg[6]_1 ({cent_counter_n_51,cent_counter_n_52,cent_counter_n_53,cent_counter_n_54}),
        .\x_pos_reg[6]_2 ({cent_counter_n_68,cent_counter_n_69,cent_counter_n_70,cent_counter_n_71}),
        .\x_pos_reg[8]_0 (cent_counter_n_44),
        .y_max_r0_carry__0(y_max_r),
        .y_min_r0_carry__0({y_min_r[10],y_min_r[1:0]}),
        .\y_pos_reg[10]_0 (y_ind),
        .\y_pos_reg[10]_1 ({cent_counter_n_36,cent_counter_n_37}),
        .\y_pos_reg[10]_2 ({cent_counter_n_38,cent_counter_n_39}),
        .\y_pos_reg[10]_3 ({cent_counter_n_56,cent_counter_n_57}),
        .\y_pos_reg[10]_4 (cent_counter_n_73),
        .\y_pos_reg[10]_5 (\y_pos_reg[10] ),
        .\y_pos_reg[10]_6 (\y_pos_reg[10]_0 ),
        .\y_pos_reg[1]_0 (cent_counter_n_15),
        .\y_pos_reg[1]_1 (cent_counter_n_27),
        .\y_pos_reg[6]_0 ({cent_counter_n_40,cent_counter_n_41,cent_counter_n_42,cent_counter_n_43}),
        .\y_pos_reg[6]_1 ({cent_counter_n_58,cent_counter_n_59,cent_counter_n_60,cent_counter_n_61}),
        .\y_pos_reg[6]_2 ({cent_counter_n_62,cent_counter_n_63,cent_counter_n_64,cent_counter_n_65}),
        .\y_pos_reg[7]_0 ({cent_counter_n_33,cent_counter_n_34,cent_counter_n_35}),
        .\y_pos_reg[8]_0 (cent_counter_n_55));
  hdmi_vga_vp_0_0_draw_circle circle_drawer
       (.CE(de_box_out),
        .Q({div_mx_n_1,div_mx_n_2,div_mx_n_3,div_mx_n_4,div_mx_n_5,div_mx_n_6,div_mx_n_7,div_mx_n_8,div_mx_n_9,div_mx_n_10,div_mx_n_11}),
        .clk(clk),
        .\de_mux[4] (\de_mux[4] ),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\pix_mux[5] (\pix_mux[5] ),
        .\pix_mux[6] (\pix_mux[6] ),
        .\pix_reg_reg[15] (\pix_reg_reg[15] ),
        .\pix_reg_reg[15]_0 (\pix_reg_reg[15]_0 ),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0] ),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\val_reg[18] (\val_reg[18] ),
        .\val_reg[18]_0 (draw_bound_box_n_6),
        .\val_reg[1] (circle_drawer_n_0),
        .\val_reg[26] (\val_reg[26] ),
        .\val_reg[26]_0 (draw_bound_box_n_5),
        .\val_reg[2] (circle_drawer_n_1),
        .\x_error_r_reg[11] (x_ind),
        .\y_error_r_reg[11] ({div_my_n_1,div_my_n_2,div_my_n_3,div_my_n_4,div_my_n_5,div_my_n_6,div_my_n_7,div_my_n_8,div_my_n_9,div_my_n_10,div_my_n_11}),
        .\y_error_r_reg[11]_0 (y_ind));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized1 counter_delay
       (.CO(bound_box_n_1),
        .D(D),
        .E(x_min_r_3),
        .Q({de_count_out,pixel_in}),
        .SR(prev_eof),
        .clk(clk),
        .eof(eof),
        .\h_sync_mux[4] (\h_sync_mux[4] ),
        .\v_sync_mux[4] (\v_sync_mux[4] ),
        .\val_reg[0]_fwrd (circle_drawer_n_1),
        .\val_reg[1]_fwrd__6 (circle_drawer_n_0),
        .\val_reg[25] (x_max_r_2),
        .\val_reg[25]_0 (y_min_r_1),
        .\val_reg[25]_1 (y_max_r_0),
        .\val_reg[27] (counter_delay_n_6),
        .\x_max_r_reg[10] (bound_box_n_2),
        .\y_max_r_reg[10] (bound_box_n_4),
        .\y_min_r_reg[10] (bound_box_n_3));
  hdmi_vga_vp_0_0_divider_32_20__xdcDup__1 div_mx
       (.E(E),
        .\FSM_onehot_state_reg[0]_0 (\FSM_onehot_state_reg[0] ),
        .Q(m01_r),
        .clk(clk),
        .\divisor_reg_reg[19]_0 (m00_r),
        .eof(eof),
        .\result_reg_reg[10]_0 ({div_mx_n_1,div_mx_n_2,div_mx_n_3,div_mx_n_4,div_mx_n_5,div_mx_n_6,div_mx_n_7,div_mx_n_8,div_mx_n_9,div_mx_n_10,div_mx_n_11}));
  hdmi_vga_vp_0_0_divider_32_20 div_my
       (.\FSM_onehot_state_reg[0]_0 (\FSM_onehot_state_reg[0]_0 ),
        .Q(m10_r),
        .clk(clk),
        .\dividend_reg_reg[31]_0 (\dividend_reg_reg[31] ),
        .\divisor_reg_reg[19]_0 (m00_r),
        .eof(eof),
        .\result_reg_reg[10]_0 ({div_my_n_1,div_my_n_2,div_my_n_3,div_my_n_4,div_my_n_5,div_my_n_6,div_my_n_7,div_my_n_8,div_my_n_9,div_my_n_10,div_my_n_11}));
  hdmi_vga_vp_0_0_draw_rectangle draw_bound_box
       (.CE(de_box_out),
        .Q({de_count_out,pixel_in}),
        .S({bound_box_n_106,cent_counter_n_44}),
        .clk(clk),
        .\pixel_r2_inferred__0/i__carry__0_0 ({cent_counter_n_58,cent_counter_n_59,cent_counter_n_60,cent_counter_n_61}),
        .\pixel_r2_inferred__0/i__carry__0_1 ({cent_counter_n_62,cent_counter_n_63,cent_counter_n_64,cent_counter_n_65}),
        .\pixel_r3_inferred__1/i__carry__0_0 ({bound_box_n_50,bound_box_n_51,bound_box_n_52,bound_box_n_53}),
        .\pixel_r3_inferred__1/i__carry__0_1 ({cent_counter_n_40,cent_counter_n_41,cent_counter_n_42,cent_counter_n_43}),
        .pixel_r4_carry__0_0({cent_counter_n_47,cent_counter_n_48,cent_counter_n_49,cent_counter_n_50}),
        .pixel_r4_carry__0_1({cent_counter_n_51,cent_counter_n_52,cent_counter_n_53,cent_counter_n_54}),
        .\pixel_r4_inferred__0/i__carry__0_0 ({bound_box_n_101,bound_box_n_102,bound_box_n_103,bound_box_n_104}),
        .\pixel_r4_inferred__0/i__carry__0_1 ({cent_counter_n_68,cent_counter_n_69,cent_counter_n_70,cent_counter_n_71}),
        .\val_reg[25] (draw_bound_box_n_5),
        .\val_reg[25]_0 (draw_bound_box_n_6),
        .\val_reg[26] (bound_box_n_105),
        .\val_reg[26]_srl6_i_1_0 ({cent_counter_n_45,cent_counter_n_46}),
        .\val_reg[26]_srl6_i_1_1 ({bound_box_n_33,bound_box_n_34}),
        .\val_reg[26]_srl6_i_1_2 ({cent_counter_n_38,cent_counter_n_39}),
        .\val_reg[26]_srl6_i_1_3 ({cent_counter_n_56,cent_counter_n_57}),
        .\val_reg[26]_srl6_i_1_4 ({bound_box_n_107,cent_counter_n_55}),
        .\val_reg[26]_srl6_i_1_5 ({bound_box_n_84,bound_box_n_85}),
        .\val_reg[26]_srl6_i_1_6 ({cent_counter_n_66,cent_counter_n_67}),
        .\val_reg[26]_srl6_i_2 ({bound_box_n_46,bound_box_n_47,bound_box_n_48,bound_box_n_49}),
        .\val_reg[26]_srl6_i_2_0 ({bound_box_n_54,bound_box_n_55,bound_box_n_56,bound_box_n_57}),
        .\val_reg[26]_srl6_i_2_1 ({bound_box_n_69,bound_box_n_70,bound_box_n_71,bound_box_n_72}),
        .\val_reg[26]_srl6_i_2_2 ({bound_box_n_97,bound_box_n_98,bound_box_n_99,bound_box_n_100}),
        .\x_max_r_out_reg[9] (pixel_r30_out),
        .\x_min_r_out_reg[9] (pixel_r2),
        .\y_max_r_out_reg[9] (pixel_r3),
        .\y_min_r_out_reg[9] (pixel_r1));
  hdmi_vga_vp_0_0_moment__xdcDup__1 m00
       (.E(counter_delay_n_6),
        .Q(m00_w),
        .clk(clk),
        .eof(eof));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[0] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[0]),
        .Q(m00_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[10] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[10]),
        .Q(m00_r[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[11] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[11]),
        .Q(m00_r[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[12] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[12]),
        .Q(m00_r[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[13] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[13]),
        .Q(m00_r[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[14] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[14]),
        .Q(m00_r[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[15] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[15]),
        .Q(m00_r[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[16] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[16]),
        .Q(m00_r[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[17] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[17]),
        .Q(m00_r[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[18] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[18]),
        .Q(m00_r[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[19] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[19]),
        .Q(m00_r[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[1] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[1]),
        .Q(m00_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[2] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[2]),
        .Q(m00_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[3] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[3]),
        .Q(m00_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[4] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[4]),
        .Q(m00_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[5] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[5]),
        .Q(m00_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[6] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[6]),
        .Q(m00_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[7] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[7]),
        .Q(m00_r[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[8] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[8]),
        .Q(m00_r[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m00_r_reg[9] 
       (.C(eof),
        .CE(1'b1),
        .D(m00_w[9]),
        .Q(m00_r[9]),
        .R(1'b0));
  hdmi_vga_vp_0_0_moment__xdcDup__2 m01
       (.E(counter_delay_n_6),
        .Q(x_ind),
        .clk(clk),
        .eof(eof),
        .\val_reg[31] (m01_w));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[0] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[0]),
        .Q(m01_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[10] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[10]),
        .Q(m01_r[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[11] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[11]),
        .Q(m01_r[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[12] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[12]),
        .Q(m01_r[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[13] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[13]),
        .Q(m01_r[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[14] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[14]),
        .Q(m01_r[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[15] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[15]),
        .Q(m01_r[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[16] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[16]),
        .Q(m01_r[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[17] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[17]),
        .Q(m01_r[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[18] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[18]),
        .Q(m01_r[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[19] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[19]),
        .Q(m01_r[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[1] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[1]),
        .Q(m01_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[20] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[20]),
        .Q(m01_r[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[21] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[21]),
        .Q(m01_r[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[22] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[22]),
        .Q(m01_r[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[23] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[23]),
        .Q(m01_r[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[24] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[24]),
        .Q(m01_r[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[25] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[25]),
        .Q(m01_r[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[26] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[26]),
        .Q(m01_r[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[27] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[27]),
        .Q(m01_r[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[28] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[28]),
        .Q(m01_r[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[29] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[29]),
        .Q(m01_r[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[2] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[2]),
        .Q(m01_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[30] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[30]),
        .Q(m01_r[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[31] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[31]),
        .Q(m01_r[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[3] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[3]),
        .Q(m01_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[4] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[4]),
        .Q(m01_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[5] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[5]),
        .Q(m01_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[6] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[6]),
        .Q(m01_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[7] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[7]),
        .Q(m01_r[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[8] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[8]),
        .Q(m01_r[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m01_r_reg[9] 
       (.C(eof),
        .CE(1'b1),
        .D(m01_w[9]),
        .Q(m01_r[9]),
        .R(1'b0));
  hdmi_vga_vp_0_0_moment m10
       (.E(counter_delay_n_6),
        .Q(m10_w),
        .clk(clk),
        .eof(eof),
        .\val_reg[31] (y_ind));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[0] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[0]),
        .Q(m10_r[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[10] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[10]),
        .Q(m10_r[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[11] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[11]),
        .Q(m10_r[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[12] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[12]),
        .Q(m10_r[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[13] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[13]),
        .Q(m10_r[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[14] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[14]),
        .Q(m10_r[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[15] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[15]),
        .Q(m10_r[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[16] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[16]),
        .Q(m10_r[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[17] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[17]),
        .Q(m10_r[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[18] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[18]),
        .Q(m10_r[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[19] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[19]),
        .Q(m10_r[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[1] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[1]),
        .Q(m10_r[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[20] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[20]),
        .Q(m10_r[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[21] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[21]),
        .Q(m10_r[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[22] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[22]),
        .Q(m10_r[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[23] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[23]),
        .Q(m10_r[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[24] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[24]),
        .Q(m10_r[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[25] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[25]),
        .Q(m10_r[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[26] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[26]),
        .Q(m10_r[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[27] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[27]),
        .Q(m10_r[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[28] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[28]),
        .Q(m10_r[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[29] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[29]),
        .Q(m10_r[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[2] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[2]),
        .Q(m10_r[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[30] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[30]),
        .Q(m10_r[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[31] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[31]),
        .Q(m10_r[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[3] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[3]),
        .Q(m10_r[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[4] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[4]),
        .Q(m10_r[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[5] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[5]),
        .Q(m10_r[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[6] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[6]),
        .Q(m10_r[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[7] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[7]),
        .Q(m10_r[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[8] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[8]),
        .Q(m10_r[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \m10_r_reg[9] 
       (.C(eof),
        .CE(1'b1),
        .D(m10_w[9]),
        .Q(m10_r[9]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "centroid_counters" *) 
module hdmi_vga_vp_0_0_centroid_counters
   (prev_h_sync,
    prev_v_sync,
    \x_pos_reg[1]_0 ,
    Q,
    S,
    \y_pos_reg[1]_0 ,
    \y_pos_reg[10]_0 ,
    \y_pos_reg[1]_1 ,
    DI,
    \x_pos_reg[10]_0 ,
    \y_pos_reg[7]_0 ,
    \y_pos_reg[10]_1 ,
    \y_pos_reg[10]_2 ,
    \y_pos_reg[6]_0 ,
    \x_pos_reg[8]_0 ,
    \x_pos_reg[10]_1 ,
    \x_pos_reg[6]_0 ,
    \x_pos_reg[6]_1 ,
    \y_pos_reg[8]_0 ,
    \y_pos_reg[10]_3 ,
    \y_pos_reg[6]_1 ,
    \y_pos_reg[6]_2 ,
    \x_pos_reg[10]_2 ,
    \x_pos_reg[6]_2 ,
    \x_pos_reg[10]_3 ,
    \y_pos_reg[10]_4 ,
    \h_sync_mux[1] ,
    clk,
    \v_sync_mux[1] ,
    x_max_r0_carry__0,
    x_min_r0_carry__0,
    y_max_r0_carry__0,
    y_min_r0_carry__0,
    \pixel_r3_inferred__1/i__carry__0 ,
    pixel_r4_carry__0,
    \pixel_r2_inferred__0/i__carry__0 ,
    \pixel_r4_inferred__0/i__carry__0 ,
    SR,
    D,
    \y_pos_reg[10]_5 ,
    \y_pos_reg[10]_6 );
  output prev_h_sync;
  output prev_v_sync;
  output [0:0]\x_pos_reg[1]_0 ;
  output [10:0]Q;
  output [0:0]S;
  output [0:0]\y_pos_reg[1]_0 ;
  output [10:0]\y_pos_reg[10]_0 ;
  output [0:0]\y_pos_reg[1]_1 ;
  output [2:0]DI;
  output [1:0]\x_pos_reg[10]_0 ;
  output [2:0]\y_pos_reg[7]_0 ;
  output [1:0]\y_pos_reg[10]_1 ;
  output [1:0]\y_pos_reg[10]_2 ;
  output [3:0]\y_pos_reg[6]_0 ;
  output [0:0]\x_pos_reg[8]_0 ;
  output [1:0]\x_pos_reg[10]_1 ;
  output [3:0]\x_pos_reg[6]_0 ;
  output [3:0]\x_pos_reg[6]_1 ;
  output [0:0]\y_pos_reg[8]_0 ;
  output [1:0]\y_pos_reg[10]_3 ;
  output [3:0]\y_pos_reg[6]_1 ;
  output [3:0]\y_pos_reg[6]_2 ;
  output [1:0]\x_pos_reg[10]_2 ;
  output [3:0]\x_pos_reg[6]_2 ;
  output [0:0]\x_pos_reg[10]_3 ;
  output [0:0]\y_pos_reg[10]_4 ;
  input \h_sync_mux[1] ;
  input clk;
  input \v_sync_mux[1] ;
  input [10:0]x_max_r0_carry__0;
  input [2:0]x_min_r0_carry__0;
  input [10:0]y_max_r0_carry__0;
  input [2:0]y_min_r0_carry__0;
  input [10:0]\pixel_r3_inferred__1/i__carry__0 ;
  input [10:0]pixel_r4_carry__0;
  input [10:0]\pixel_r2_inferred__0/i__carry__0 ;
  input [10:0]\pixel_r4_inferred__0/i__carry__0 ;
  input [0:0]SR;
  input [0:0]D;
  input [0:0]\y_pos_reg[10]_5 ;
  input [0:0]\y_pos_reg[10]_6 ;

  wire [0:0]D;
  wire [2:0]DI;
  wire [10:0]Q;
  wire [0:0]S;
  wire [0:0]SR;
  wire clk;
  wire \h_sync_mux[1] ;
  wire [10:0]p_0_in;
  wire [10:0]p_0_in__0;
  wire [10:0]\pixel_r2_inferred__0/i__carry__0 ;
  wire [10:0]\pixel_r3_inferred__1/i__carry__0 ;
  wire [10:0]pixel_r4_carry__0;
  wire [10:0]\pixel_r4_inferred__0/i__carry__0 ;
  wire prev_h_sync;
  wire prev_v_sync;
  wire \v_sync_mux[1] ;
  wire [10:0]x_max_r0_carry__0;
  wire [2:0]x_min_r0_carry__0;
  wire \x_pos[10]_i_3_n_0 ;
  wire \x_pos[6]_i_2_n_0 ;
  wire [1:0]\x_pos_reg[10]_0 ;
  wire [1:0]\x_pos_reg[10]_1 ;
  wire [1:0]\x_pos_reg[10]_2 ;
  wire [0:0]\x_pos_reg[10]_3 ;
  wire [0:0]\x_pos_reg[1]_0 ;
  wire [3:0]\x_pos_reg[6]_0 ;
  wire [3:0]\x_pos_reg[6]_1 ;
  wire [3:0]\x_pos_reg[6]_2 ;
  wire [0:0]\x_pos_reg[8]_0 ;
  wire [10:0]y_max_r0_carry__0;
  wire [2:0]y_min_r0_carry__0;
  wire \y_pos[10]_i_4_n_0 ;
  wire \y_pos[6]_i_2_n_0 ;
  wire [10:0]\y_pos_reg[10]_0 ;
  wire [1:0]\y_pos_reg[10]_1 ;
  wire [1:0]\y_pos_reg[10]_2 ;
  wire [1:0]\y_pos_reg[10]_3 ;
  wire [0:0]\y_pos_reg[10]_4 ;
  wire [0:0]\y_pos_reg[10]_5 ;
  wire [0:0]\y_pos_reg[10]_6 ;
  wire [0:0]\y_pos_reg[1]_0 ;
  wire [0:0]\y_pos_reg[1]_1 ;
  wire [3:0]\y_pos_reg[6]_0 ;
  wire [3:0]\y_pos_reg[6]_1 ;
  wire [3:0]\y_pos_reg[6]_2 ;
  wire [2:0]\y_pos_reg[7]_0 ;
  wire [0:0]\y_pos_reg[8]_0 ;

  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1__0
       (.I0(\y_pos_reg[10]_0 [10]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [10]),
        .O(\y_pos_reg[10]_3 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry__0_i_2__0
       (.I0(\y_pos_reg[10]_0 [8]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [8]),
        .I2(\pixel_r2_inferred__0/i__carry__0 [9]),
        .I3(\y_pos_reg[10]_0 [9]),
        .O(\y_pos_reg[10]_3 [0]));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_3
       (.I0(\y_pos_reg[10]_0 [10]),
        .I1(\pixel_r3_inferred__1/i__carry__0 [10]),
        .O(\y_pos_reg[10]_2 [1]));
  LUT2 #(
    .INIT(4'h9)) 
    i__carry__0_i_3__1
       (.I0(Q[10]),
        .I1(\pixel_r4_inferred__0/i__carry__0 [10]),
        .O(\x_pos_reg[10]_2 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_4
       (.I0(\y_pos_reg[10]_0 [8]),
        .I1(\pixel_r3_inferred__1/i__carry__0 [8]),
        .I2(\y_pos_reg[10]_0 [9]),
        .I3(\pixel_r3_inferred__1/i__carry__0 [9]),
        .O(\y_pos_reg[10]_2 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_4__0
       (.I0(\y_pos_reg[10]_0 [8]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [8]),
        .I2(\y_pos_reg[10]_0 [9]),
        .I3(\pixel_r2_inferred__0/i__carry__0 [9]),
        .O(\y_pos_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry__0_i_4__1
       (.I0(Q[8]),
        .I1(\pixel_r4_inferred__0/i__carry__0 [8]),
        .I2(Q[9]),
        .I3(\pixel_r4_inferred__0/i__carry__0 [9]),
        .O(\x_pos_reg[10]_2 [0]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_1__0
       (.I0(\y_pos_reg[10]_0 [6]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [6]),
        .I2(\pixel_r2_inferred__0/i__carry__0 [7]),
        .I3(\y_pos_reg[10]_0 [7]),
        .O(\y_pos_reg[6]_1 [3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_2__0
       (.I0(\y_pos_reg[10]_0 [4]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [4]),
        .I2(\pixel_r2_inferred__0/i__carry__0 [5]),
        .I3(\y_pos_reg[10]_0 [5]),
        .O(\y_pos_reg[6]_1 [2]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_3__0
       (.I0(\y_pos_reg[10]_0 [2]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [2]),
        .I2(\pixel_r2_inferred__0/i__carry__0 [3]),
        .I3(\y_pos_reg[10]_0 [3]),
        .O(\y_pos_reg[6]_1 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    i__carry_i_4__0
       (.I0(\y_pos_reg[10]_0 [0]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [0]),
        .I2(\pixel_r2_inferred__0/i__carry__0 [1]),
        .I3(\y_pos_reg[10]_0 [1]),
        .O(\y_pos_reg[6]_1 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5
       (.I0(\y_pos_reg[10]_0 [6]),
        .I1(\pixel_r3_inferred__1/i__carry__0 [6]),
        .I2(\y_pos_reg[10]_0 [7]),
        .I3(\pixel_r3_inferred__1/i__carry__0 [7]),
        .O(\y_pos_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__0
       (.I0(\y_pos_reg[10]_0 [6]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [6]),
        .I2(\y_pos_reg[10]_0 [7]),
        .I3(\pixel_r2_inferred__0/i__carry__0 [7]),
        .O(\y_pos_reg[6]_2 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_5__1
       (.I0(Q[6]),
        .I1(\pixel_r4_inferred__0/i__carry__0 [6]),
        .I2(Q[7]),
        .I3(\pixel_r4_inferred__0/i__carry__0 [7]),
        .O(\x_pos_reg[6]_2 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6
       (.I0(\y_pos_reg[10]_0 [4]),
        .I1(\pixel_r3_inferred__1/i__carry__0 [4]),
        .I2(\y_pos_reg[10]_0 [5]),
        .I3(\pixel_r3_inferred__1/i__carry__0 [5]),
        .O(\y_pos_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__0
       (.I0(\y_pos_reg[10]_0 [4]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [4]),
        .I2(\y_pos_reg[10]_0 [5]),
        .I3(\pixel_r2_inferred__0/i__carry__0 [5]),
        .O(\y_pos_reg[6]_2 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_6__1
       (.I0(Q[4]),
        .I1(\pixel_r4_inferred__0/i__carry__0 [4]),
        .I2(Q[5]),
        .I3(\pixel_r4_inferred__0/i__carry__0 [5]),
        .O(\x_pos_reg[6]_2 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7
       (.I0(\y_pos_reg[10]_0 [2]),
        .I1(\pixel_r3_inferred__1/i__carry__0 [2]),
        .I2(\y_pos_reg[10]_0 [3]),
        .I3(\pixel_r3_inferred__1/i__carry__0 [3]),
        .O(\y_pos_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__0
       (.I0(\y_pos_reg[10]_0 [2]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [2]),
        .I2(\y_pos_reg[10]_0 [3]),
        .I3(\pixel_r2_inferred__0/i__carry__0 [3]),
        .O(\y_pos_reg[6]_2 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_7__1
       (.I0(Q[2]),
        .I1(\pixel_r4_inferred__0/i__carry__0 [2]),
        .I2(Q[3]),
        .I3(\pixel_r4_inferred__0/i__carry__0 [3]),
        .O(\x_pos_reg[6]_2 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8
       (.I0(\y_pos_reg[10]_0 [0]),
        .I1(\pixel_r3_inferred__1/i__carry__0 [0]),
        .I2(\y_pos_reg[10]_0 [1]),
        .I3(\pixel_r3_inferred__1/i__carry__0 [1]),
        .O(\y_pos_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__0
       (.I0(\y_pos_reg[10]_0 [0]),
        .I1(\pixel_r2_inferred__0/i__carry__0 [0]),
        .I2(\y_pos_reg[10]_0 [1]),
        .I3(\pixel_r2_inferred__0/i__carry__0 [1]),
        .O(\y_pos_reg[6]_2 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    i__carry_i_8__1
       (.I0(Q[0]),
        .I1(\pixel_r4_inferred__0/i__carry__0 [0]),
        .I2(Q[1]),
        .I3(\pixel_r4_inferred__0/i__carry__0 [1]),
        .O(\x_pos_reg[6]_2 [0]));
  LUT2 #(
    .INIT(4'h2)) 
    pixel_r4_carry__0_i_1
       (.I0(Q[10]),
        .I1(pixel_r4_carry__0[10]),
        .O(\x_pos_reg[10]_1 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    pixel_r4_carry__0_i_2
       (.I0(Q[8]),
        .I1(pixel_r4_carry__0[8]),
        .I2(pixel_r4_carry__0[9]),
        .I3(Q[9]),
        .O(\x_pos_reg[10]_1 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r4_carry__0_i_4
       (.I0(Q[8]),
        .I1(pixel_r4_carry__0[8]),
        .I2(Q[9]),
        .I3(pixel_r4_carry__0[9]),
        .O(\x_pos_reg[8]_0 ));
  LUT4 #(
    .INIT(16'h2F02)) 
    pixel_r4_carry_i_1
       (.I0(Q[6]),
        .I1(pixel_r4_carry__0[6]),
        .I2(pixel_r4_carry__0[7]),
        .I3(Q[7]),
        .O(\x_pos_reg[6]_0 [3]));
  LUT4 #(
    .INIT(16'h2F02)) 
    pixel_r4_carry_i_2
       (.I0(Q[4]),
        .I1(pixel_r4_carry__0[4]),
        .I2(pixel_r4_carry__0[5]),
        .I3(Q[5]),
        .O(\x_pos_reg[6]_0 [2]));
  LUT4 #(
    .INIT(16'h2F02)) 
    pixel_r4_carry_i_3
       (.I0(Q[2]),
        .I1(pixel_r4_carry__0[2]),
        .I2(pixel_r4_carry__0[3]),
        .I3(Q[3]),
        .O(\x_pos_reg[6]_0 [1]));
  LUT4 #(
    .INIT(16'h2F02)) 
    pixel_r4_carry_i_4
       (.I0(Q[0]),
        .I1(pixel_r4_carry__0[0]),
        .I2(pixel_r4_carry__0[1]),
        .I3(Q[1]),
        .O(\x_pos_reg[6]_0 [0]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r4_carry_i_5
       (.I0(Q[6]),
        .I1(pixel_r4_carry__0[6]),
        .I2(Q[7]),
        .I3(pixel_r4_carry__0[7]),
        .O(\x_pos_reg[6]_1 [3]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r4_carry_i_6
       (.I0(Q[4]),
        .I1(pixel_r4_carry__0[4]),
        .I2(Q[5]),
        .I3(pixel_r4_carry__0[5]),
        .O(\x_pos_reg[6]_1 [2]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r4_carry_i_7
       (.I0(Q[2]),
        .I1(pixel_r4_carry__0[2]),
        .I2(Q[3]),
        .I3(pixel_r4_carry__0[3]),
        .O(\x_pos_reg[6]_1 [1]));
  LUT4 #(
    .INIT(16'h9009)) 
    pixel_r4_carry_i_8
       (.I0(Q[0]),
        .I1(pixel_r4_carry__0[0]),
        .I2(Q[1]),
        .I3(pixel_r4_carry__0[1]),
        .O(\x_pos_reg[6]_1 [0]));
  FDRE #(
    .INIT(1'b0)) 
    prev_h_sync_reg
       (.C(clk),
        .CE(1'b1),
        .D(\h_sync_mux[1] ),
        .Q(prev_h_sync),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    prev_v_sync_reg
       (.C(clk),
        .CE(1'b1),
        .D(\v_sync_mux[1] ),
        .Q(prev_v_sync),
        .R(1'b0));
  LUT2 #(
    .INIT(4'h2)) 
    x_max_r0_carry__0_i_1
       (.I0(Q[10]),
        .I1(x_max_r0_carry__0[10]),
        .O(\x_pos_reg[10]_0 [1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_max_r0_carry__0_i_2
       (.I0(Q[9]),
        .I1(x_max_r0_carry__0[9]),
        .I2(Q[8]),
        .I3(x_max_r0_carry__0[8]),
        .O(\x_pos_reg[10]_0 [0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_max_r0_carry_i_1
       (.I0(Q[7]),
        .I1(x_max_r0_carry__0[7]),
        .I2(Q[6]),
        .I3(x_max_r0_carry__0[6]),
        .O(DI[2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_max_r0_carry_i_2
       (.I0(Q[5]),
        .I1(x_max_r0_carry__0[5]),
        .I2(Q[4]),
        .I3(x_max_r0_carry__0[4]),
        .O(DI[1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    x_max_r0_carry_i_3
       (.I0(Q[3]),
        .I1(x_max_r0_carry__0[3]),
        .I2(Q[2]),
        .I3(x_max_r0_carry__0[2]),
        .O(DI[0]));
  LUT4 #(
    .INIT(16'h8421)) 
    x_max_r0_carry_i_8
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(x_max_r0_carry__0[1]),
        .I3(x_max_r0_carry__0[0]),
        .O(\x_pos_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    x_min_r0_carry__0_i_3
       (.I0(Q[10]),
        .I1(x_min_r0_carry__0[2]),
        .O(\x_pos_reg[10]_3 ));
  LUT4 #(
    .INIT(16'h8421)) 
    x_min_r0_carry_i_8
       (.I0(Q[1]),
        .I1(Q[0]),
        .I2(x_min_r0_carry__0[1]),
        .I3(x_min_r0_carry__0[0]),
        .O(S));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \x_pos[0]_i_1 
       (.I0(Q[0]),
        .O(p_0_in[0]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \x_pos[10]_i_2 
       (.I0(Q[9]),
        .I1(Q[6]),
        .I2(\x_pos[10]_i_3_n_0 ),
        .I3(Q[7]),
        .I4(Q[8]),
        .I5(Q[10]),
        .O(p_0_in[10]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \x_pos[10]_i_3 
       (.I0(Q[5]),
        .I1(Q[2]),
        .I2(Q[1]),
        .I3(Q[0]),
        .I4(Q[3]),
        .I5(Q[4]),
        .O(\x_pos[10]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair18" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \x_pos[1]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .O(p_0_in[1]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \x_pos[2]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(Q[2]),
        .O(p_0_in[2]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \x_pos[3]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .O(p_0_in[3]));
  (* SOFT_HLUTNM = "soft_lutpair14" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \x_pos[4]_i_1 
       (.I0(Q[3]),
        .I1(Q[0]),
        .I2(Q[1]),
        .I3(Q[2]),
        .I4(Q[4]),
        .O(p_0_in[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \x_pos[5]_i_1 
       (.I0(Q[2]),
        .I1(Q[1]),
        .I2(Q[0]),
        .I3(Q[3]),
        .I4(Q[4]),
        .I5(Q[5]),
        .O(p_0_in[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \x_pos[6]_i_1 
       (.I0(Q[4]),
        .I1(Q[3]),
        .I2(\x_pos[6]_i_2_n_0 ),
        .I3(Q[2]),
        .I4(Q[5]),
        .I5(Q[6]),
        .O(p_0_in[6]));
  (* SOFT_HLUTNM = "soft_lutpair16" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \x_pos[6]_i_2 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\x_pos[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB4)) 
    \x_pos[7]_i_1 
       (.I0(\x_pos[10]_i_3_n_0 ),
        .I1(Q[6]),
        .I2(Q[7]),
        .O(p_0_in[7]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \x_pos[8]_i_1 
       (.I0(Q[6]),
        .I1(\x_pos[10]_i_3_n_0 ),
        .I2(Q[7]),
        .I3(Q[8]),
        .O(p_0_in[8]));
  (* SOFT_HLUTNM = "soft_lutpair12" *) 
  LUT5 #(
    .INIT(32'hF7FF0800)) 
    \x_pos[9]_i_1 
       (.I0(Q[8]),
        .I1(Q[7]),
        .I2(\x_pos[10]_i_3_n_0 ),
        .I3(Q[6]),
        .I4(Q[9]),
        .O(p_0_in[9]));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[0] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[0]),
        .Q(Q[0]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[10] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[10]),
        .Q(Q[10]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[1] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[1]),
        .Q(Q[1]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[2] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[2]),
        .Q(Q[2]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[3] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[3]),
        .Q(Q[3]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[4] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[4]),
        .Q(Q[4]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[5] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[5]),
        .Q(Q[5]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[6] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[6]),
        .Q(Q[6]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[7] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[7]),
        .Q(Q[7]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[8] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[8]),
        .Q(Q[8]),
        .R(SR));
  FDRE #(
    .INIT(1'b0)) 
    \x_pos_reg[9] 
       (.C(clk),
        .CE(D),
        .D(p_0_in[9]),
        .Q(Q[9]),
        .R(SR));
  LUT2 #(
    .INIT(4'h2)) 
    y_max_r0_carry__0_i_1
       (.I0(\y_pos_reg[10]_0 [10]),
        .I1(y_max_r0_carry__0[10]),
        .O(\y_pos_reg[10]_1 [1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_max_r0_carry__0_i_2
       (.I0(\y_pos_reg[10]_0 [9]),
        .I1(y_max_r0_carry__0[9]),
        .I2(\y_pos_reg[10]_0 [8]),
        .I3(y_max_r0_carry__0[8]),
        .O(\y_pos_reg[10]_1 [0]));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_max_r0_carry_i_1
       (.I0(\y_pos_reg[10]_0 [7]),
        .I1(y_max_r0_carry__0[7]),
        .I2(\y_pos_reg[10]_0 [6]),
        .I3(y_max_r0_carry__0[6]),
        .O(\y_pos_reg[7]_0 [2]));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_max_r0_carry_i_2
       (.I0(\y_pos_reg[10]_0 [5]),
        .I1(y_max_r0_carry__0[5]),
        .I2(\y_pos_reg[10]_0 [4]),
        .I3(y_max_r0_carry__0[4]),
        .O(\y_pos_reg[7]_0 [1]));
  LUT4 #(
    .INIT(16'h22B2)) 
    y_max_r0_carry_i_3
       (.I0(\y_pos_reg[10]_0 [3]),
        .I1(y_max_r0_carry__0[3]),
        .I2(\y_pos_reg[10]_0 [2]),
        .I3(y_max_r0_carry__0[2]),
        .O(\y_pos_reg[7]_0 [0]));
  LUT4 #(
    .INIT(16'h8421)) 
    y_max_r0_carry_i_8
       (.I0(\y_pos_reg[10]_0 [1]),
        .I1(\y_pos_reg[10]_0 [0]),
        .I2(y_max_r0_carry__0[1]),
        .I3(y_max_r0_carry__0[0]),
        .O(\y_pos_reg[1]_0 ));
  LUT2 #(
    .INIT(4'h9)) 
    y_min_r0_carry__0_i_3
       (.I0(\y_pos_reg[10]_0 [10]),
        .I1(y_min_r0_carry__0[2]),
        .O(\y_pos_reg[10]_4 ));
  LUT4 #(
    .INIT(16'h8421)) 
    y_min_r0_carry_i_8
       (.I0(\y_pos_reg[10]_0 [1]),
        .I1(\y_pos_reg[10]_0 [0]),
        .I2(y_min_r0_carry__0[1]),
        .I3(y_min_r0_carry__0[0]),
        .O(\y_pos_reg[1]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \y_pos[0]_i_1 
       (.I0(\y_pos_reg[10]_0 [0]),
        .O(p_0_in__0[0]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \y_pos[10]_i_3 
       (.I0(\y_pos_reg[10]_0 [9]),
        .I1(\y_pos_reg[10]_0 [6]),
        .I2(\y_pos[10]_i_4_n_0 ),
        .I3(\y_pos_reg[10]_0 [7]),
        .I4(\y_pos_reg[10]_0 [8]),
        .I5(\y_pos_reg[10]_0 [10]),
        .O(p_0_in__0[10]));
  LUT6 #(
    .INIT(64'h7FFFFFFFFFFFFFFF)) 
    \y_pos[10]_i_4 
       (.I0(\y_pos_reg[10]_0 [5]),
        .I1(\y_pos_reg[10]_0 [2]),
        .I2(\y_pos_reg[10]_0 [1]),
        .I3(\y_pos_reg[10]_0 [0]),
        .I4(\y_pos_reg[10]_0 [3]),
        .I5(\y_pos_reg[10]_0 [4]),
        .O(\y_pos[10]_i_4_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair19" *) 
  LUT2 #(
    .INIT(4'h6)) 
    \y_pos[1]_i_1 
       (.I0(\y_pos_reg[10]_0 [0]),
        .I1(\y_pos_reg[10]_0 [1]),
        .O(p_0_in__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT3 #(
    .INIT(8'h78)) 
    \y_pos[2]_i_1 
       (.I0(\y_pos_reg[10]_0 [0]),
        .I1(\y_pos_reg[10]_0 [1]),
        .I2(\y_pos_reg[10]_0 [2]),
        .O(p_0_in__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT4 #(
    .INIT(16'h7F80)) 
    \y_pos[3]_i_1 
       (.I0(\y_pos_reg[10]_0 [2]),
        .I1(\y_pos_reg[10]_0 [1]),
        .I2(\y_pos_reg[10]_0 [0]),
        .I3(\y_pos_reg[10]_0 [3]),
        .O(p_0_in__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair15" *) 
  LUT5 #(
    .INIT(32'h7FFF8000)) 
    \y_pos[4]_i_1 
       (.I0(\y_pos_reg[10]_0 [3]),
        .I1(\y_pos_reg[10]_0 [0]),
        .I2(\y_pos_reg[10]_0 [1]),
        .I3(\y_pos_reg[10]_0 [2]),
        .I4(\y_pos_reg[10]_0 [4]),
        .O(p_0_in__0[4]));
  LUT6 #(
    .INIT(64'h7FFFFFFF80000000)) 
    \y_pos[5]_i_1 
       (.I0(\y_pos_reg[10]_0 [2]),
        .I1(\y_pos_reg[10]_0 [1]),
        .I2(\y_pos_reg[10]_0 [0]),
        .I3(\y_pos_reg[10]_0 [3]),
        .I4(\y_pos_reg[10]_0 [4]),
        .I5(\y_pos_reg[10]_0 [5]),
        .O(p_0_in__0[5]));
  LUT6 #(
    .INIT(64'hF7FFFFFF08000000)) 
    \y_pos[6]_i_1 
       (.I0(\y_pos_reg[10]_0 [4]),
        .I1(\y_pos_reg[10]_0 [3]),
        .I2(\y_pos[6]_i_2_n_0 ),
        .I3(\y_pos_reg[10]_0 [2]),
        .I4(\y_pos_reg[10]_0 [5]),
        .I5(\y_pos_reg[10]_0 [6]),
        .O(p_0_in__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair17" *) 
  LUT2 #(
    .INIT(4'h7)) 
    \y_pos[6]_i_2 
       (.I0(\y_pos_reg[10]_0 [1]),
        .I1(\y_pos_reg[10]_0 [0]),
        .O(\y_pos[6]_i_2_n_0 ));
  LUT3 #(
    .INIT(8'hB4)) 
    \y_pos[7]_i_1 
       (.I0(\y_pos[10]_i_4_n_0 ),
        .I1(\y_pos_reg[10]_0 [6]),
        .I2(\y_pos_reg[10]_0 [7]),
        .O(p_0_in__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT4 #(
    .INIT(16'hDF20)) 
    \y_pos[8]_i_1 
       (.I0(\y_pos_reg[10]_0 [6]),
        .I1(\y_pos[10]_i_4_n_0 ),
        .I2(\y_pos_reg[10]_0 [7]),
        .I3(\y_pos_reg[10]_0 [8]),
        .O(p_0_in__0[8]));
  (* SOFT_HLUTNM = "soft_lutpair13" *) 
  LUT5 #(
    .INIT(32'hF7FF0800)) 
    \y_pos[9]_i_1 
       (.I0(\y_pos_reg[10]_0 [8]),
        .I1(\y_pos_reg[10]_0 [7]),
        .I2(\y_pos[10]_i_4_n_0 ),
        .I3(\y_pos_reg[10]_0 [6]),
        .I4(\y_pos_reg[10]_0 [9]),
        .O(p_0_in__0[9]));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[0] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[0]),
        .Q(\y_pos_reg[10]_0 [0]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[10] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[10]),
        .Q(\y_pos_reg[10]_0 [10]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[1] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[1]),
        .Q(\y_pos_reg[10]_0 [1]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[2] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[2]),
        .Q(\y_pos_reg[10]_0 [2]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[3] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[3]),
        .Q(\y_pos_reg[10]_0 [3]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[4] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[4]),
        .Q(\y_pos_reg[10]_0 [4]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[5] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[5]),
        .Q(\y_pos_reg[10]_0 [5]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[6] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[6]),
        .Q(\y_pos_reg[10]_0 [6]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[7] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[7]),
        .Q(\y_pos_reg[10]_0 [7]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[8] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[8]),
        .Q(\y_pos_reg[10]_0 [8]),
        .R(\y_pos_reg[10]_5 ));
  FDRE #(
    .INIT(1'b0)) 
    \y_pos_reg[9] 
       (.C(clk),
        .CE(\y_pos_reg[10]_6 ),
        .D(p_0_in__0[9]),
        .Q(\y_pos_reg[10]_0 [9]),
        .R(\y_pos_reg[10]_5 ));
endmodule

(* ORIG_REF_NAME = "contextNxN" *) 
module hdmi_vga_vp_0_0_contextNxN
   (dina,
    \val_reg[2] ,
    \val_reg[1] ,
    \val_reg[3] ,
    \val_reg[3]_0 ,
    de_context__0,
    clk,
    p_0_in_6,
    \val_reg[1]_0 ,
    sw,
    pixel_reg,
    de_reg);
  output [3:0]dina;
  output \val_reg[2] ;
  output \val_reg[1] ;
  output \val_reg[3] ;
  output \val_reg[3]_0 ;
  output [20:0]de_context__0;
  input clk;
  input p_0_in_6;
  input \val_reg[1]_0 ;
  input [0:0]sw;
  input pixel_reg;
  input de_reg;

  wire brama_n_12;
  wire brama_n_13;
  wire clk;
  wire [3:0]\conectors[1][0]_5 ;
  wire [3:0]\conectors[2][0]_4 ;
  wire [3:0]\conectors[3][0]_3 ;
  wire [19:4]context;
  wire [24:0]context__0;
  wire [20:0]de_context__0;
  wire de_reg;
  wire [3:0]dina;
  wire \genblk1[0].genblk1[3].regis_del_n_0 ;
  wire \genblk1[0].genblk1[3].regis_del_n_1 ;
  wire \genblk1[0].genblk1[3].regis_del_n_2 ;
  wire \genblk1[0].genblk1[3].regis_del_n_4 ;
  wire \genblk1[0].genblk1[4].regis_del_n_1 ;
  wire \genblk1[0].genblk1[4].regis_del_n_2 ;
  wire \genblk1[1].genblk1[3].regis_del_n_0 ;
  wire \genblk1[1].genblk1[3].regis_del_n_1 ;
  wire \genblk1[1].genblk1[4].regis_del_n_1 ;
  wire \genblk1[1].genblk1[4].regis_del_n_2 ;
  wire \genblk1[2].genblk1[1].regis_del_n_0 ;
  wire \genblk1[2].genblk1[1].regis_del_n_1 ;
  wire \genblk1[2].genblk1[1].regis_del_n_2 ;
  wire \genblk1[2].genblk1[1].regis_del_n_4 ;
  wire \genblk1[2].genblk1[3].regis_del_n_1 ;
  wire \genblk1[2].genblk1[3].regis_del_n_2 ;
  wire \genblk1[2].genblk1[4].regis_del_n_1 ;
  wire \genblk1[2].genblk1[4].regis_del_n_2 ;
  wire \genblk1[3].genblk1[0].regis_del_n_0 ;
  wire \genblk1[3].genblk1[1].regis_del_n_0 ;
  wire \genblk1[3].genblk1[3].regis_del_n_0 ;
  wire \genblk1[3].genblk1[3].regis_del_n_1 ;
  wire \genblk1[3].genblk1[4].regis_del_n_1 ;
  wire \genblk1[3].genblk1[4].regis_del_n_2 ;
  wire \genblk1[3].genblk1[4].regis_del_n_4 ;
  wire \genblk1[4].genblk1[0].regis_del_n_0 ;
  wire \genblk1[4].genblk1[0].regis_del_n_2 ;
  wire \genblk1[4].genblk1[1].regis_del_n_0 ;
  wire p_0_in_6;
  wire pixel_reg;
  wire [0:0]sw;
  wire \val_reg[1] ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2] ;
  wire \val_reg[3] ;
  wire \val_reg[3]_0 ;

  hdmi_vga_vp_0_0_delayLinieBRAM_WP brama
       (.clk(clk),
        .dina({context[4],\genblk1[0].genblk1[4].regis_del_n_1 ,\genblk1[0].genblk1[4].regis_del_n_2 ,dina[3],context[9],\genblk1[1].genblk1[4].regis_del_n_1 ,\genblk1[1].genblk1[4].regis_del_n_2 ,dina[2],context[14],\genblk1[2].genblk1[4].regis_del_n_1 ,\genblk1[2].genblk1[4].regis_del_n_2 ,dina[1],context[19],\genblk1[3].genblk1[4].regis_del_n_1 ,\genblk1[3].genblk1[4].regis_del_n_2 ,dina[0]}),
        .douta({\conectors[1][0]_5 ,\conectors[2][0]_4 ,\conectors[3][0]_3 ,brama_n_12,brama_n_13}));
  hdmi_vga_vp_0_0_register__parameterized4 \genblk1[0].genblk1[0].regis_del 
       (.clk(clk),
        .context__0(context__0[0]),
        .de_context__0(de_context__0[0]),
        .de_reg(de_reg),
        .pixel_reg(pixel_reg));
  hdmi_vga_vp_0_0_register__parameterized4_0 \genblk1[0].genblk1[1].regis_del 
       (.clk(clk),
        .context__0(context__0[1]),
        .de_context__0(de_context__0[1]),
        .\val_reg[0]_0 (de_context__0[0]),
        .\val_reg[3]_0 (context__0[0]));
  hdmi_vga_vp_0_0_register__parameterized4_1 \genblk1[0].genblk1[2].regis_del 
       (.clk(clk),
        .context__0(context__0[2]),
        .de_context__0(de_context__0[2]),
        .\pixel_reg_reg[23] (\genblk1[0].genblk1[3].regis_del_n_2 ),
        .\pixel_reg_reg[23]_0 (\genblk1[4].genblk1[1].regis_del_n_0 ),
        .\pixel_reg_reg[23]_1 (\genblk1[2].genblk1[1].regis_del_n_2 ),
        .\pixel_reg_reg[23]_2 (\genblk1[0].genblk1[3].regis_del_n_4 ),
        .\pixel_reg_reg[23]_3 (\genblk1[2].genblk1[1].regis_del_n_4 ),
        .\val_reg[0]_0 (de_context__0[1]),
        .\val_reg[3]_0 (\val_reg[3] ),
        .\val_reg[3]_1 (\val_reg[3]_0 ),
        .\val_reg[3]_2 (context__0[1:0]));
  hdmi_vga_vp_0_0_register__parameterized4_2 \genblk1[0].genblk1[3].regis_del 
       (.clk(clk),
        .context__0(context__0[3]),
        .de_context__0(de_context__0[3]),
        .dina(context[4]),
        .p_0_in_6(p_0_in_6),
        .\pixel_reg[23]_i_2 ({context__0[8:5],context__0[2]}),
        .\val_reg[0]_0 (de_context__0[2]),
        .\val_reg[1] (\genblk1[0].genblk1[3].regis_del_n_1 ),
        .\val_reg[1]_0 (\val_reg[1]_0 ),
        .\val_reg[2] (\genblk1[0].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (\genblk1[0].genblk1[3].regis_del_n_2 ),
        .\val_reg[3]_1 (\genblk1[0].genblk1[3].regis_del_n_4 ));
  hdmi_vga_vp_0_0_register__parameterized4_3 \genblk1[0].genblk1[4].regis_del 
       (.clk(clk),
        .context__0(context__0[3]),
        .de_context__0(de_context__0[3]),
        .dina({context[4],\genblk1[0].genblk1[4].regis_del_n_1 ,\genblk1[0].genblk1[4].regis_del_n_2 ,dina[3]}),
        .\val_reg[1]_0 (\genblk1[0].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[0].genblk1[3].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_4 \genblk1[1].genblk1[0].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[4]),
        .douta({\conectors[1][0]_5 [3],\conectors[1][0]_5 [0]}),
        .\val_reg[3]_0 (context__0[5]));
  hdmi_vga_vp_0_0_register__parameterized4_5 \genblk1[1].genblk1[1].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[5]),
        .\val_reg[0]_0 (de_context__0[4]),
        .\val_reg[3]_0 (context__0[6]),
        .\val_reg[3]_1 (context__0[5]));
  hdmi_vga_vp_0_0_register__parameterized4_6 \genblk1[1].genblk1[2].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[6]),
        .\val_reg[0]_0 (de_context__0[5]),
        .\val_reg[3]_0 (context__0[7]),
        .\val_reg[3]_1 (context__0[6]));
  hdmi_vga_vp_0_0_register__parameterized4_7 \genblk1[1].genblk1[3].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[1].genblk1[3].regis_del_n_0 ),
        .clk_1(\genblk1[1].genblk1[3].regis_del_n_1 ),
        .de_context__0(de_context__0[7]),
        .douta(\conectors[1][0]_5 [2:1]),
        .\val_reg[0]_0 (de_context__0[6]),
        .\val_reg[3]_0 (context__0[8]),
        .\val_reg[3]_1 (context__0[7]));
  hdmi_vga_vp_0_0_register__parameterized4_8 \genblk1[1].genblk1[4].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[7]),
        .dina({context[9],\genblk1[1].genblk1[4].regis_del_n_1 ,\genblk1[1].genblk1[4].regis_del_n_2 ,dina[2]}),
        .\val_reg[1]_0 (\genblk1[1].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[1].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (context__0[8]));
  hdmi_vga_vp_0_0_register__parameterized4_9 \genblk1[2].genblk1[0].regis_del 
       (.clk(clk),
        .context__0(context__0[10]),
        .de_context__0(de_context__0[8]),
        .douta({\conectors[2][0]_4 [3],\conectors[2][0]_4 [0]}));
  hdmi_vga_vp_0_0_register__parameterized4_10 \genblk1[2].genblk1[1].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[2].genblk1[1].regis_del_n_0 ),
        .clk_1(\genblk1[2].genblk1[1].regis_del_n_1 ),
        .context__0(context__0[11]),
        .de_context__0(de_context__0[9]),
        .dina(context[9]),
        .douta(\conectors[2][0]_4 [2:1]),
        .\pixel_reg[23]_i_2 (\genblk1[3].genblk1[0].regis_del_n_0 ),
        .\pixel_reg[23]_i_2_0 (\genblk1[3].genblk1[4].regis_del_n_4 ),
        .\pixel_reg[23]_i_2_1 (\genblk1[4].genblk1[0].regis_del_n_2 ),
        .\pixel_reg[23]_i_3 ({context__0[12],context__0[10]}),
        .\pixel_reg[23]_i_3_0 (\genblk1[3].genblk1[1].regis_del_n_0 ),
        .\val_reg[0]_0 (de_context__0[8]),
        .\val_reg[3]_0 (\genblk1[2].genblk1[1].regis_del_n_2 ),
        .\val_reg[3]_1 (\genblk1[2].genblk1[1].regis_del_n_4 ));
  hdmi_vga_vp_0_0_register__parameterized4_11 \genblk1[2].genblk1[2].regis_del 
       (.clk(clk),
        .context__0(context__0[11]),
        .de_context__0(de_context__0[10]),
        .\val_reg[0]_0 (de_context__0[9]),
        .\val_reg[1]_0 (\val_reg[1] ),
        .\val_reg[1]_1 (\genblk1[2].genblk1[1].regis_del_n_1 ),
        .\val_reg[2]_0 (\val_reg[2] ),
        .\val_reg[2]_1 (\genblk1[2].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_0 (context__0[12]));
  hdmi_vga_vp_0_0_register__parameterized4_12 \genblk1[2].genblk1[3].regis_del 
       (.clk(clk),
        .context__0(context__0[13]),
        .de_context__0(de_context__0[11]),
        .\val_reg[0]_0 (de_context__0[10]),
        .\val_reg[1]_0 (\genblk1[2].genblk1[3].regis_del_n_2 ),
        .\val_reg[1]_1 (\val_reg[1] ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_1 (\val_reg[2] ),
        .\val_reg[3]_0 (context__0[12]));
  hdmi_vga_vp_0_0_register__parameterized4_13 \genblk1[2].genblk1[4].regis_del 
       (.clk(clk),
        .context__0(context__0[13]),
        .de_context__0(de_context__0[11]),
        .dina({context[14],\genblk1[2].genblk1[4].regis_del_n_1 ,\genblk1[2].genblk1[4].regis_del_n_2 ,dina[1]}),
        .\val_reg[1]_0 (\genblk1[2].genblk1[3].regis_del_n_2 ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[3].regis_del_n_1 ));
  hdmi_vga_vp_0_0_register__parameterized4_14 \genblk1[3].genblk1[0].regis_del 
       (.clk(clk),
        .context__0(context__0[15]),
        .de_context__0(de_context__0[12]),
        .dina(context[14]),
        .douta({\conectors[3][0]_3 [3],\conectors[3][0]_3 [0]}),
        .\pixel_reg[23]_i_6 (context__0[13:12]),
        .\val_reg[3]_0 (\genblk1[3].genblk1[0].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_15 \genblk1[3].genblk1[1].regis_del 
       (.clk(clk),
        .context__0(context__0[16]),
        .de_context__0(de_context__0[13]),
        .dina(context[14]),
        .\val_reg[0]_0 (de_context__0[12]),
        .\val_reg[3]_0 (\genblk1[3].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_1 ({context__0[15],context__0[13]}));
  hdmi_vga_vp_0_0_register__parameterized4_16 \genblk1[3].genblk1[2].regis_del 
       (.clk(clk),
        .context__0(context__0[17]),
        .de_context__0(de_context__0[14]),
        .\val_reg[0]_0 (de_context__0[13]),
        .\val_reg[3]_0 (context__0[16]));
  hdmi_vga_vp_0_0_register__parameterized4_17 \genblk1[3].genblk1[3].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[3].genblk1[3].regis_del_n_0 ),
        .clk_1(\genblk1[3].genblk1[3].regis_del_n_1 ),
        .context__0(context__0[18]),
        .de_context__0(de_context__0[15]),
        .douta(\conectors[3][0]_3 [2:1]),
        .\val_reg[0]_0 (de_context__0[14]),
        .\val_reg[3]_0 (context__0[17]));
  hdmi_vga_vp_0_0_register__parameterized4_18 \genblk1[3].genblk1[4].regis_del 
       (.clk(clk),
        .context__0(context__0[18:16]),
        .de_context__0(de_context__0[15]),
        .dina({context[19],\genblk1[3].genblk1[4].regis_del_n_1 ,\genblk1[3].genblk1[4].regis_del_n_2 ,dina[0]}),
        .\val_reg[1]_0 (\genblk1[3].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[3].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (\genblk1[3].genblk1[4].regis_del_n_4 ));
  hdmi_vga_vp_0_0_register__parameterized4_19 \genblk1[4].genblk1[0].regis_del 
       (.clk(clk),
        .context__0(context__0[20]),
        .de_context__0(de_context__0[16]),
        .dina(context[19]),
        .douta({brama_n_12,brama_n_13}),
        .\pixel_reg[23]_i_6 ({context__0[24:21],context__0[18:17]}),
        .sw(sw),
        .\val_reg[3]_0 (\genblk1[4].genblk1[0].regis_del_n_0 ),
        .\val_reg[3]_1 (\genblk1[4].genblk1[0].regis_del_n_2 ));
  hdmi_vga_vp_0_0_register__parameterized4_20 \genblk1[4].genblk1[1].regis_del 
       (.clk(clk),
        .context__0({context__0[24:22],context__0[20]}),
        .de_context__0(de_context__0[17]),
        .\pixel_reg[23]_i_3 (\genblk1[4].genblk1[0].regis_del_n_0 ),
        .\val_reg[0]_0 (de_context__0[16]),
        .\val_reg[3]_0 (\genblk1[4].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_1 (context__0[21]));
  hdmi_vga_vp_0_0_register__parameterized4_21 \genblk1[4].genblk1[2].regis_del 
       (.clk(clk),
        .context__0(context__0[22]),
        .de_context__0(de_context__0[18]),
        .\val_reg[0]_0 (de_context__0[17]),
        .\val_reg[3]_0 (context__0[21]));
  hdmi_vga_vp_0_0_register__parameterized4_22 \genblk1[4].genblk1[3].regis_del 
       (.clk(clk),
        .context__0(context__0[23]),
        .de_context__0(de_context__0[19]),
        .\val_reg[0]_0 (de_context__0[18]),
        .\val_reg[3]_0 (context__0[22]));
  hdmi_vga_vp_0_0_register__parameterized4_23 \genblk1[4].genblk1[4].regis_del 
       (.clk(clk),
        .context__0(context__0[24]),
        .de_context__0(de_context__0[20]),
        .\val_reg[0]_0 (de_context__0[19]),
        .\val_reg[3]_0 (context__0[23]));
endmodule

(* ORIG_REF_NAME = "contextNxN" *) 
module hdmi_vga_vp_0_0_contextNxN__xdcDup__1
   (dina,
    \val_reg[3] ,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[0] ,
    \val_reg[2] ,
    \val_reg[1] ,
    \val_reg[3]_2 ,
    E,
    \val_reg[0]_0 ,
    sw_0_sp_1,
    clk,
    D,
    \v_sync_mux[1] ,
    \h_sync_mux[1] ,
    \pixel_reg_reg[0] ,
    \pixel_reg_reg[0]_0 ,
    \pixel_reg_reg[0]_1 ,
    \pixel_reg_reg[0]_2 ,
    \pixel_reg_reg[0]_3 ,
    de_context,
    sw,
    \pixel_reg_reg[0]_4 ,
    pixel_reg);
  output [3:0]dina;
  output \val_reg[3] ;
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output [0:0]\val_reg[0] ;
  output \val_reg[2] ;
  output \val_reg[1] ;
  output [4:0]\val_reg[3]_2 ;
  output [0:0]E;
  output \val_reg[0]_0 ;
  output sw_0_sp_1;
  input clk;
  input [1:0]D;
  input \v_sync_mux[1] ;
  input \h_sync_mux[1] ;
  input \pixel_reg_reg[0] ;
  input \pixel_reg_reg[0]_0 ;
  input \pixel_reg_reg[0]_1 ;
  input \pixel_reg_reg[0]_2 ;
  input \pixel_reg_reg[0]_3 ;
  input [0:0]de_context;
  input [0:0]sw;
  input \pixel_reg_reg[0]_4 ;
  input pixel_reg;

  wire [1:0]D;
  wire [0:0]E;
  wire brama_n_12;
  wire brama_n_13;
  wire clk;
  wire [3:0]\conectors[1][0]_2 ;
  wire [3:0]\conectors[2][0]_1 ;
  wire [3:0]\conectors[3][0]_0 ;
  wire [19:9]context;
  wire [0:0]de_context;
  wire [19:9]de_context_3;
  wire [24:0]de_context__0;
  wire [3:0]dina;
  wire \genblk1[0].genblk1[0].regis_del_n_3 ;
  wire \genblk1[0].genblk1[2].regis_del_n_2 ;
  wire \genblk1[0].genblk1[3].regis_del_n_2 ;
  wire \genblk1[0].genblk1[3].regis_del_n_3 ;
  wire \genblk1[0].genblk1[3].regis_del_n_4 ;
  wire \genblk1[0].genblk1[3].regis_del_n_5 ;
  wire \genblk1[0].genblk1[4].regis_del_n_4 ;
  wire \genblk1[0].genblk1[4].regis_del_n_5 ;
  wire \genblk1[1].genblk1[1].regis_del_n_0 ;
  wire \genblk1[1].genblk1[1].regis_del_n_2 ;
  wire \genblk1[1].genblk1[1].regis_del_n_3 ;
  wire \genblk1[1].genblk1[2].regis_del_n_0 ;
  wire \genblk1[1].genblk1[3].regis_del_n_0 ;
  wire \genblk1[1].genblk1[3].regis_del_n_1 ;
  wire \genblk1[1].genblk1[4].regis_del_n_1 ;
  wire \genblk1[1].genblk1[4].regis_del_n_2 ;
  wire \genblk1[1].genblk1[4].regis_del_n_4 ;
  wire \genblk1[1].genblk1[4].regis_del_n_5 ;
  wire \genblk1[1].genblk1[4].regis_del_n_6 ;
  wire \genblk1[2].genblk1[0].regis_del_n_2 ;
  wire \genblk1[2].genblk1[0].regis_del_n_3 ;
  wire \genblk1[2].genblk1[1].regis_del_n_0 ;
  wire \genblk1[2].genblk1[1].regis_del_n_1 ;
  wire \genblk1[2].genblk1[2].regis_del_n_2 ;
  wire \genblk1[2].genblk1[2].regis_del_n_4 ;
  wire \genblk1[2].genblk1[3].regis_del_n_0 ;
  wire \genblk1[2].genblk1[3].regis_del_n_2 ;
  wire \genblk1[2].genblk1[3].regis_del_n_3 ;
  wire \genblk1[2].genblk1[4].regis_del_n_1 ;
  wire \genblk1[2].genblk1[4].regis_del_n_2 ;
  wire \genblk1[3].genblk1[0].regis_del_n_0 ;
  wire \genblk1[3].genblk1[0].regis_del_n_2 ;
  wire \genblk1[3].genblk1[0].regis_del_n_3 ;
  wire \genblk1[3].genblk1[0].regis_del_n_4 ;
  wire \genblk1[3].genblk1[1].regis_del_n_0 ;
  wire \genblk1[3].genblk1[3].regis_del_n_0 ;
  wire \genblk1[3].genblk1[3].regis_del_n_1 ;
  wire \genblk1[3].genblk1[3].regis_del_n_2 ;
  wire \genblk1[3].genblk1[3].regis_del_n_3 ;
  wire \genblk1[3].genblk1[3].regis_del_n_5 ;
  wire \genblk1[3].genblk1[4].regis_del_n_1 ;
  wire \genblk1[3].genblk1[4].regis_del_n_2 ;
  wire \genblk1[3].genblk1[4].regis_del_n_5 ;
  wire \genblk1[4].genblk1[1].regis_del_n_1 ;
  wire \genblk1[4].genblk1[1].regis_del_n_2 ;
  wire \genblk1[4].genblk1[1].regis_del_n_4 ;
  wire \genblk1[4].genblk1[2].regis_del_n_0 ;
  wire \genblk1[4].genblk1[4].regis_del_n_0 ;
  wire \genblk1[4].genblk1[4].regis_del_n_1 ;
  wire \genblk1[4].genblk1[4].regis_del_n_3 ;
  wire \h_sync_mux[1] ;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in13_in;
  wire p_0_in14_in;
  wire p_0_in15_in;
  wire p_0_in16_in;
  wire p_0_in18_in;
  wire p_0_in19_in;
  wire p_0_in20_in;
  wire p_0_in21_in;
  wire p_0_in22_in;
  wire p_0_in3_in;
  wire p_0_in4_in;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire p_1_in;
  wire pixel_reg;
  wire \pixel_reg_reg[0] ;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire \pixel_reg_reg[0]_2 ;
  wire \pixel_reg_reg[0]_3 ;
  wire \pixel_reg_reg[0]_4 ;
  wire [0:0]sw;
  wire sw_0_sn_1;
  wire \v_sync_mux[1] ;
  wire [0:0]\val_reg[0] ;
  wire \val_reg[0]_0 ;
  wire \val_reg[1] ;
  wire \val_reg[2] ;
  wire \val_reg[3] ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire [4:0]\val_reg[3]_2 ;

  assign sw_0_sp_1 = sw_0_sn_1;
  hdmi_vga_vp_0_0_delayLinieBRAM_WP__xdcDup__1 brama
       (.clk(clk),
        .dina({dina[2:0],context[9],\genblk1[1].genblk1[4].regis_del_n_1 ,\genblk1[1].genblk1[4].regis_del_n_2 ,de_context_3[9],context[14],\genblk1[2].genblk1[4].regis_del_n_1 ,\genblk1[2].genblk1[4].regis_del_n_2 ,de_context_3[14],context[19],\genblk1[3].genblk1[4].regis_del_n_1 ,\genblk1[3].genblk1[4].regis_del_n_2 ,de_context_3[19]}),
        .douta({\conectors[1][0]_2 ,\conectors[2][0]_1 ,\conectors[3][0]_0 ,brama_n_12,brama_n_13}),
        .\val_reg[3] (dina[3]));
  hdmi_vga_vp_0_0_register__parameterized4_51 \genblk1[0].genblk1[0].regis_del 
       (.D(D),
        .clk(clk),
        .de_context__0(de_context__0[0]),
        .\fin_sum[2]_i_2 (\val_reg[3]_2 [2]),
        .\fin_sum[4]_i_7_0 (\genblk1[4].genblk1[2].regis_del_n_0 ),
        .\fin_sum[4]_i_7_1 (\genblk1[2].genblk1[3].regis_del_n_0 ),
        .\fin_sum[4]_i_7_2 (\genblk1[3].genblk1[3].regis_del_n_5 ),
        .\fin_sum[4]_i_7_3 (\genblk1[0].genblk1[4].regis_del_n_4 ),
        .\fin_sum[4]_i_7_4 (\genblk1[1].genblk1[4].regis_del_n_4 ),
        .\fin_sum_reg[2] (\genblk1[2].genblk1[0].regis_del_n_2 ),
        .\fin_sum_reg[2]_0 (\genblk1[4].genblk1[4].regis_del_n_0 ),
        .\fin_sum_reg[2]_1 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .\fin_sum_reg[2]_2 (\genblk1[0].genblk1[3].regis_del_n_4 ),
        .\fin_sum_reg[2]_3 (\genblk1[2].genblk1[0].regis_del_n_3 ),
        .\fin_sum_reg[2]_4 (\genblk1[1].genblk1[1].regis_del_n_2 ),
        .\fin_sum_reg[2]_5 (\genblk1[3].genblk1[4].regis_del_n_5 ),
        .p_1_in(p_1_in),
        .\val_reg[3]_0 (\genblk1[0].genblk1[0].regis_del_n_3 ));
  hdmi_vga_vp_0_0_register__parameterized4_52 \genblk1[0].genblk1[1].regis_del 
       (.clk(clk),
        .de_context(de_context),
        .de_context__0(de_context__0[1]),
        .dina(dina[0]),
        .p_1_in(p_1_in),
        .\pixel_reg[0]_i_4 ({de_context__0[3:2],de_context__0[0]}),
        .\val_reg[0]_0 (\val_reg[0]_0 ),
        .\val_reg[3]_0 (\val_reg[3] ));
  hdmi_vga_vp_0_0_register__parameterized4_53 \genblk1[0].genblk1[2].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[1]),
        .\fin_sum[1]_i_3_0 (\val_reg[3]_1 ),
        .\fin_sum_reg[0] (dina[3]),
        .\fin_sum_reg[0]_0 (\genblk1[1].genblk1[4].regis_del_n_4 ),
        .p_0_in3_in(p_0_in3_in),
        .p_0_in4_in(p_0_in4_in),
        .p_1_in(p_1_in),
        .pixel_reg(pixel_reg),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0] ),
        .\pixel_reg_reg[0]_0 (\pixel_reg_reg[0]_0 ),
        .\pixel_reg_reg[0]_1 (\genblk1[0].genblk1[4].regis_del_n_5 ),
        .\pixel_reg_reg[0]_2 (\pixel_reg_reg[0]_4 ),
        .sw(sw),
        .sw_0_sp_1(sw_0_sn_1),
        .\val_reg[0]_0 (de_context__0[2]),
        .\val_reg[3]_0 (\val_reg[3]_0 ),
        .\val_reg[3]_1 (\genblk1[0].genblk1[2].regis_del_n_2 ),
        .\val_reg[3]_2 (\val_reg[3] ));
  hdmi_vga_vp_0_0_register__parameterized4_54 \genblk1[0].genblk1[3].regis_del 
       (.E(E),
        .clk(clk),
        .de_context__0({de_context__0[6:5],de_context__0[2:0]}),
        .dina(dina[0]),
        .\fin_sum[4]_i_17 (\val_reg[3] ),
        .\fin_sum[4]_i_7 (\genblk1[1].genblk1[1].regis_del_n_0 ),
        .\fin_sum[4]_i_7_0 (\genblk1[1].genblk1[4].regis_del_n_4 ),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\pixel_reg_reg[0] (\genblk1[4].genblk1[1].regis_del_n_4 ),
        .\pixel_reg_reg[0]_0 (\genblk1[3].genblk1[0].regis_del_n_4 ),
        .\pixel_reg_reg[0]_1 (\genblk1[1].genblk1[4].regis_del_n_6 ),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\val_reg[0]_0 (de_context__0[3]),
        .\val_reg[1] (\genblk1[0].genblk1[3].regis_del_n_2 ),
        .\val_reg[2] (\genblk1[0].genblk1[3].regis_del_n_3 ),
        .\val_reg[3]_0 (\val_reg[3]_1 ),
        .\val_reg[3]_1 (\genblk1[0].genblk1[3].regis_del_n_4 ),
        .\val_reg[3]_2 (\genblk1[0].genblk1[3].regis_del_n_5 ),
        .\val_reg[3]_3 (\val_reg[3]_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_55 \genblk1[0].genblk1[4].regis_del 
       (.clk(clk),
        .dina(dina[2:0]),
        .\fin_sum[4]_i_13 (\val_reg[3] ),
        .\fin_sum[4]_i_13_0 (\val_reg[3]_0 ),
        .p_0_in3_in(p_0_in3_in),
        .p_0_in4_in(p_0_in4_in),
        .p_1_in(p_1_in),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0]_1 ),
        .\pixel_reg_reg[0]_0 (\pixel_reg_reg[0]_2 ),
        .\pixel_reg_reg[0]_1 (\pixel_reg_reg[0]_3 ),
        .\val_reg[0]_0 (de_context__0[3]),
        .\val_reg[1]_0 (\genblk1[0].genblk1[3].regis_del_n_2 ),
        .\val_reg[2]_0 (\genblk1[0].genblk1[3].regis_del_n_3 ),
        .\val_reg[3]_0 (dina[3]),
        .\val_reg[3]_1 (\genblk1[0].genblk1[4].regis_del_n_4 ),
        .\val_reg[3]_2 (\genblk1[0].genblk1[4].regis_del_n_5 ),
        .\val_reg[3]_3 (\val_reg[3]_1 ));
  hdmi_vga_vp_0_0_register__parameterized4_56 \genblk1[1].genblk1[0].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[5]),
        .douta({\conectors[1][0]_2 [3],\conectors[1][0]_2 [0]}),
        .p_0_in3_in(p_0_in3_in));
  hdmi_vga_vp_0_0_register__parameterized4_57 \genblk1[1].genblk1[1].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[6]),
        .\fin_sum[4]_i_11 (dina[3]),
        .\fin_sum[4]_i_7 (\genblk1[0].genblk1[3].regis_del_n_5 ),
        .\fin_sum[4]_i_7_0 (\genblk1[3].genblk1[0].regis_del_n_3 ),
        .\fin_sum[4]_i_7_1 (\genblk1[2].genblk1[2].regis_del_n_4 ),
        .\fin_sum[4]_i_7_2 (\genblk1[1].genblk1[4].regis_del_n_5 ),
        .p_0_in3_in(p_0_in3_in),
        .p_0_in4_in(p_0_in4_in),
        .\val_reg[0]_0 (de_context__0[5]),
        .\val_reg[3]_0 (\genblk1[1].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_1 (\genblk1[1].genblk1[1].regis_del_n_2 ),
        .\val_reg[3]_2 (\genblk1[1].genblk1[1].regis_del_n_3 ));
  hdmi_vga_vp_0_0_register__parameterized4_58 \genblk1[1].genblk1[2].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[7]),
        .dina(context[9]),
        .\fin_sum_reg[3] (\genblk1[2].genblk1[2].regis_del_n_4 ),
        .\fin_sum_reg[3]_0 (\genblk1[3].genblk1[0].regis_del_n_3 ),
        .p_0_in4_in(p_0_in4_in),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in6_in(p_0_in6_in),
        .\val_reg[0]_0 (de_context__0[6]),
        .\val_reg[3]_0 (\genblk1[1].genblk1[2].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_59 \genblk1[1].genblk1[3].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[1].genblk1[3].regis_del_n_0 ),
        .clk_1(\genblk1[1].genblk1[3].regis_del_n_1 ),
        .de_context__0(de_context__0[8]),
        .douta(\conectors[1][0]_2 [2:1]),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in6_in(p_0_in6_in),
        .\val_reg[0]_0 (de_context__0[7]));
  hdmi_vga_vp_0_0_register__parameterized4_60 \genblk1[1].genblk1[4].regis_del 
       (.clk(clk),
        .de_context__0({de_context__0[11:10],de_context__0[8:7]}),
        .dina({context[9],\genblk1[1].genblk1[4].regis_del_n_1 ,\genblk1[1].genblk1[4].regis_del_n_2 ,de_context_3[9]}),
        .p_0_in5_in(p_0_in5_in),
        .p_0_in6_in(p_0_in6_in),
        .\pixel_reg_reg[0] (\val_reg[0] ),
        .\val_reg[0]_0 (\genblk1[1].genblk1[4].regis_del_n_6 ),
        .\val_reg[1]_0 (\genblk1[1].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[1].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (\genblk1[1].genblk1[4].regis_del_n_4 ),
        .\val_reg[3]_1 (\genblk1[1].genblk1[4].regis_del_n_5 ));
  hdmi_vga_vp_0_0_register__parameterized4_61 \genblk1[2].genblk1[0].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[10]),
        .douta({\conectors[2][0]_1 [3],\conectors[2][0]_1 [0]}),
        .\fin_sum[4]_i_7 (\genblk1[3].genblk1[0].regis_del_n_0 ),
        .\fin_sum[4]_i_7_0 (\genblk1[3].genblk1[3].regis_del_n_5 ),
        .\fin_sum_reg[3] (\genblk1[0].genblk1[0].regis_del_n_3 ),
        .\fin_sum_reg[3]_0 (\genblk1[3].genblk1[1].regis_del_n_0 ),
        .\fin_sum_reg[3]_1 (\genblk1[1].genblk1[2].regis_del_n_0 ),
        .\fin_sum_reg[3]_2 (\genblk1[3].genblk1[0].regis_del_n_2 ),
        .\fin_sum_reg[3]_3 (\genblk1[0].genblk1[3].regis_del_n_4 ),
        .\fin_sum_reg[3]_4 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .\fin_sum_reg[3]_5 (\genblk1[1].genblk1[1].regis_del_n_2 ),
        .\fin_sum_reg[3]_6 (\genblk1[3].genblk1[4].regis_del_n_5 ),
        .p_0_in10_in(p_0_in10_in),
        .p_0_in8_in(p_0_in8_in),
        .p_0_in9_in(p_0_in9_in),
        .\val_reg[3]_0 (\val_reg[3]_2 [4:3]),
        .\val_reg[3]_1 (\genblk1[2].genblk1[0].regis_del_n_2 ),
        .\val_reg[3]_2 (\genblk1[2].genblk1[0].regis_del_n_3 ));
  hdmi_vga_vp_0_0_register__parameterized4_62 \genblk1[2].genblk1[1].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[2].genblk1[1].regis_del_n_0 ),
        .clk_1(\genblk1[2].genblk1[1].regis_del_n_1 ),
        .de_context__0(de_context__0[11]),
        .douta(\conectors[2][0]_1 [2:1]),
        .p_0_in8_in(p_0_in8_in),
        .p_0_in9_in(p_0_in9_in),
        .\val_reg[0]_0 (de_context__0[10]));
  hdmi_vga_vp_0_0_register__parameterized4_63 \genblk1[2].genblk1[2].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[11]),
        .dina(context[14]),
        .\fin_sum_reg[0] (\genblk1[3].genblk1[3].regis_del_n_5 ),
        .p_0_in10_in(p_0_in10_in),
        .p_0_in11_in(p_0_in11_in),
        .p_0_in13_in(p_0_in13_in),
        .p_0_in8_in(p_0_in8_in),
        .p_0_in9_in(p_0_in9_in),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[1]_0 (\val_reg[1] ),
        .\val_reg[1]_1 (\genblk1[2].genblk1[1].regis_del_n_1 ),
        .\val_reg[2]_0 (\val_reg[2] ),
        .\val_reg[2]_1 (\genblk1[2].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_0 (\genblk1[2].genblk1[2].regis_del_n_2 ),
        .\val_reg[3]_1 (\genblk1[2].genblk1[2].regis_del_n_4 ));
  hdmi_vga_vp_0_0_register__parameterized4_64 \genblk1[2].genblk1[3].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[13]),
        .dina(context[14]),
        .p_0_in10_in(p_0_in10_in),
        .p_0_in11_in(p_0_in11_in),
        .p_0_in13_in(p_0_in13_in),
        .p_0_in8_in(p_0_in8_in),
        .p_0_in9_in(p_0_in9_in),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[1]_0 (\genblk1[2].genblk1[3].regis_del_n_3 ),
        .\val_reg[1]_1 (\val_reg[1] ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[3].regis_del_n_2 ),
        .\val_reg[2]_1 (\val_reg[2] ),
        .\val_reg[3]_0 (\genblk1[2].genblk1[3].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_65 \genblk1[2].genblk1[4].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[13]),
        .dina({context[14],\genblk1[2].genblk1[4].regis_del_n_1 ,\genblk1[2].genblk1[4].regis_del_n_2 ,de_context_3[14]}),
        .p_0_in11_in(p_0_in11_in),
        .\val_reg[1]_0 (\genblk1[2].genblk1[3].regis_del_n_3 ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[3].regis_del_n_2 ));
  hdmi_vga_vp_0_0_register__parameterized4_66 \genblk1[3].genblk1[0].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[15]),
        .dina({context[14],de_context_3[14]}),
        .douta({\conectors[3][0]_0 [3],\conectors[3][0]_0 [0]}),
        .\fin_sum_reg[3] (\genblk1[2].genblk1[2].regis_del_n_4 ),
        .\fin_sum_reg[3]_0 (\genblk1[1].genblk1[4].regis_del_n_5 ),
        .\fin_sum_reg[3]_1 (\genblk1[0].genblk1[3].regis_del_n_5 ),
        .\fin_sum_reg[3]_2 (\genblk1[1].genblk1[1].regis_del_n_3 ),
        .p_0_in11_in(p_0_in11_in),
        .p_0_in13_in(p_0_in13_in),
        .\pixel_reg_reg[0] ({de_context__0[18:16],de_context__0[13]}),
        .\val_reg[0]_0 (\genblk1[3].genblk1[0].regis_del_n_4 ),
        .\val_reg[3]_0 (\genblk1[3].genblk1[0].regis_del_n_0 ),
        .\val_reg[3]_1 (\genblk1[3].genblk1[0].regis_del_n_2 ),
        .\val_reg[3]_2 (\genblk1[3].genblk1[0].regis_del_n_3 ));
  hdmi_vga_vp_0_0_register__parameterized4_67 \genblk1[3].genblk1[1].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[15]),
        .\fin_sum_reg[3] (\genblk1[4].genblk1[1].regis_del_n_2 ),
        .\fin_sum_reg[3]_0 (\genblk1[4].genblk1[4].regis_del_n_1 ),
        .p_0_in13_in(p_0_in13_in),
        .p_0_in14_in(p_0_in14_in),
        .p_0_in15_in(p_0_in15_in),
        .p_0_in16_in(p_0_in16_in),
        .\val_reg[0]_0 (de_context__0[16]),
        .\val_reg[3]_0 (\genblk1[3].genblk1[1].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_68 \genblk1[3].genblk1[2].regis_del 
       (.clk(clk),
        .p_0_in14_in(p_0_in14_in),
        .p_0_in15_in(p_0_in15_in),
        .\val_reg[0]_0 (de_context__0[17]),
        .\val_reg[0]_1 (de_context__0[16]));
  hdmi_vga_vp_0_0_register__parameterized4_69 \genblk1[3].genblk1[3].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[3].genblk1[3].regis_del_n_0 ),
        .clk_1(\genblk1[3].genblk1[3].regis_del_n_1 ),
        .dina(context[19]),
        .douta(\conectors[3][0]_0 [2:1]),
        .\fin_sum[4]_i_7 (\genblk1[4].genblk1[4].regis_del_n_1 ),
        .p_0_in14_in(p_0_in14_in),
        .p_0_in15_in(p_0_in15_in),
        .p_0_in16_in(p_0_in16_in),
        .p_0_in18_in(p_0_in18_in),
        .p_0_in19_in(p_0_in19_in),
        .\val_reg[0]_0 (de_context__0[18]),
        .\val_reg[0]_1 (de_context__0[17]),
        .\val_reg[3]_0 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .\val_reg[3]_1 (\genblk1[3].genblk1[3].regis_del_n_3 ),
        .\val_reg[3]_2 (\genblk1[3].genblk1[3].regis_del_n_5 ));
  hdmi_vga_vp_0_0_register__parameterized4_70 \genblk1[3].genblk1[4].regis_del 
       (.clk(clk),
        .dina({context[19],\genblk1[3].genblk1[4].regis_del_n_1 ,\genblk1[3].genblk1[4].regis_del_n_2 ,de_context_3[19]}),
        .\fin_sum[4]_i_7 (\genblk1[4].genblk1[4].regis_del_n_3 ),
        .\fin_sum_reg[1] (\genblk1[0].genblk1[2].regis_del_n_2 ),
        .\fin_sum_reg[1]_0 (\genblk1[2].genblk1[2].regis_del_n_2 ),
        .\fin_sum_reg[1]_1 (\genblk1[4].genblk1[1].regis_del_n_1 ),
        .\fin_sum_reg[1]_2 (\genblk1[1].genblk1[1].regis_del_n_2 ),
        .\fin_sum_reg[1]_3 (\genblk1[2].genblk1[0].regis_del_n_3 ),
        .\fin_sum_reg[1]_4 (\genblk1[0].genblk1[3].regis_del_n_4 ),
        .\fin_sum_reg[1]_5 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .p_0_in16_in(p_0_in16_in),
        .p_0_in18_in(p_0_in18_in),
        .p_0_in19_in(p_0_in19_in),
        .p_1_in(p_1_in),
        .\val_reg[0]_0 (de_context__0[18]),
        .\val_reg[1]_0 (\genblk1[3].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[3].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (\val_reg[3]_2 [1]),
        .\val_reg[3]_1 (\genblk1[3].genblk1[4].regis_del_n_5 ));
  hdmi_vga_vp_0_0_register__parameterized4_71 \genblk1[4].genblk1[0].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[20]),
        .douta({brama_n_12,brama_n_13}),
        .p_0_in18_in(p_0_in18_in));
  hdmi_vga_vp_0_0_register__parameterized4_72 \genblk1[4].genblk1[1].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[21]),
        .dina({context[19],de_context_3[19]}),
        .\fin_sum_reg[0] (\genblk1[2].genblk1[2].regis_del_n_2 ),
        .\fin_sum_reg[0]_0 (\genblk1[0].genblk1[2].regis_del_n_2 ),
        .p_0_in18_in(p_0_in18_in),
        .p_0_in19_in(p_0_in19_in),
        .p_0_in20_in(p_0_in20_in),
        .p_0_in21_in(p_0_in21_in),
        .p_0_in22_in(p_0_in22_in),
        .p_1_in(p_1_in),
        .\pixel_reg_reg[0] ({de_context__0[24:22],de_context__0[20]}),
        .\val_reg[0]_0 (\genblk1[4].genblk1[1].regis_del_n_4 ),
        .\val_reg[3]_0 (\val_reg[3]_2 [0]),
        .\val_reg[3]_1 (\genblk1[4].genblk1[1].regis_del_n_1 ),
        .\val_reg[3]_2 (\genblk1[4].genblk1[1].regis_del_n_2 ));
  hdmi_vga_vp_0_0_register__parameterized4_73 \genblk1[4].genblk1[2].regis_del 
       (.clk(clk),
        .de_context__0(de_context__0[21]),
        .dina(context[19]),
        .p_0_in18_in(p_0_in18_in),
        .p_0_in19_in(p_0_in19_in),
        .p_0_in20_in(p_0_in20_in),
        .p_0_in21_in(p_0_in21_in),
        .p_0_in22_in(p_0_in22_in),
        .\val_reg[0]_0 (de_context__0[22]),
        .\val_reg[3]_0 (\genblk1[4].genblk1[2].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_74 \genblk1[4].genblk1[3].regis_del 
       (.clk(clk),
        .p_0_in20_in(p_0_in20_in),
        .p_0_in21_in(p_0_in21_in),
        .\val_reg[0]_0 (de_context__0[23]),
        .\val_reg[0]_1 (de_context__0[22]));
  hdmi_vga_vp_0_0_register__parameterized4_75 \genblk1[4].genblk1[4].regis_del 
       (.clk(clk),
        .\fin_sum[2]_i_2_0 (\genblk1[4].genblk1[1].regis_del_n_2 ),
        .\fin_sum[2]_i_2_1 (\genblk1[3].genblk1[3].regis_del_n_3 ),
        .\fin_sum[2]_i_2_2 (\genblk1[3].genblk1[0].regis_del_n_3 ),
        .\fin_sum[2]_i_2_3 (\genblk1[2].genblk1[2].regis_del_n_4 ),
        .\fin_sum[2]_i_2_4 (\genblk1[1].genblk1[4].regis_del_n_5 ),
        .\fin_sum_reg[2] (\genblk1[2].genblk1[0].regis_del_n_3 ),
        .\fin_sum_reg[2]_0 (\genblk1[0].genblk1[3].regis_del_n_4 ),
        .\fin_sum_reg[2]_1 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .\fin_sum_reg[2]_2 (\genblk1[3].genblk1[0].regis_del_n_2 ),
        .p_0_in20_in(p_0_in20_in),
        .p_0_in21_in(p_0_in21_in),
        .p_0_in22_in(p_0_in22_in),
        .\val_reg[0]_0 (de_context__0[24]),
        .\val_reg[0]_1 (de_context__0[23]),
        .\val_reg[3]_0 (\genblk1[4].genblk1[4].regis_del_n_0 ),
        .\val_reg[3]_1 (\genblk1[4].genblk1[4].regis_del_n_1 ),
        .\val_reg[3]_2 (\genblk1[4].genblk1[4].regis_del_n_3 ));
endmodule

(* ORIG_REF_NAME = "contextNxN" *) 
module hdmi_vga_vp_0_0_contextNxN__xdcDup__2
   (p_0_in_6,
    \val_reg[1] ,
    \val_reg[3] ,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    \val_reg[3]_3 ,
    \val_reg[0] ,
    \val_reg[0]_0 ,
    \val_reg[0]_1 ,
    clk,
    dina,
    p_0_in0_in,
    p_0_in,
    sw,
    p_0_in1_in,
    \pixel_reg_reg[0] );
  output p_0_in_6;
  output \val_reg[1] ;
  output \val_reg[3] ;
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output \val_reg[3]_3 ;
  output \val_reg[0] ;
  output [0:0]\val_reg[0]_0 ;
  output [0:0]\val_reg[0]_1 ;
  input clk;
  input [3:0]dina;
  input p_0_in0_in;
  input p_0_in;
  input [0:0]sw;
  input p_0_in1_in;
  input \pixel_reg_reg[0] ;

  wire brama_n_12;
  wire brama_n_13;
  wire clk;
  wire [3:0]\conectors[1][0]_2 ;
  wire [3:0]\conectors[2][0]_1 ;
  wire [3:0]\conectors[3][0]_0 ;
  wire [24:5]context;
  wire [19:9]context_0;
  wire [23:5]de_context;
  wire [19:9]de_context_1;
  wire [3:0]dina;
  wire \genblk1[1].genblk1[3].regis_del_n_0 ;
  wire \genblk1[1].genblk1[3].regis_del_n_1 ;
  wire \genblk1[1].genblk1[4].regis_del_n_1 ;
  wire \genblk1[1].genblk1[4].regis_del_n_2 ;
  wire \genblk1[2].genblk1[1].regis_del_n_0 ;
  wire \genblk1[2].genblk1[1].regis_del_n_1 ;
  wire \genblk1[2].genblk1[3].regis_del_n_1 ;
  wire \genblk1[2].genblk1[3].regis_del_n_2 ;
  wire \genblk1[2].genblk1[4].regis_del_n_0 ;
  wire \genblk1[2].genblk1[4].regis_del_n_2 ;
  wire \genblk1[2].genblk1[4].regis_del_n_3 ;
  wire \genblk1[2].genblk1[4].regis_del_n_5 ;
  wire \genblk1[3].genblk1[1].regis_del_n_0 ;
  wire \genblk1[3].genblk1[3].regis_del_n_0 ;
  wire \genblk1[3].genblk1[3].regis_del_n_1 ;
  wire \genblk1[3].genblk1[3].regis_del_n_2 ;
  wire \genblk1[3].genblk1[4].regis_del_n_1 ;
  wire \genblk1[3].genblk1[4].regis_del_n_2 ;
  wire \genblk1[3].genblk1[4].regis_del_n_4 ;
  wire \genblk1[4].genblk1[0].regis_del_n_0 ;
  wire \genblk1[4].genblk1[0].regis_del_n_2 ;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire p_0_in_6;
  wire \pixel_reg_reg[0] ;
  wire [0:0]sw;
  wire \val_reg[0] ;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire \val_reg[1] ;
  wire \val_reg[3] ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;
  wire \val_reg[3]_3 ;

  hdmi_vga_vp_0_0_delayLinieBRAM_WP__xdcDup__2 brama
       (.clk(clk),
        .dina({dina,context_0[9],\genblk1[1].genblk1[4].regis_del_n_1 ,\genblk1[1].genblk1[4].regis_del_n_2 ,de_context_1[9],context_0[14],\genblk1[2].genblk1[4].regis_del_n_2 ,\genblk1[2].genblk1[4].regis_del_n_3 ,de_context_1[14],context_0[19],\genblk1[3].genblk1[4].regis_del_n_1 ,\genblk1[3].genblk1[4].regis_del_n_2 ,de_context_1[19]}),
        .douta({\conectors[1][0]_2 ,\conectors[2][0]_1 ,\conectors[3][0]_0 ,brama_n_12,brama_n_13}));
  hdmi_vga_vp_0_0_register__parameterized4_24 \genblk1[1].genblk1[0].regis_del 
       (.clk(clk),
        .context(context[5]),
        .de_context(de_context[5]),
        .dina(dina[3]),
        .douta({\conectors[1][0]_2 [3],\conectors[1][0]_2 [0]}),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .\pixel_reg[0]_i_2 (context[8:6]),
        .\val_reg[3]_0 (\val_reg[3] ),
        .\val_reg[3]_1 (\val_reg[3]_3 ));
  hdmi_vga_vp_0_0_register__parameterized4_25 \genblk1[1].genblk1[1].regis_del 
       (.clk(clk),
        .context(context[5]),
        .de_context(de_context[6]),
        .\val_reg[0]_0 (de_context[5]),
        .\val_reg[3]_0 (context[6]));
  hdmi_vga_vp_0_0_register__parameterized4_26 \genblk1[1].genblk1[2].regis_del 
       (.clk(clk),
        .de_context(de_context[7]),
        .\val_reg[0]_0 (de_context[6]),
        .\val_reg[3]_0 (context[7]),
        .\val_reg[3]_1 (context[6]));
  hdmi_vga_vp_0_0_register__parameterized4_27 \genblk1[1].genblk1[3].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[1].genblk1[3].regis_del_n_0 ),
        .clk_1(\genblk1[1].genblk1[3].regis_del_n_1 ),
        .de_context({de_context[11:10],de_context[7:5]}),
        .dina(de_context_1[9]),
        .douta(\conectors[1][0]_2 [2:1]),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0] ),
        .\pixel_reg_reg[0]_0 (\genblk1[4].genblk1[0].regis_del_n_2 ),
        .\pixel_reg_reg[0]_1 (\genblk1[2].genblk1[4].regis_del_n_5 ),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[0]_1 (de_context[8]),
        .\val_reg[3]_0 (context[8]),
        .\val_reg[3]_1 (context[7]));
  hdmi_vga_vp_0_0_register__parameterized4_28 \genblk1[1].genblk1[4].regis_del 
       (.clk(clk),
        .dina({context_0[9],\genblk1[1].genblk1[4].regis_del_n_1 ,\genblk1[1].genblk1[4].regis_del_n_2 ,de_context_1[9]}),
        .\val_reg[0]_0 (de_context[8]),
        .\val_reg[1]_0 (\genblk1[1].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[1].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (context[8]));
  hdmi_vga_vp_0_0_register__parameterized4_29 \genblk1[2].genblk1[0].regis_del 
       (.clk(clk),
        .context(context[10]),
        .de_context(de_context[10]),
        .dina(context_0[9]),
        .douta({\conectors[2][0]_1 [3],\conectors[2][0]_1 [0]}),
        .\pixel_reg[0]_i_2 (\genblk1[2].genblk1[4].regis_del_n_0 ),
        .\pixel_reg[0]_i_2_0 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .\pixel_reg[0]_i_2_1 (\genblk1[3].genblk1[4].regis_del_n_4 ),
        .sw(sw),
        .\val_reg[3]_0 (\val_reg[3]_2 ));
  hdmi_vga_vp_0_0_register__parameterized4_30 \genblk1[2].genblk1[1].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[2].genblk1[1].regis_del_n_0 ),
        .clk_1(\genblk1[2].genblk1[1].regis_del_n_1 ),
        .context(context[11]),
        .de_context(de_context[11]),
        .dina(context_0[9]),
        .douta(\conectors[2][0]_1 [2:1]),
        .\pixel_reg[0]_i_3 ({context[12],context[10]}),
        .\pixel_reg[0]_i_3_0 (\genblk1[3].genblk1[1].regis_del_n_0 ),
        .\val_reg[0]_0 (de_context[10]),
        .\val_reg[3]_0 (\val_reg[3]_1 ));
  hdmi_vga_vp_0_0_register__parameterized4_31 \genblk1[2].genblk1[2].regis_del 
       (.clk(clk),
        .context(context[11]),
        .de_context(de_context[11]),
        .p_0_in_6(p_0_in_6),
        .\val_reg[0]_0 (\val_reg[0]_0 ),
        .\val_reg[1]_0 (\val_reg[1] ),
        .\val_reg[1]_1 (\genblk1[2].genblk1[1].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_0 (context[12]));
  hdmi_vga_vp_0_0_register__parameterized4_32 \genblk1[2].genblk1[3].regis_del 
       (.clk(clk),
        .context(context[13]),
        .de_context(de_context[13]),
        .p_0_in_6(p_0_in_6),
        .\val_reg[0]_0 (\val_reg[0]_0 ),
        .\val_reg[1]_0 (\genblk1[2].genblk1[3].regis_del_n_2 ),
        .\val_reg[1]_1 (\val_reg[1] ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[3].regis_del_n_1 ),
        .\val_reg[3]_0 (context[12]));
  hdmi_vga_vp_0_0_register__parameterized4_33 \genblk1[2].genblk1[4].regis_del 
       (.clk(clk),
        .context(context[13:11]),
        .de_context({de_context[17:15],de_context[13]}),
        .dina({context_0[14],\genblk1[2].genblk1[4].regis_del_n_2 ,\genblk1[2].genblk1[4].regis_del_n_3 ,de_context_1[14]}),
        .\pixel_reg[0]_i_4 (\val_reg[0]_0 ),
        .\val_reg[0]_0 (\genblk1[2].genblk1[4].regis_del_n_5 ),
        .\val_reg[1]_0 (\genblk1[2].genblk1[3].regis_del_n_2 ),
        .\val_reg[2]_0 (\genblk1[2].genblk1[3].regis_del_n_1 ),
        .\val_reg[3]_0 (\genblk1[2].genblk1[4].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_34 \genblk1[3].genblk1[0].regis_del 
       (.clk(clk),
        .context(context[15]),
        .de_context(de_context[15]),
        .douta({\conectors[3][0]_0 [3],\conectors[3][0]_0 [0]}));
  hdmi_vga_vp_0_0_register__parameterized4_35 \genblk1[3].genblk1[1].regis_del 
       (.clk(clk),
        .context(context[16]),
        .de_context(de_context[16]),
        .dina(context_0[14]),
        .\val_reg[0]_0 (de_context[15]),
        .\val_reg[3]_0 (\genblk1[3].genblk1[1].regis_del_n_0 ),
        .\val_reg[3]_1 ({context[15],context[13]}));
  hdmi_vga_vp_0_0_register__parameterized4_36 \genblk1[3].genblk1[2].regis_del 
       (.clk(clk),
        .context(context[17]),
        .de_context(de_context[17]),
        .\val_reg[0]_0 (de_context[16]),
        .\val_reg[3]_0 (context[16]));
  hdmi_vga_vp_0_0_register__parameterized4_37 \genblk1[3].genblk1[3].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[3].genblk1[3].regis_del_n_0 ),
        .clk_1(\genblk1[3].genblk1[3].regis_del_n_1 ),
        .context(context[18]),
        .de_context(de_context[18]),
        .douta(\conectors[3][0]_0 [2:1]),
        .\val_reg[0]_0 (de_context[17]),
        .\val_reg[3]_0 (\genblk1[3].genblk1[3].regis_del_n_2 ),
        .\val_reg[3]_1 (context[17:15]));
  hdmi_vga_vp_0_0_register__parameterized4_38 \genblk1[3].genblk1[4].regis_del 
       (.clk(clk),
        .context({context[24:20],context[18]}),
        .de_context(de_context[18]),
        .dina({context_0[19],\genblk1[3].genblk1[4].regis_del_n_1 ,\genblk1[3].genblk1[4].regis_del_n_2 ,de_context_1[19]}),
        .\val_reg[1]_0 (\genblk1[3].genblk1[3].regis_del_n_1 ),
        .\val_reg[2]_0 (\genblk1[3].genblk1[3].regis_del_n_0 ),
        .\val_reg[3]_0 (\genblk1[3].genblk1[4].regis_del_n_4 ));
  hdmi_vga_vp_0_0_register__parameterized4_39 \genblk1[4].genblk1[0].regis_del 
       (.clk(clk),
        .context(context[20]),
        .de_context(de_context[20]),
        .dina({context_0[19],de_context_1[19]}),
        .douta({brama_n_12,brama_n_13}),
        .\pixel_reg[0]_i_4 ({de_context[23:21],de_context[18]}),
        .\pixel_reg[0]_i_8 (context[18:17]),
        .\val_reg[0]_0 (\genblk1[4].genblk1[0].regis_del_n_2 ),
        .\val_reg[3]_0 (\genblk1[4].genblk1[0].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_40 \genblk1[4].genblk1[1].regis_del 
       (.clk(clk),
        .context(context[21]),
        .de_context(de_context[20]),
        .\pixel_reg[0]_i_3 ({context[24:22],context[20]}),
        .\pixel_reg[0]_i_3_0 (\genblk1[4].genblk1[0].regis_del_n_0 ),
        .\val_reg[0]_0 (de_context[21]),
        .\val_reg[3]_0 (\val_reg[3]_0 ));
  hdmi_vga_vp_0_0_register__parameterized4_41 \genblk1[4].genblk1[2].regis_del 
       (.clk(clk),
        .context(context[21]),
        .\val_reg[0]_0 (de_context[22]),
        .\val_reg[0]_1 (de_context[21]),
        .\val_reg[3]_0 (context[22]));
  hdmi_vga_vp_0_0_register__parameterized4_42 \genblk1[4].genblk1[3].regis_del 
       (.clk(clk),
        .\val_reg[0]_0 (de_context[23]),
        .\val_reg[0]_1 (de_context[22]),
        .\val_reg[3]_0 (context[23]),
        .\val_reg[3]_1 (context[22]));
  hdmi_vga_vp_0_0_register__parameterized4_43 \genblk1[4].genblk1[4].regis_del 
       (.clk(clk),
        .\val_reg[0]_0 (\val_reg[0]_1 ),
        .\val_reg[0]_1 (de_context[23]),
        .\val_reg[3]_0 (context[24]),
        .\val_reg[3]_1 (context[23]));
endmodule

(* ORIG_REF_NAME = "delayLineBRAM" *) (* X_CORE_INFO = "blk_mem_gen_v8_4_5,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_delayLineBRAM
   (clka,
    wea,
    addra,
    dina,
    douta);
  input clka;
  input [0:0]wea;
  input [10:0]addra;
  input [16:0]dina;
  output [16:0]douta;


endmodule

(* ORIG_REF_NAME = "delayLinieBRAM_WP" *) 
module hdmi_vga_vp_0_0_delayLinieBRAM_WP
   (douta,
    clk,
    dina);
  output [13:0]douta;
  input clk;
  input [15:0]dina;

  wire BRAM_n_14;
  wire BRAM_n_15;
  wire clk;
  wire [15:0]dina;
  wire [13:0]douta;
  wire position0_carry__0_i_1__1_n_0;
  wire position0_carry__0_n_3;
  wire position0_carry_i_1__1_n_0;
  wire position0_carry_i_2__1_n_0;
  wire position0_carry_i_3__1_n_0;
  wire position0_carry_i_4__1_n_0;
  wire position0_carry_n_0;
  wire position0_carry_n_1;
  wire position0_carry_n_2;
  wire position0_carry_n_3;
  wire \position[0]_i_2__1_n_0 ;
  wire [10:0]position_reg;
  wire \position_reg[0]_i_1__1_n_0 ;
  wire \position_reg[0]_i_1__1_n_1 ;
  wire \position_reg[0]_i_1__1_n_2 ;
  wire \position_reg[0]_i_1__1_n_3 ;
  wire \position_reg[0]_i_1__1_n_4 ;
  wire \position_reg[0]_i_1__1_n_5 ;
  wire \position_reg[0]_i_1__1_n_6 ;
  wire \position_reg[0]_i_1__1_n_7 ;
  wire \position_reg[12]_i_1__1_n_7 ;
  wire \position_reg[4]_i_1__1_n_0 ;
  wire \position_reg[4]_i_1__1_n_1 ;
  wire \position_reg[4]_i_1__1_n_2 ;
  wire \position_reg[4]_i_1__1_n_3 ;
  wire \position_reg[4]_i_1__1_n_4 ;
  wire \position_reg[4]_i_1__1_n_5 ;
  wire \position_reg[4]_i_1__1_n_6 ;
  wire \position_reg[4]_i_1__1_n_7 ;
  wire \position_reg[8]_i_1__1_n_0 ;
  wire \position_reg[8]_i_1__1_n_1 ;
  wire \position_reg[8]_i_1__1_n_2 ;
  wire \position_reg[8]_i_1__1_n_3 ;
  wire \position_reg[8]_i_1__1_n_4 ;
  wire \position_reg[8]_i_1__1_n_5 ;
  wire \position_reg[8]_i_1__1_n_6 ;
  wire \position_reg[8]_i_1__1_n_7 ;
  wire [12:11]position_reg__0;
  wire [16:16]NLW_BRAM_douta_UNCONNECTED;
  wire [3:0]NLW_position0_carry_O_UNCONNECTED;
  wire [3:1]NLW_position0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_position0_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_position_reg[12]_i_1__1_CO_UNCONNECTED ;
  wire [3:1]\NLW_position_reg[12]_i_1__1_O_UNCONNECTED ;

  (* x_core_info = "blk_mem_gen_v8_4_5,Vivado 2022.2" *) 
  delayLineBRAM_HD242 BRAM
       (.addra(position_reg),
        .clka(clk),
        .dina({1'b0,dina}),
        .douta({NLW_BRAM_douta_UNCONNECTED[16],douta[13:1],BRAM_n_14,BRAM_n_15,douta[0]}),
        .wea(1'b1));
  CARRY4 position0_carry
       (.CI(1'b0),
        .CO({position0_carry_n_0,position0_carry_n_1,position0_carry_n_2,position0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_position0_carry_O_UNCONNECTED[3:0]),
        .S({position0_carry_i_1__1_n_0,position0_carry_i_2__1_n_0,position0_carry_i_3__1_n_0,position0_carry_i_4__1_n_0}));
  CARRY4 position0_carry__0
       (.CI(position0_carry_n_0),
        .CO({NLW_position0_carry__0_CO_UNCONNECTED[3:1],position0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_position0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,position0_carry__0_i_1__1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    position0_carry__0_i_1__1
       (.I0(position_reg__0[12]),
        .O(position0_carry__0_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    position0_carry_i_1__1
       (.I0(position_reg__0[11]),
        .I1(position_reg[10]),
        .I2(position_reg[9]),
        .O(position0_carry_i_1__1_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    position0_carry_i_2__1
       (.I0(position_reg[8]),
        .I1(position_reg[7]),
        .I2(position_reg[6]),
        .O(position0_carry_i_2__1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    position0_carry_i_3__1
       (.I0(position_reg[4]),
        .I1(position_reg[5]),
        .I2(position_reg[3]),
        .O(position0_carry_i_3__1_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    position0_carry_i_4__1
       (.I0(position_reg[2]),
        .I1(position_reg[1]),
        .I2(position_reg[0]),
        .O(position0_carry_i_4__1_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \position[0]_i_2__1 
       (.I0(position_reg[0]),
        .O(\position[0]_i_2__1_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__1_n_7 ),
        .Q(position_reg[0]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[0]_i_1__1 
       (.CI(1'b0),
        .CO({\position_reg[0]_i_1__1_n_0 ,\position_reg[0]_i_1__1_n_1 ,\position_reg[0]_i_1__1_n_2 ,\position_reg[0]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\position_reg[0]_i_1__1_n_4 ,\position_reg[0]_i_1__1_n_5 ,\position_reg[0]_i_1__1_n_6 ,\position_reg[0]_i_1__1_n_7 }),
        .S({position_reg[3:1],\position[0]_i_2__1_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__1_n_5 ),
        .Q(position_reg[10]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__1_n_4 ),
        .Q(position_reg__0[11]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[12]_i_1__1_n_7 ),
        .Q(position_reg__0[12]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[12]_i_1__1 
       (.CI(\position_reg[8]_i_1__1_n_0 ),
        .CO(\NLW_position_reg[12]_i_1__1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_position_reg[12]_i_1__1_O_UNCONNECTED [3:1],\position_reg[12]_i_1__1_n_7 }),
        .S({1'b0,1'b0,1'b0,position_reg__0[12]}));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__1_n_6 ),
        .Q(position_reg[1]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__1_n_5 ),
        .Q(position_reg[2]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__1_n_4 ),
        .Q(position_reg[3]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__1_n_7 ),
        .Q(position_reg[4]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[4]_i_1__1 
       (.CI(\position_reg[0]_i_1__1_n_0 ),
        .CO({\position_reg[4]_i_1__1_n_0 ,\position_reg[4]_i_1__1_n_1 ,\position_reg[4]_i_1__1_n_2 ,\position_reg[4]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\position_reg[4]_i_1__1_n_4 ,\position_reg[4]_i_1__1_n_5 ,\position_reg[4]_i_1__1_n_6 ,\position_reg[4]_i_1__1_n_7 }),
        .S(position_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__1_n_6 ),
        .Q(position_reg[5]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__1_n_5 ),
        .Q(position_reg[6]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__1_n_4 ),
        .Q(position_reg[7]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__1_n_7 ),
        .Q(position_reg[8]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[8]_i_1__1 
       (.CI(\position_reg[4]_i_1__1_n_0 ),
        .CO({\position_reg[8]_i_1__1_n_0 ,\position_reg[8]_i_1__1_n_1 ,\position_reg[8]_i_1__1_n_2 ,\position_reg[8]_i_1__1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\position_reg[8]_i_1__1_n_4 ,\position_reg[8]_i_1__1_n_5 ,\position_reg[8]_i_1__1_n_6 ,\position_reg[8]_i_1__1_n_7 }),
        .S({position_reg__0[11],position_reg[10:8]}));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__1_n_6 ),
        .Q(position_reg[9]),
        .R(position0_carry__0_n_3));
endmodule

(* ORIG_REF_NAME = "delayLinieBRAM_WP" *) 
module hdmi_vga_vp_0_0_delayLinieBRAM_WP__xdcDup__1
   (douta,
    clk,
    \val_reg[3] ,
    dina);
  output [13:0]douta;
  input clk;
  input \val_reg[3] ;
  input [14:0]dina;

  wire BRAM_n_14;
  wire BRAM_n_15;
  wire clk;
  wire [14:0]dina;
  wire [13:0]douta;
  wire position0_carry__0_i_1_n_0;
  wire position0_carry__0_n_3;
  wire position0_carry_i_1_n_0;
  wire position0_carry_i_2_n_0;
  wire position0_carry_i_3_n_0;
  wire position0_carry_i_4_n_0;
  wire position0_carry_n_0;
  wire position0_carry_n_1;
  wire position0_carry_n_2;
  wire position0_carry_n_3;
  wire \position[0]_i_2_n_0 ;
  wire [10:0]position_reg;
  wire \position_reg[0]_i_1_n_0 ;
  wire \position_reg[0]_i_1_n_1 ;
  wire \position_reg[0]_i_1_n_2 ;
  wire \position_reg[0]_i_1_n_3 ;
  wire \position_reg[0]_i_1_n_4 ;
  wire \position_reg[0]_i_1_n_5 ;
  wire \position_reg[0]_i_1_n_6 ;
  wire \position_reg[0]_i_1_n_7 ;
  wire \position_reg[12]_i_1_n_7 ;
  wire \position_reg[4]_i_1_n_0 ;
  wire \position_reg[4]_i_1_n_1 ;
  wire \position_reg[4]_i_1_n_2 ;
  wire \position_reg[4]_i_1_n_3 ;
  wire \position_reg[4]_i_1_n_4 ;
  wire \position_reg[4]_i_1_n_5 ;
  wire \position_reg[4]_i_1_n_6 ;
  wire \position_reg[4]_i_1_n_7 ;
  wire \position_reg[8]_i_1_n_0 ;
  wire \position_reg[8]_i_1_n_1 ;
  wire \position_reg[8]_i_1_n_2 ;
  wire \position_reg[8]_i_1_n_3 ;
  wire \position_reg[8]_i_1_n_4 ;
  wire \position_reg[8]_i_1_n_5 ;
  wire \position_reg[8]_i_1_n_6 ;
  wire \position_reg[8]_i_1_n_7 ;
  wire [12:11]position_reg__0;
  wire \val_reg[3] ;
  wire [16:16]NLW_BRAM_douta_UNCONNECTED;
  wire [3:0]NLW_position0_carry_O_UNCONNECTED;
  wire [3:1]NLW_position0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_position0_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_position_reg[12]_i_1_CO_UNCONNECTED ;
  wire [3:1]\NLW_position_reg[12]_i_1_O_UNCONNECTED ;

  (* x_core_info = "blk_mem_gen_v8_4_5,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_delayLineBRAM BRAM
       (.addra(position_reg),
        .clka(clk),
        .dina({1'b0,\val_reg[3] ,dina}),
        .douta({NLW_BRAM_douta_UNCONNECTED[16],douta[13:1],BRAM_n_14,BRAM_n_15,douta[0]}),
        .wea(1'b1));
  CARRY4 position0_carry
       (.CI(1'b0),
        .CO({position0_carry_n_0,position0_carry_n_1,position0_carry_n_2,position0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_position0_carry_O_UNCONNECTED[3:0]),
        .S({position0_carry_i_1_n_0,position0_carry_i_2_n_0,position0_carry_i_3_n_0,position0_carry_i_4_n_0}));
  CARRY4 position0_carry__0
       (.CI(position0_carry_n_0),
        .CO({NLW_position0_carry__0_CO_UNCONNECTED[3:1],position0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_position0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,position0_carry__0_i_1_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    position0_carry__0_i_1
       (.I0(position_reg__0[12]),
        .O(position0_carry__0_i_1_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    position0_carry_i_1
       (.I0(position_reg__0[11]),
        .I1(position_reg[10]),
        .I2(position_reg[9]),
        .O(position0_carry_i_1_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    position0_carry_i_2
       (.I0(position_reg[8]),
        .I1(position_reg[7]),
        .I2(position_reg[6]),
        .O(position0_carry_i_2_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    position0_carry_i_3
       (.I0(position_reg[4]),
        .I1(position_reg[5]),
        .I2(position_reg[3]),
        .O(position0_carry_i_3_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    position0_carry_i_4
       (.I0(position_reg[2]),
        .I1(position_reg[1]),
        .I2(position_reg[0]),
        .O(position0_carry_i_4_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \position[0]_i_2 
       (.I0(position_reg[0]),
        .O(\position[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1_n_7 ),
        .Q(position_reg[0]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[0]_i_1 
       (.CI(1'b0),
        .CO({\position_reg[0]_i_1_n_0 ,\position_reg[0]_i_1_n_1 ,\position_reg[0]_i_1_n_2 ,\position_reg[0]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\position_reg[0]_i_1_n_4 ,\position_reg[0]_i_1_n_5 ,\position_reg[0]_i_1_n_6 ,\position_reg[0]_i_1_n_7 }),
        .S({position_reg[3:1],\position[0]_i_2_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1_n_5 ),
        .Q(position_reg[10]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1_n_4 ),
        .Q(position_reg__0[11]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[12]_i_1_n_7 ),
        .Q(position_reg__0[12]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[12]_i_1 
       (.CI(\position_reg[8]_i_1_n_0 ),
        .CO(\NLW_position_reg[12]_i_1_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_position_reg[12]_i_1_O_UNCONNECTED [3:1],\position_reg[12]_i_1_n_7 }),
        .S({1'b0,1'b0,1'b0,position_reg__0[12]}));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1_n_6 ),
        .Q(position_reg[1]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1_n_5 ),
        .Q(position_reg[2]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1_n_4 ),
        .Q(position_reg[3]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1_n_7 ),
        .Q(position_reg[4]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[4]_i_1 
       (.CI(\position_reg[0]_i_1_n_0 ),
        .CO({\position_reg[4]_i_1_n_0 ,\position_reg[4]_i_1_n_1 ,\position_reg[4]_i_1_n_2 ,\position_reg[4]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\position_reg[4]_i_1_n_4 ,\position_reg[4]_i_1_n_5 ,\position_reg[4]_i_1_n_6 ,\position_reg[4]_i_1_n_7 }),
        .S(position_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1_n_6 ),
        .Q(position_reg[5]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1_n_5 ),
        .Q(position_reg[6]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1_n_4 ),
        .Q(position_reg[7]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1_n_7 ),
        .Q(position_reg[8]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[8]_i_1 
       (.CI(\position_reg[4]_i_1_n_0 ),
        .CO({\position_reg[8]_i_1_n_0 ,\position_reg[8]_i_1_n_1 ,\position_reg[8]_i_1_n_2 ,\position_reg[8]_i_1_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\position_reg[8]_i_1_n_4 ,\position_reg[8]_i_1_n_5 ,\position_reg[8]_i_1_n_6 ,\position_reg[8]_i_1_n_7 }),
        .S({position_reg__0[11],position_reg[10:8]}));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1_n_6 ),
        .Q(position_reg[9]),
        .R(position0_carry__0_n_3));
endmodule

(* ORIG_REF_NAME = "delayLinieBRAM_WP" *) 
module hdmi_vga_vp_0_0_delayLinieBRAM_WP__xdcDup__2
   (douta,
    clk,
    dina);
  output [13:0]douta;
  input clk;
  input [15:0]dina;

  wire BRAM_n_14;
  wire BRAM_n_15;
  wire clk;
  wire [15:0]dina;
  wire [13:0]douta;
  wire position0_carry__0_i_1__0_n_0;
  wire position0_carry__0_n_3;
  wire position0_carry_i_1__0_n_0;
  wire position0_carry_i_2__0_n_0;
  wire position0_carry_i_3__0_n_0;
  wire position0_carry_i_4__0_n_0;
  wire position0_carry_n_0;
  wire position0_carry_n_1;
  wire position0_carry_n_2;
  wire position0_carry_n_3;
  wire \position[0]_i_2__0_n_0 ;
  wire [10:0]position_reg;
  wire \position_reg[0]_i_1__0_n_0 ;
  wire \position_reg[0]_i_1__0_n_1 ;
  wire \position_reg[0]_i_1__0_n_2 ;
  wire \position_reg[0]_i_1__0_n_3 ;
  wire \position_reg[0]_i_1__0_n_4 ;
  wire \position_reg[0]_i_1__0_n_5 ;
  wire \position_reg[0]_i_1__0_n_6 ;
  wire \position_reg[0]_i_1__0_n_7 ;
  wire \position_reg[12]_i_1__0_n_7 ;
  wire \position_reg[4]_i_1__0_n_0 ;
  wire \position_reg[4]_i_1__0_n_1 ;
  wire \position_reg[4]_i_1__0_n_2 ;
  wire \position_reg[4]_i_1__0_n_3 ;
  wire \position_reg[4]_i_1__0_n_4 ;
  wire \position_reg[4]_i_1__0_n_5 ;
  wire \position_reg[4]_i_1__0_n_6 ;
  wire \position_reg[4]_i_1__0_n_7 ;
  wire \position_reg[8]_i_1__0_n_0 ;
  wire \position_reg[8]_i_1__0_n_1 ;
  wire \position_reg[8]_i_1__0_n_2 ;
  wire \position_reg[8]_i_1__0_n_3 ;
  wire \position_reg[8]_i_1__0_n_4 ;
  wire \position_reg[8]_i_1__0_n_5 ;
  wire \position_reg[8]_i_1__0_n_6 ;
  wire \position_reg[8]_i_1__0_n_7 ;
  wire [12:11]position_reg__0;
  wire [16:16]NLW_BRAM_douta_UNCONNECTED;
  wire [3:0]NLW_position0_carry_O_UNCONNECTED;
  wire [3:1]NLW_position0_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_position0_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_position_reg[12]_i_1__0_CO_UNCONNECTED ;
  wire [3:1]\NLW_position_reg[12]_i_1__0_O_UNCONNECTED ;

  (* x_core_info = "blk_mem_gen_v8_4_5,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_delayLineBRAM BRAM
       (.addra(position_reg),
        .clka(clk),
        .dina({1'b0,dina}),
        .douta({NLW_BRAM_douta_UNCONNECTED[16],douta[13:1],BRAM_n_14,BRAM_n_15,douta[0]}),
        .wea(1'b1));
  CARRY4 position0_carry
       (.CI(1'b0),
        .CO({position0_carry_n_0,position0_carry_n_1,position0_carry_n_2,position0_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_position0_carry_O_UNCONNECTED[3:0]),
        .S({position0_carry_i_1__0_n_0,position0_carry_i_2__0_n_0,position0_carry_i_3__0_n_0,position0_carry_i_4__0_n_0}));
  CARRY4 position0_carry__0
       (.CI(position0_carry_n_0),
        .CO({NLW_position0_carry__0_CO_UNCONNECTED[3:1],position0_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_position0_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,position0_carry__0_i_1__0_n_0}));
  LUT1 #(
    .INIT(2'h1)) 
    position0_carry__0_i_1__0
       (.I0(position_reg__0[12]),
        .O(position0_carry__0_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    position0_carry_i_1__0
       (.I0(position_reg__0[11]),
        .I1(position_reg[10]),
        .I2(position_reg[9]),
        .O(position0_carry_i_1__0_n_0));
  LUT3 #(
    .INIT(8'h10)) 
    position0_carry_i_2__0
       (.I0(position_reg[8]),
        .I1(position_reg[7]),
        .I2(position_reg[6]),
        .O(position0_carry_i_2__0_n_0));
  LUT3 #(
    .INIT(8'h40)) 
    position0_carry_i_3__0
       (.I0(position_reg[4]),
        .I1(position_reg[5]),
        .I2(position_reg[3]),
        .O(position0_carry_i_3__0_n_0));
  LUT3 #(
    .INIT(8'h04)) 
    position0_carry_i_4__0
       (.I0(position_reg[2]),
        .I1(position_reg[1]),
        .I2(position_reg[0]),
        .O(position0_carry_i_4__0_n_0));
  LUT1 #(
    .INIT(2'h1)) 
    \position[0]_i_2__0 
       (.I0(position_reg[0]),
        .O(\position[0]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__0_n_7 ),
        .Q(position_reg[0]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[0]_i_1__0 
       (.CI(1'b0),
        .CO({\position_reg[0]_i_1__0_n_0 ,\position_reg[0]_i_1__0_n_1 ,\position_reg[0]_i_1__0_n_2 ,\position_reg[0]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b1}),
        .O({\position_reg[0]_i_1__0_n_4 ,\position_reg[0]_i_1__0_n_5 ,\position_reg[0]_i_1__0_n_6 ,\position_reg[0]_i_1__0_n_7 }),
        .S({position_reg[3:1],\position[0]_i_2__0_n_0 }));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__0_n_5 ),
        .Q(position_reg[10]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__0_n_4 ),
        .Q(position_reg__0[11]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[12]_i_1__0_n_7 ),
        .Q(position_reg__0[12]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[12]_i_1__0 
       (.CI(\position_reg[8]_i_1__0_n_0 ),
        .CO(\NLW_position_reg[12]_i_1__0_CO_UNCONNECTED [3:0]),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\NLW_position_reg[12]_i_1__0_O_UNCONNECTED [3:1],\position_reg[12]_i_1__0_n_7 }),
        .S({1'b0,1'b0,1'b0,position_reg__0[12]}));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__0_n_6 ),
        .Q(position_reg[1]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__0_n_5 ),
        .Q(position_reg[2]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[0]_i_1__0_n_4 ),
        .Q(position_reg[3]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__0_n_7 ),
        .Q(position_reg[4]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[4]_i_1__0 
       (.CI(\position_reg[0]_i_1__0_n_0 ),
        .CO({\position_reg[4]_i_1__0_n_0 ,\position_reg[4]_i_1__0_n_1 ,\position_reg[4]_i_1__0_n_2 ,\position_reg[4]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\position_reg[4]_i_1__0_n_4 ,\position_reg[4]_i_1__0_n_5 ,\position_reg[4]_i_1__0_n_6 ,\position_reg[4]_i_1__0_n_7 }),
        .S(position_reg[7:4]));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__0_n_6 ),
        .Q(position_reg[5]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__0_n_5 ),
        .Q(position_reg[6]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[4]_i_1__0_n_4 ),
        .Q(position_reg[7]),
        .R(position0_carry__0_n_3));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__0_n_7 ),
        .Q(position_reg[8]),
        .R(position0_carry__0_n_3));
  (* ADDER_THRESHOLD = "11" *) 
  CARRY4 \position_reg[8]_i_1__0 
       (.CI(\position_reg[4]_i_1__0_n_0 ),
        .CO({\position_reg[8]_i_1__0_n_0 ,\position_reg[8]_i_1__0_n_1 ,\position_reg[8]_i_1__0_n_2 ,\position_reg[8]_i_1__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O({\position_reg[8]_i_1__0_n_4 ,\position_reg[8]_i_1__0_n_5 ,\position_reg[8]_i_1__0_n_6 ,\position_reg[8]_i_1__0_n_7 }),
        .S({position_reg__0[11],position_reg[10:8]}));
  FDRE #(
    .INIT(1'b0)) 
    \position_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\position_reg[8]_i_1__0_n_6 ),
        .Q(position_reg[9]),
        .R(position0_carry__0_n_3));
endmodule

(* CHECK_LICENSE_TYPE = "dist_mem_gen_0,dist_mem_gen_v8_0_13,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "dist_mem_gen_0" *) 
(* X_CORE_INFO = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_dist_mem_gen_0
   (a,
    clk,
    qspo);
  input [7:0]a;
  input clk;
  output [7:0]qspo;

  wire [7:0]a;
  wire clk;
  wire [7:0]qspo;
  wire [7:0]NLW_U0_dpo_UNCONNECTED;
  wire [7:0]NLW_U0_qdpo_UNCONNECTED;
  wire [7:0]NLW_U0_spo_UNCONNECTED;

  (* C_FAMILY = "zynq" *) 
  (* C_HAS_D = "0" *) 
  (* C_HAS_DPO = "0" *) 
  (* C_HAS_DPRA = "0" *) 
  (* C_HAS_I_CE = "0" *) 
  (* C_HAS_QDPO = "0" *) 
  (* C_HAS_QDPO_CE = "0" *) 
  (* C_HAS_QDPO_CLK = "0" *) 
  (* C_HAS_QDPO_RST = "0" *) 
  (* C_HAS_QDPO_SRST = "0" *) 
  (* C_HAS_WE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_PIPELINE_STAGES = "0" *) 
  (* C_QCE_JOINED = "0" *) 
  (* C_QUALIFY_WE = "0" *) 
  (* C_REG_DPRA_INPUT = "0" *) 
  (* C_WIDTH = "8" *) 
  (* c_addr_width = "8" *) 
  (* c_default_data = "0" *) 
  (* c_depth = "256" *) 
  (* c_elaboration_dir = "./" *) 
  (* c_has_clk = "1" *) 
  (* c_has_qspo = "1" *) 
  (* c_has_qspo_ce = "0" *) 
  (* c_has_qspo_rst = "0" *) 
  (* c_has_qspo_srst = "0" *) 
  (* c_has_spo = "0" *) 
  (* c_mem_init_file = "dist_mem_gen_0.mif" *) 
  (* c_parser_type = "1" *) 
  (* c_read_mif = "1" *) 
  (* c_reg_a_d_inputs = "0" *) 
  (* c_sync_enable = "1" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_v8_0_13 U0
       (.a({a[7],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clk(clk),
        .d({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dpo(NLW_U0_dpo_UNCONNECTED[7:0]),
        .dpra({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .i_ce(1'b1),
        .qdpo(NLW_U0_qdpo_UNCONNECTED[7:0]),
        .qdpo_ce(1'b1),
        .qdpo_clk(1'b0),
        .qdpo_rst(1'b0),
        .qdpo_srst(1'b0),
        .qspo(qspo),
        .qspo_ce(1'b1),
        .qspo_rst(1'b0),
        .qspo_srst(1'b0),
        .spo(NLW_U0_spo_UNCONNECTED[7:0]),
        .we(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "dist_mem_gen_0,dist_mem_gen_v8_0_13,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "dist_mem_gen_0" *) 
(* X_CORE_INFO = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_dist_mem_gen_0__1
   (a,
    clk,
    qspo);
  input [7:0]a;
  input clk;
  output [7:0]qspo;

  wire [7:0]a;
  wire clk;
  wire [7:0]qspo;
  wire [7:0]NLW_U0_dpo_UNCONNECTED;
  wire [7:0]NLW_U0_qdpo_UNCONNECTED;
  wire [7:0]NLW_U0_spo_UNCONNECTED;

  (* C_FAMILY = "zynq" *) 
  (* C_HAS_D = "0" *) 
  (* C_HAS_DPO = "0" *) 
  (* C_HAS_DPRA = "0" *) 
  (* C_HAS_I_CE = "0" *) 
  (* C_HAS_QDPO = "0" *) 
  (* C_HAS_QDPO_CE = "0" *) 
  (* C_HAS_QDPO_CLK = "0" *) 
  (* C_HAS_QDPO_RST = "0" *) 
  (* C_HAS_QDPO_SRST = "0" *) 
  (* C_HAS_WE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_PIPELINE_STAGES = "0" *) 
  (* C_QCE_JOINED = "0" *) 
  (* C_QUALIFY_WE = "0" *) 
  (* C_REG_DPRA_INPUT = "0" *) 
  (* C_WIDTH = "8" *) 
  (* c_addr_width = "8" *) 
  (* c_default_data = "0" *) 
  (* c_depth = "256" *) 
  (* c_elaboration_dir = "./" *) 
  (* c_has_clk = "1" *) 
  (* c_has_qspo = "1" *) 
  (* c_has_qspo_ce = "0" *) 
  (* c_has_qspo_rst = "0" *) 
  (* c_has_qspo_srst = "0" *) 
  (* c_has_spo = "0" *) 
  (* c_mem_init_file = "dist_mem_gen_0.mif" *) 
  (* c_parser_type = "1" *) 
  (* c_read_mif = "1" *) 
  (* c_reg_a_d_inputs = "0" *) 
  (* c_sync_enable = "1" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_v8_0_13__1 U0
       (.a({a[7],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clk(clk),
        .d({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dpo(NLW_U0_dpo_UNCONNECTED[7:0]),
        .dpra({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .i_ce(1'b1),
        .qdpo(NLW_U0_qdpo_UNCONNECTED[7:0]),
        .qdpo_ce(1'b1),
        .qdpo_clk(1'b0),
        .qdpo_rst(1'b0),
        .qdpo_srst(1'b0),
        .qspo(qspo),
        .qspo_ce(1'b1),
        .qspo_rst(1'b0),
        .qspo_srst(1'b0),
        .spo(NLW_U0_spo_UNCONNECTED[7:0]),
        .we(1'b0));
endmodule

(* CHECK_LICENSE_TYPE = "dist_mem_gen_0,dist_mem_gen_v8_0_13,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "dist_mem_gen_0" *) 
(* X_CORE_INFO = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_dist_mem_gen_0__2
   (a,
    clk,
    qspo);
  input [7:0]a;
  input clk;
  output [7:0]qspo;

  wire [7:0]a;
  wire clk;
  wire [7:0]qspo;
  wire [7:0]NLW_U0_dpo_UNCONNECTED;
  wire [7:0]NLW_U0_qdpo_UNCONNECTED;
  wire [7:0]NLW_U0_spo_UNCONNECTED;

  (* C_FAMILY = "zynq" *) 
  (* C_HAS_D = "0" *) 
  (* C_HAS_DPO = "0" *) 
  (* C_HAS_DPRA = "0" *) 
  (* C_HAS_I_CE = "0" *) 
  (* C_HAS_QDPO = "0" *) 
  (* C_HAS_QDPO_CE = "0" *) 
  (* C_HAS_QDPO_CLK = "0" *) 
  (* C_HAS_QDPO_RST = "0" *) 
  (* C_HAS_QDPO_SRST = "0" *) 
  (* C_HAS_WE = "0" *) 
  (* C_MEM_TYPE = "0" *) 
  (* C_PIPELINE_STAGES = "0" *) 
  (* C_QCE_JOINED = "0" *) 
  (* C_QUALIFY_WE = "0" *) 
  (* C_REG_DPRA_INPUT = "0" *) 
  (* C_WIDTH = "8" *) 
  (* c_addr_width = "8" *) 
  (* c_default_data = "0" *) 
  (* c_depth = "256" *) 
  (* c_elaboration_dir = "./" *) 
  (* c_has_clk = "1" *) 
  (* c_has_qspo = "1" *) 
  (* c_has_qspo_ce = "0" *) 
  (* c_has_qspo_rst = "0" *) 
  (* c_has_qspo_srst = "0" *) 
  (* c_has_spo = "0" *) 
  (* c_mem_init_file = "dist_mem_gen_0.mif" *) 
  (* c_parser_type = "1" *) 
  (* c_read_mif = "1" *) 
  (* c_reg_a_d_inputs = "0" *) 
  (* c_sync_enable = "1" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_v8_0_13__2 U0
       (.a({a[7],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clk(clk),
        .d({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .dpo(NLW_U0_dpo_UNCONNECTED[7:0]),
        .dpra({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .i_ce(1'b1),
        .qdpo(NLW_U0_qdpo_UNCONNECTED[7:0]),
        .qdpo_ce(1'b1),
        .qdpo_clk(1'b0),
        .qdpo_rst(1'b0),
        .qdpo_srst(1'b0),
        .qspo(qspo),
        .qspo_ce(1'b1),
        .qspo_rst(1'b0),
        .qspo_srst(1'b0),
        .spo(NLW_U0_spo_UNCONNECTED[7:0]),
        .we(1'b0));
endmodule

(* ORIG_REF_NAME = "dist_mem_gen_1" *) (* X_CORE_INFO = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_dist_mem_gen_1
   (a,
    clk,
    qspo);
  input [5:0]a;
  input clk;
  output [0:0]qspo;


endmodule

(* ORIG_REF_NAME = "divider_32_20" *) 
module hdmi_vga_vp_0_0_divider_32_20
   (\FSM_onehot_state_reg[0]_0 ,
    \result_reg_reg[10]_0 ,
    clk,
    eof,
    \dividend_reg_reg[31]_0 ,
    Q,
    \divisor_reg_reg[19]_0 );
  output \FSM_onehot_state_reg[0]_0 ;
  output [10:0]\result_reg_reg[10]_0 ;
  input clk;
  input eof;
  input [0:0]\dividend_reg_reg[31]_0 ;
  input [31:0]Q;
  input [19:0]\divisor_reg_reg[19]_0 ;

  wire \FSM_onehot_state[0]_i_1__0_n_0 ;
  wire \FSM_onehot_state[1]_i_1__0_n_0 ;
  wire \FSM_onehot_state[1]_i_2__0_n_0 ;
  wire \FSM_onehot_state[1]_i_3__0_n_0 ;
  wire \FSM_onehot_state[2]_i_1__0_n_0 ;
  wire \FSM_onehot_state[3]_i_1__0_n_0 ;
  wire \FSM_onehot_state[3]_i_2__0_n_0 ;
  wire \FSM_onehot_state[3]_i_3__0_n_0 ;
  wire \FSM_onehot_state_reg[0]_0 ;
  wire [31:0]Q;
  wire clk;
  wire [0:0]\dividend_reg_reg[31]_0 ;
  wire \dividend_reg_reg_n_0_[0] ;
  wire \dividend_reg_reg_n_0_[10] ;
  wire \dividend_reg_reg_n_0_[11] ;
  wire \dividend_reg_reg_n_0_[12] ;
  wire \dividend_reg_reg_n_0_[13] ;
  wire \dividend_reg_reg_n_0_[14] ;
  wire \dividend_reg_reg_n_0_[15] ;
  wire \dividend_reg_reg_n_0_[16] ;
  wire \dividend_reg_reg_n_0_[17] ;
  wire \dividend_reg_reg_n_0_[18] ;
  wire \dividend_reg_reg_n_0_[19] ;
  wire \dividend_reg_reg_n_0_[1] ;
  wire \dividend_reg_reg_n_0_[20] ;
  wire \dividend_reg_reg_n_0_[21] ;
  wire \dividend_reg_reg_n_0_[22] ;
  wire \dividend_reg_reg_n_0_[23] ;
  wire \dividend_reg_reg_n_0_[24] ;
  wire \dividend_reg_reg_n_0_[25] ;
  wire \dividend_reg_reg_n_0_[26] ;
  wire \dividend_reg_reg_n_0_[27] ;
  wire \dividend_reg_reg_n_0_[28] ;
  wire \dividend_reg_reg_n_0_[29] ;
  wire \dividend_reg_reg_n_0_[2] ;
  wire \dividend_reg_reg_n_0_[30] ;
  wire \dividend_reg_reg_n_0_[31] ;
  wire \dividend_reg_reg_n_0_[3] ;
  wire \dividend_reg_reg_n_0_[4] ;
  wire \dividend_reg_reg_n_0_[5] ;
  wire \dividend_reg_reg_n_0_[6] ;
  wire \dividend_reg_reg_n_0_[7] ;
  wire \dividend_reg_reg_n_0_[8] ;
  wire \dividend_reg_reg_n_0_[9] ;
  wire [19:0]divisor_reg;
  wire [19:0]\divisor_reg_reg[19]_0 ;
  wire eof;
  wire [6:1]i0__1;
  wire \i[0]_i_1__0_n_0 ;
  wire \i[7]_i_1__0_n_0 ;
  wire \i[7]_i_2__0_n_0 ;
  wire \i[7]_i_3__0_n_0 ;
  wire [7:0]i_reg;
  wire lat_cnt;
  wire lat_cnt0;
  wire [7:0]lat_cnt0__0;
  wire \lat_cnt[7]_i_2__0_n_0 ;
  wire [7:0]lat_cnt_reg;
  wire [51:0]mul_res;
  wire [10:0]\result_reg_reg[10]_0 ;
  wire rv_reg;
  wire sar1_carry__0_i_1__0_n_0;
  wire sar1_carry__0_i_2__0_n_0;
  wire sar1_carry__0_i_3__0_n_0;
  wire sar1_carry__0_i_4__0_n_0;
  wire sar1_carry__0_i_5__0_n_0;
  wire sar1_carry__0_i_6__0_n_0;
  wire sar1_carry__0_i_7__0_n_0;
  wire sar1_carry__0_i_8__0_n_0;
  wire sar1_carry__0_n_0;
  wire sar1_carry__0_n_1;
  wire sar1_carry__0_n_2;
  wire sar1_carry__0_n_3;
  wire sar1_carry__1_i_1__0_n_0;
  wire sar1_carry__1_i_2__0_n_0;
  wire sar1_carry__1_i_3__0_n_0;
  wire sar1_carry__1_i_4__0_n_0;
  wire sar1_carry__1_i_5__0_n_0;
  wire sar1_carry__1_i_6__0_n_0;
  wire sar1_carry__1_i_7__0_n_0;
  wire sar1_carry__1_i_8__0_n_0;
  wire sar1_carry__1_n_0;
  wire sar1_carry__1_n_1;
  wire sar1_carry__1_n_2;
  wire sar1_carry__1_n_3;
  wire sar1_carry__2_i_1__0_n_0;
  wire sar1_carry__2_i_2__0_n_0;
  wire sar1_carry__2_i_3__0_n_0;
  wire sar1_carry__2_i_4__0_n_0;
  wire sar1_carry__2_i_5__0_n_0;
  wire sar1_carry__2_i_6__0_n_0;
  wire sar1_carry__2_i_7__0_n_0;
  wire sar1_carry__2_i_8__0_n_0;
  wire sar1_carry__2_n_0;
  wire sar1_carry__2_n_1;
  wire sar1_carry__2_n_2;
  wire sar1_carry__2_n_3;
  wire sar1_carry__3_i_1_n_0;
  wire sar1_carry__3_i_2_n_0;
  wire sar1_carry__3_i_3_n_0;
  wire sar1_carry__3_i_4_n_0;
  wire sar1_carry__3_i_5_n_0;
  wire sar1_carry__3_i_6_n_0;
  wire sar1_carry__3_i_7_n_0;
  wire sar1_carry__3_i_8_n_0;
  wire sar1_carry__3_n_0;
  wire sar1_carry__3_n_1;
  wire sar1_carry__3_n_2;
  wire sar1_carry__3_n_3;
  wire sar1_carry__4_i_1_n_0;
  wire sar1_carry__4_i_2_n_0;
  wire sar1_carry__4_i_3_n_0;
  wire sar1_carry__4_i_4_n_0;
  wire sar1_carry__4_i_5_n_0;
  wire sar1_carry__4_i_6_n_0;
  wire sar1_carry__4_i_7_n_0;
  wire sar1_carry__4_i_8_n_0;
  wire sar1_carry__4_n_0;
  wire sar1_carry__4_n_1;
  wire sar1_carry__4_n_2;
  wire sar1_carry__4_n_3;
  wire sar1_carry__5_i_1_n_0;
  wire sar1_carry__5_i_2_n_0;
  wire sar1_carry__5_i_3_n_0;
  wire sar1_carry__5_i_4_n_0;
  wire sar1_carry__5_n_2;
  wire sar1_carry__5_n_3;
  wire sar1_carry_i_1__0_n_0;
  wire sar1_carry_i_2__0_n_0;
  wire sar1_carry_i_3__0_n_0;
  wire sar1_carry_i_4__0_n_0;
  wire sar1_carry_i_5__0_n_0;
  wire sar1_carry_i_6__0_n_0;
  wire sar1_carry_i_7__0_n_0;
  wire sar1_carry_i_8__0_n_0;
  wire sar1_carry_n_0;
  wire sar1_carry_n_1;
  wire sar1_carry_n_2;
  wire sar1_carry_n_3;
  wire \sar[0]_i_1_n_0 ;
  wire \sar[10]_i_1_n_0 ;
  wire \sar[10]_i_2__0_n_0 ;
  wire \sar[11]_i_1_n_0 ;
  wire \sar[11]_i_2__0_n_0 ;
  wire \sar[12]_i_1_n_0 ;
  wire \sar[13]_i_1_n_0 ;
  wire \sar[14]_i_1_n_0 ;
  wire \sar[15]_i_1_n_0 ;
  wire \sar[15]_i_2__0_n_0 ;
  wire \sar[16]_i_1_n_0 ;
  wire \sar[17]_i_1_n_0 ;
  wire \sar[18]_i_1_n_0 ;
  wire \sar[19]_i_1_n_0 ;
  wire \sar[1]_i_1_n_0 ;
  wire \sar[20]_i_1_n_0 ;
  wire \sar[21]_i_1_n_0 ;
  wire \sar[22]_i_1_n_0 ;
  wire \sar[23]_i_1_n_0 ;
  wire \sar[23]_i_2__0_n_0 ;
  wire \sar[24]_i_1_n_0 ;
  wire \sar[25]_i_1_n_0 ;
  wire \sar[26]_i_1_n_0 ;
  wire \sar[27]_i_1_n_0 ;
  wire \sar[28]_i_1_n_0 ;
  wire \sar[28]_i_2__0_n_0 ;
  wire \sar[29]_i_1_n_0 ;
  wire \sar[29]_i_2__0_n_0 ;
  wire \sar[2]_i_1_n_0 ;
  wire \sar[30]_i_1_n_0 ;
  wire \sar[30]_i_2__0_n_0 ;
  wire \sar[31]_i_1_n_0 ;
  wire \sar[31]_i_2__0_n_0 ;
  wire \sar[31]_i_3__0_n_0 ;
  wire \sar[31]_i_4__0_n_0 ;
  wire \sar[31]_i_5__0_n_0 ;
  wire \sar[31]_i_6__0_n_0 ;
  wire \sar[31]_i_7__0_n_0 ;
  wire \sar[3]_i_1_n_0 ;
  wire \sar[4]_i_1_n_0 ;
  wire \sar[5]_i_1_n_0 ;
  wire \sar[6]_i_1_n_0 ;
  wire \sar[7]_i_1_n_0 ;
  wire \sar[7]_i_2__0_n_0 ;
  wire \sar[8]_i_1_n_0 ;
  wire \sar[8]_i_2__0_n_0 ;
  wire \sar[9]_i_1_n_0 ;
  wire \sar[9]_i_2__0_n_0 ;
  wire \sar_reg_n_0_[0] ;
  wire \sar_reg_n_0_[10] ;
  wire \sar_reg_n_0_[11] ;
  wire \sar_reg_n_0_[12] ;
  wire \sar_reg_n_0_[13] ;
  wire \sar_reg_n_0_[14] ;
  wire \sar_reg_n_0_[15] ;
  wire \sar_reg_n_0_[16] ;
  wire \sar_reg_n_0_[17] ;
  wire \sar_reg_n_0_[18] ;
  wire \sar_reg_n_0_[19] ;
  wire \sar_reg_n_0_[1] ;
  wire \sar_reg_n_0_[20] ;
  wire \sar_reg_n_0_[21] ;
  wire \sar_reg_n_0_[22] ;
  wire \sar_reg_n_0_[23] ;
  wire \sar_reg_n_0_[24] ;
  wire \sar_reg_n_0_[25] ;
  wire \sar_reg_n_0_[26] ;
  wire \sar_reg_n_0_[27] ;
  wire \sar_reg_n_0_[28] ;
  wire \sar_reg_n_0_[29] ;
  wire \sar_reg_n_0_[2] ;
  wire \sar_reg_n_0_[30] ;
  wire \sar_reg_n_0_[31] ;
  wire \sar_reg_n_0_[3] ;
  wire \sar_reg_n_0_[4] ;
  wire \sar_reg_n_0_[5] ;
  wire \sar_reg_n_0_[6] ;
  wire \sar_reg_n_0_[7] ;
  wire \sar_reg_n_0_[8] ;
  wire \sar_reg_n_0_[9] ;
  wire [3:0]NLW_sar1_carry_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__4_O_UNCONNECTED;
  wire [3:2]NLW_sar1_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__5_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h0000050000000530)) 
    \FSM_onehot_state[0]_i_1__0 
       (.I0(lat_cnt),
        .I1(eof),
        .I2(\FSM_onehot_state_reg[0]_0 ),
        .I3(rv_reg),
        .I4(lat_cnt0),
        .I5(\i[7]_i_1__0_n_0 ),
        .O(\FSM_onehot_state[0]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FFFFFFA80000)) 
    \FSM_onehot_state[1]_i_1__0 
       (.I0(lat_cnt),
        .I1(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I2(\FSM_onehot_state[1]_i_2__0_n_0 ),
        .I3(\FSM_onehot_state_reg[0]_0 ),
        .I4(\FSM_onehot_state[1]_i_3__0_n_0 ),
        .I5(lat_cnt0),
        .O(\FSM_onehot_state[1]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[1]_i_2__0 
       (.I0(i_reg[3]),
        .I1(i_reg[2]),
        .I2(i_reg[1]),
        .I3(i_reg[0]),
        .O(\FSM_onehot_state[1]_i_2__0_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \FSM_onehot_state[1]_i_3__0 
       (.I0(eof),
        .I1(\FSM_onehot_state_reg[0]_0 ),
        .I2(rv_reg),
        .I3(lat_cnt0),
        .I4(\i[7]_i_1__0_n_0 ),
        .O(\FSM_onehot_state[1]_i_3__0_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F00000F0F002A)) 
    \FSM_onehot_state[2]_i_1__0 
       (.I0(lat_cnt),
        .I1(eof),
        .I2(\FSM_onehot_state_reg[0]_0 ),
        .I3(rv_reg),
        .I4(lat_cnt0),
        .I5(\i[7]_i_1__0_n_0 ),
        .O(\FSM_onehot_state[2]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h2222222222222220)) 
    \FSM_onehot_state[3]_i_1__0 
       (.I0(\FSM_onehot_state[3]_i_2__0_n_0 ),
        .I1(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I2(\dividend_reg_reg[31]_0 ),
        .I3(rv_reg),
        .I4(lat_cnt0),
        .I5(\i[7]_i_1__0_n_0 ),
        .O(\FSM_onehot_state[3]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \FSM_onehot_state[3]_i_2__0 
       (.I0(\sar[28]_i_2__0_n_0 ),
        .I1(i_reg[2]),
        .I2(i_reg[3]),
        .I3(\FSM_onehot_state_reg[0]_0 ),
        .I4(lat_cnt),
        .I5(lat_cnt0),
        .O(\FSM_onehot_state[3]_i_2__0_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[3]_i_3__0 
       (.I0(i_reg[6]),
        .I1(i_reg[5]),
        .I2(i_reg[4]),
        .I3(i_reg[7]),
        .O(\FSM_onehot_state[3]_i_3__0_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1__0_n_0 ),
        .Q(\FSM_onehot_state_reg[0]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1__0_n_0 ),
        .Q(lat_cnt0),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1__0_n_0 ),
        .Q(lat_cnt),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1__0_n_0 ),
        .Q(rv_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[0] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[0]),
        .Q(\dividend_reg_reg_n_0_[0] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[10] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[10]),
        .Q(\dividend_reg_reg_n_0_[10] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[11] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[11]),
        .Q(\dividend_reg_reg_n_0_[11] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[12] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[12]),
        .Q(\dividend_reg_reg_n_0_[12] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[13] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[13]),
        .Q(\dividend_reg_reg_n_0_[13] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[14] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[14]),
        .Q(\dividend_reg_reg_n_0_[14] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[15] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[15]),
        .Q(\dividend_reg_reg_n_0_[15] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[16] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[16]),
        .Q(\dividend_reg_reg_n_0_[16] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[17] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[17]),
        .Q(\dividend_reg_reg_n_0_[17] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[18] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[18]),
        .Q(\dividend_reg_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[19] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[19]),
        .Q(\dividend_reg_reg_n_0_[19] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[1] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[1]),
        .Q(\dividend_reg_reg_n_0_[1] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[20] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[20]),
        .Q(\dividend_reg_reg_n_0_[20] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[21] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[21]),
        .Q(\dividend_reg_reg_n_0_[21] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[22] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[22]),
        .Q(\dividend_reg_reg_n_0_[22] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[23] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[23]),
        .Q(\dividend_reg_reg_n_0_[23] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[24] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[24]),
        .Q(\dividend_reg_reg_n_0_[24] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[25] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[25]),
        .Q(\dividend_reg_reg_n_0_[25] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[26] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[26]),
        .Q(\dividend_reg_reg_n_0_[26] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[27] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[27]),
        .Q(\dividend_reg_reg_n_0_[27] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[28] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[28]),
        .Q(\dividend_reg_reg_n_0_[28] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[29] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[29]),
        .Q(\dividend_reg_reg_n_0_[29] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[2] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[2]),
        .Q(\dividend_reg_reg_n_0_[2] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[30] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[30]),
        .Q(\dividend_reg_reg_n_0_[30] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[31] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[31]),
        .Q(\dividend_reg_reg_n_0_[31] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[3] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[3]),
        .Q(\dividend_reg_reg_n_0_[3] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[4] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[4]),
        .Q(\dividend_reg_reg_n_0_[4] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[5] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[5]),
        .Q(\dividend_reg_reg_n_0_[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[6] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[6]),
        .Q(\dividend_reg_reg_n_0_[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[7] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[7]),
        .Q(\dividend_reg_reg_n_0_[7] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[8] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[8]),
        .Q(\dividend_reg_reg_n_0_[8] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[9] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(Q[9]),
        .Q(\dividend_reg_reg_n_0_[9] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[0] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [0]),
        .Q(divisor_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[10] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [10]),
        .Q(divisor_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[11] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [11]),
        .Q(divisor_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[12] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [12]),
        .Q(divisor_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[13] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [13]),
        .Q(divisor_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[14] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [14]),
        .Q(divisor_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[15] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [15]),
        .Q(divisor_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[16] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [16]),
        .Q(divisor_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[17] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [17]),
        .Q(divisor_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[18] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [18]),
        .Q(divisor_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[19] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [19]),
        .Q(divisor_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[1] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [1]),
        .Q(divisor_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[2] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [2]),
        .Q(divisor_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[3] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [3]),
        .Q(divisor_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[4] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [4]),
        .Q(divisor_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[5] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [5]),
        .Q(divisor_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[6] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [6]),
        .Q(divisor_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[7] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [7]),
        .Q(divisor_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[8] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [8]),
        .Q(divisor_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[9] 
       (.C(clk),
        .CE(\dividend_reg_reg[31]_0 ),
        .D(\divisor_reg_reg[19]_0 [9]),
        .Q(divisor_reg[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \i[0]_i_1__0 
       (.I0(i_reg[0]),
        .O(\i[0]_i_1__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair49" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \i[1]_i_1__0 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .O(i0__1[1]));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \i[2]_i_1__0 
       (.I0(i_reg[2]),
        .I1(i_reg[1]),
        .I2(i_reg[0]),
        .O(i0__1[2]));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \i[3]_i_1__0 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .I3(i_reg[3]),
        .O(i0__1[3]));
  (* SOFT_HLUTNM = "soft_lutpair39" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \i[4]_i_1__0 
       (.I0(i_reg[4]),
        .I1(i_reg[3]),
        .I2(i_reg[2]),
        .I3(i_reg[1]),
        .I4(i_reg[0]),
        .O(i0__1[4]));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0001)) 
    \i[5]_i_1__0 
       (.I0(i_reg[3]),
        .I1(i_reg[2]),
        .I2(i_reg[1]),
        .I3(i_reg[0]),
        .I4(i_reg[5]),
        .I5(i_reg[4]),
        .O(i0__1[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \i[6]_i_1__0 
       (.I0(i_reg[3]),
        .I1(i_reg[2]),
        .I2(\sar[28]_i_2__0_n_0 ),
        .I3(i_reg[4]),
        .I4(i_reg[5]),
        .I5(i_reg[6]),
        .O(i0__1[6]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \i[7]_i_1__0 
       (.I0(lat_cnt_reg[6]),
        .I1(lat_cnt_reg[5]),
        .I2(lat_cnt_reg[7]),
        .I3(lat_cnt_reg[4]),
        .I4(lat_cnt),
        .I5(\i[7]_i_3__0_n_0 ),
        .O(\i[7]_i_1__0_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00FF00FE01)) 
    \i[7]_i_2__0 
       (.I0(i_reg[6]),
        .I1(i_reg[5]),
        .I2(i_reg[4]),
        .I3(i_reg[7]),
        .I4(i_reg[3]),
        .I5(\sar[8]_i_2__0_n_0 ),
        .O(\i[7]_i_2__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \i[7]_i_3__0 
       (.I0(lat_cnt_reg[2]),
        .I1(lat_cnt_reg[0]),
        .I2(lat_cnt_reg[1]),
        .I3(lat_cnt_reg[3]),
        .O(\i[7]_i_3__0_n_0 ));
  FDSE \i_reg[0] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(\i[0]_i_1__0_n_0 ),
        .Q(i_reg[0]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[1] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(i0__1[1]),
        .Q(i_reg[1]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[2] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(i0__1[2]),
        .Q(i_reg[2]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[3] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(i0__1[3]),
        .Q(i_reg[3]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[4] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(i0__1[4]),
        .Q(i_reg[4]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDRE \i_reg[5] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(i0__1[5]),
        .Q(i_reg[5]),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE \i_reg[6] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(i0__1[6]),
        .Q(i_reg[6]),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE \i_reg[7] 
       (.C(clk),
        .CE(\i[7]_i_1__0_n_0 ),
        .D(\i[7]_i_2__0_n_0 ),
        .Q(i_reg[7]),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* CHECK_LICENSE_TYPE = "mult_32_20_lm,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_mult_32_20_lm instance_name
       (.A({\sar_reg_n_0_[31] ,\sar_reg_n_0_[30] ,\sar_reg_n_0_[29] ,\sar_reg_n_0_[28] ,\sar_reg_n_0_[27] ,\sar_reg_n_0_[26] ,\sar_reg_n_0_[25] ,\sar_reg_n_0_[24] ,\sar_reg_n_0_[23] ,\sar_reg_n_0_[22] ,\sar_reg_n_0_[21] ,\sar_reg_n_0_[20] ,\sar_reg_n_0_[19] ,\sar_reg_n_0_[18] ,\sar_reg_n_0_[17] ,\sar_reg_n_0_[16] ,\sar_reg_n_0_[15] ,\sar_reg_n_0_[14] ,\sar_reg_n_0_[13] ,\sar_reg_n_0_[12] ,\sar_reg_n_0_[11] ,\sar_reg_n_0_[10] ,\sar_reg_n_0_[9] ,\sar_reg_n_0_[8] ,\sar_reg_n_0_[7] ,\sar_reg_n_0_[6] ,\sar_reg_n_0_[5] ,\sar_reg_n_0_[4] ,\sar_reg_n_0_[3] ,\sar_reg_n_0_[2] ,\sar_reg_n_0_[1] ,\sar_reg_n_0_[0] }),
        .B(divisor_reg),
        .CLK(clk),
        .P(mul_res));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \lat_cnt[0]_i_1__0 
       (.I0(lat_cnt_reg[0]),
        .O(lat_cnt0__0[0]));
  (* SOFT_HLUTNM = "soft_lutpair48" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \lat_cnt[1]_i_1__0 
       (.I0(lat_cnt_reg[1]),
        .I1(lat_cnt_reg[0]),
        .O(lat_cnt0__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \lat_cnt[2]_i_1__0 
       (.I0(lat_cnt_reg[2]),
        .I1(lat_cnt_reg[0]),
        .I2(lat_cnt_reg[1]),
        .O(lat_cnt0__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair40" *) 
  LUT4 #(
    .INIT(16'hAAA9)) 
    \lat_cnt[3]_i_1__0 
       (.I0(lat_cnt_reg[3]),
        .I1(lat_cnt_reg[1]),
        .I2(lat_cnt_reg[0]),
        .I3(lat_cnt_reg[2]),
        .O(lat_cnt0__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \lat_cnt[4]_i_1__0 
       (.I0(lat_cnt_reg[4]),
        .I1(lat_cnt_reg[2]),
        .I2(lat_cnt_reg[0]),
        .I3(lat_cnt_reg[1]),
        .I4(lat_cnt_reg[3]),
        .O(lat_cnt0__0[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \lat_cnt[5]_i_1__0 
       (.I0(lat_cnt_reg[5]),
        .I1(lat_cnt_reg[3]),
        .I2(lat_cnt_reg[1]),
        .I3(lat_cnt_reg[0]),
        .I4(lat_cnt_reg[2]),
        .I5(lat_cnt_reg[4]),
        .O(lat_cnt0__0[5]));
  LUT3 #(
    .INIT(8'hC9)) 
    \lat_cnt[6]_i_1__0 
       (.I0(\lat_cnt[7]_i_2__0_n_0 ),
        .I1(lat_cnt_reg[6]),
        .I2(lat_cnt_reg[5]),
        .O(lat_cnt0__0[6]));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \lat_cnt[7]_i_1__0 
       (.I0(\lat_cnt[7]_i_2__0_n_0 ),
        .I1(lat_cnt_reg[6]),
        .I2(lat_cnt_reg[5]),
        .I3(lat_cnt_reg[7]),
        .O(lat_cnt0__0[7]));
  (* SOFT_HLUTNM = "soft_lutpair37" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \lat_cnt[7]_i_2__0 
       (.I0(lat_cnt_reg[3]),
        .I1(lat_cnt_reg[1]),
        .I2(lat_cnt_reg[0]),
        .I3(lat_cnt_reg[2]),
        .I4(lat_cnt_reg[4]),
        .O(\lat_cnt[7]_i_2__0_n_0 ));
  FDRE \lat_cnt_reg[0] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[0]),
        .Q(lat_cnt_reg[0]),
        .R(lat_cnt0));
  FDRE \lat_cnt_reg[1] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[1]),
        .Q(lat_cnt_reg[1]),
        .R(lat_cnt0));
  FDSE \lat_cnt_reg[2] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[2]),
        .Q(lat_cnt_reg[2]),
        .S(lat_cnt0));
  FDRE \lat_cnt_reg[3] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[3]),
        .Q(lat_cnt_reg[3]),
        .R(lat_cnt0));
  FDRE \lat_cnt_reg[4] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[4]),
        .Q(lat_cnt_reg[4]),
        .R(lat_cnt0));
  FDRE \lat_cnt_reg[5] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[5]),
        .Q(lat_cnt_reg[5]),
        .R(lat_cnt0));
  FDRE \lat_cnt_reg[6] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[6]),
        .Q(lat_cnt_reg[6]),
        .R(lat_cnt0));
  FDRE \lat_cnt_reg[7] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0__0[7]),
        .Q(lat_cnt_reg[7]),
        .R(lat_cnt0));
  FDRE \result_reg_reg[0] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[0] ),
        .Q(\result_reg_reg[10]_0 [0]),
        .R(1'b0));
  FDRE \result_reg_reg[10] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[10] ),
        .Q(\result_reg_reg[10]_0 [10]),
        .R(1'b0));
  FDRE \result_reg_reg[1] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[1] ),
        .Q(\result_reg_reg[10]_0 [1]),
        .R(1'b0));
  FDRE \result_reg_reg[2] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[2] ),
        .Q(\result_reg_reg[10]_0 [2]),
        .R(1'b0));
  FDRE \result_reg_reg[3] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[3] ),
        .Q(\result_reg_reg[10]_0 [3]),
        .R(1'b0));
  FDRE \result_reg_reg[4] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[4] ),
        .Q(\result_reg_reg[10]_0 [4]),
        .R(1'b0));
  FDRE \result_reg_reg[5] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[5] ),
        .Q(\result_reg_reg[10]_0 [5]),
        .R(1'b0));
  FDRE \result_reg_reg[6] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[6] ),
        .Q(\result_reg_reg[10]_0 [6]),
        .R(1'b0));
  FDRE \result_reg_reg[7] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[7] ),
        .Q(\result_reg_reg[10]_0 [7]),
        .R(1'b0));
  FDRE \result_reg_reg[8] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[8] ),
        .Q(\result_reg_reg[10]_0 [8]),
        .R(1'b0));
  FDRE \result_reg_reg[9] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[9] ),
        .Q(\result_reg_reg[10]_0 [9]),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry
       (.CI(1'b0),
        .CO({sar1_carry_n_0,sar1_carry_n_1,sar1_carry_n_2,sar1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry_i_1__0_n_0,sar1_carry_i_2__0_n_0,sar1_carry_i_3__0_n_0,sar1_carry_i_4__0_n_0}),
        .O(NLW_sar1_carry_O_UNCONNECTED[3:0]),
        .S({sar1_carry_i_5__0_n_0,sar1_carry_i_6__0_n_0,sar1_carry_i_7__0_n_0,sar1_carry_i_8__0_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__0
       (.CI(sar1_carry_n_0),
        .CO({sar1_carry__0_n_0,sar1_carry__0_n_1,sar1_carry__0_n_2,sar1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__0_i_1__0_n_0,sar1_carry__0_i_2__0_n_0,sar1_carry__0_i_3__0_n_0,sar1_carry__0_i_4__0_n_0}),
        .O(NLW_sar1_carry__0_O_UNCONNECTED[3:0]),
        .S({sar1_carry__0_i_5__0_n_0,sar1_carry__0_i_6__0_n_0,sar1_carry__0_i_7__0_n_0,sar1_carry__0_i_8__0_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_1__0
       (.I0(mul_res[15]),
        .I1(\dividend_reg_reg_n_0_[15] ),
        .I2(mul_res[14]),
        .I3(\dividend_reg_reg_n_0_[14] ),
        .O(sar1_carry__0_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_2__0
       (.I0(mul_res[13]),
        .I1(\dividend_reg_reg_n_0_[13] ),
        .I2(mul_res[12]),
        .I3(\dividend_reg_reg_n_0_[12] ),
        .O(sar1_carry__0_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_3__0
       (.I0(mul_res[11]),
        .I1(\dividend_reg_reg_n_0_[11] ),
        .I2(mul_res[10]),
        .I3(\dividend_reg_reg_n_0_[10] ),
        .O(sar1_carry__0_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_4__0
       (.I0(mul_res[9]),
        .I1(\dividend_reg_reg_n_0_[9] ),
        .I2(mul_res[8]),
        .I3(\dividend_reg_reg_n_0_[8] ),
        .O(sar1_carry__0_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_5__0
       (.I0(\dividend_reg_reg_n_0_[15] ),
        .I1(mul_res[15]),
        .I2(mul_res[14]),
        .I3(\dividend_reg_reg_n_0_[14] ),
        .O(sar1_carry__0_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_6__0
       (.I0(\dividend_reg_reg_n_0_[13] ),
        .I1(mul_res[13]),
        .I2(mul_res[12]),
        .I3(\dividend_reg_reg_n_0_[12] ),
        .O(sar1_carry__0_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_7__0
       (.I0(\dividend_reg_reg_n_0_[11] ),
        .I1(mul_res[11]),
        .I2(mul_res[10]),
        .I3(\dividend_reg_reg_n_0_[10] ),
        .O(sar1_carry__0_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_8__0
       (.I0(\dividend_reg_reg_n_0_[9] ),
        .I1(mul_res[9]),
        .I2(mul_res[8]),
        .I3(\dividend_reg_reg_n_0_[8] ),
        .O(sar1_carry__0_i_8__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__1
       (.CI(sar1_carry__0_n_0),
        .CO({sar1_carry__1_n_0,sar1_carry__1_n_1,sar1_carry__1_n_2,sar1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__1_i_1__0_n_0,sar1_carry__1_i_2__0_n_0,sar1_carry__1_i_3__0_n_0,sar1_carry__1_i_4__0_n_0}),
        .O(NLW_sar1_carry__1_O_UNCONNECTED[3:0]),
        .S({sar1_carry__1_i_5__0_n_0,sar1_carry__1_i_6__0_n_0,sar1_carry__1_i_7__0_n_0,sar1_carry__1_i_8__0_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_1__0
       (.I0(mul_res[23]),
        .I1(\dividend_reg_reg_n_0_[23] ),
        .I2(mul_res[22]),
        .I3(\dividend_reg_reg_n_0_[22] ),
        .O(sar1_carry__1_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_2__0
       (.I0(mul_res[21]),
        .I1(\dividend_reg_reg_n_0_[21] ),
        .I2(mul_res[20]),
        .I3(\dividend_reg_reg_n_0_[20] ),
        .O(sar1_carry__1_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_3__0
       (.I0(mul_res[19]),
        .I1(\dividend_reg_reg_n_0_[19] ),
        .I2(mul_res[18]),
        .I3(\dividend_reg_reg_n_0_[18] ),
        .O(sar1_carry__1_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_4__0
       (.I0(mul_res[17]),
        .I1(\dividend_reg_reg_n_0_[17] ),
        .I2(mul_res[16]),
        .I3(\dividend_reg_reg_n_0_[16] ),
        .O(sar1_carry__1_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_5__0
       (.I0(\dividend_reg_reg_n_0_[23] ),
        .I1(mul_res[23]),
        .I2(mul_res[22]),
        .I3(\dividend_reg_reg_n_0_[22] ),
        .O(sar1_carry__1_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_6__0
       (.I0(\dividend_reg_reg_n_0_[21] ),
        .I1(mul_res[21]),
        .I2(mul_res[20]),
        .I3(\dividend_reg_reg_n_0_[20] ),
        .O(sar1_carry__1_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_7__0
       (.I0(\dividend_reg_reg_n_0_[19] ),
        .I1(mul_res[19]),
        .I2(mul_res[18]),
        .I3(\dividend_reg_reg_n_0_[18] ),
        .O(sar1_carry__1_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_8__0
       (.I0(\dividend_reg_reg_n_0_[17] ),
        .I1(mul_res[17]),
        .I2(mul_res[16]),
        .I3(\dividend_reg_reg_n_0_[16] ),
        .O(sar1_carry__1_i_8__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__2
       (.CI(sar1_carry__1_n_0),
        .CO({sar1_carry__2_n_0,sar1_carry__2_n_1,sar1_carry__2_n_2,sar1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__2_i_1__0_n_0,sar1_carry__2_i_2__0_n_0,sar1_carry__2_i_3__0_n_0,sar1_carry__2_i_4__0_n_0}),
        .O(NLW_sar1_carry__2_O_UNCONNECTED[3:0]),
        .S({sar1_carry__2_i_5__0_n_0,sar1_carry__2_i_6__0_n_0,sar1_carry__2_i_7__0_n_0,sar1_carry__2_i_8__0_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_1__0
       (.I0(mul_res[31]),
        .I1(\dividend_reg_reg_n_0_[31] ),
        .I2(mul_res[30]),
        .I3(\dividend_reg_reg_n_0_[30] ),
        .O(sar1_carry__2_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_2__0
       (.I0(mul_res[29]),
        .I1(\dividend_reg_reg_n_0_[29] ),
        .I2(mul_res[28]),
        .I3(\dividend_reg_reg_n_0_[28] ),
        .O(sar1_carry__2_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_3__0
       (.I0(mul_res[27]),
        .I1(\dividend_reg_reg_n_0_[27] ),
        .I2(mul_res[26]),
        .I3(\dividend_reg_reg_n_0_[26] ),
        .O(sar1_carry__2_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_4__0
       (.I0(mul_res[25]),
        .I1(\dividend_reg_reg_n_0_[25] ),
        .I2(mul_res[24]),
        .I3(\dividend_reg_reg_n_0_[24] ),
        .O(sar1_carry__2_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_5__0
       (.I0(\dividend_reg_reg_n_0_[31] ),
        .I1(mul_res[31]),
        .I2(mul_res[30]),
        .I3(\dividend_reg_reg_n_0_[30] ),
        .O(sar1_carry__2_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_6__0
       (.I0(\dividend_reg_reg_n_0_[29] ),
        .I1(mul_res[29]),
        .I2(mul_res[28]),
        .I3(\dividend_reg_reg_n_0_[28] ),
        .O(sar1_carry__2_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_7__0
       (.I0(\dividend_reg_reg_n_0_[27] ),
        .I1(mul_res[27]),
        .I2(mul_res[26]),
        .I3(\dividend_reg_reg_n_0_[26] ),
        .O(sar1_carry__2_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_8__0
       (.I0(\dividend_reg_reg_n_0_[25] ),
        .I1(mul_res[25]),
        .I2(mul_res[24]),
        .I3(\dividend_reg_reg_n_0_[24] ),
        .O(sar1_carry__2_i_8__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__3
       (.CI(sar1_carry__2_n_0),
        .CO({sar1_carry__3_n_0,sar1_carry__3_n_1,sar1_carry__3_n_2,sar1_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__3_i_1_n_0,sar1_carry__3_i_2_n_0,sar1_carry__3_i_3_n_0,sar1_carry__3_i_4_n_0}),
        .O(NLW_sar1_carry__3_O_UNCONNECTED[3:0]),
        .S({sar1_carry__3_i_5_n_0,sar1_carry__3_i_6_n_0,sar1_carry__3_i_7_n_0,sar1_carry__3_i_8_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_1
       (.I0(mul_res[39]),
        .I1(mul_res[38]),
        .O(sar1_carry__3_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_2
       (.I0(mul_res[37]),
        .I1(mul_res[36]),
        .O(sar1_carry__3_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_3
       (.I0(mul_res[35]),
        .I1(mul_res[34]),
        .O(sar1_carry__3_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_4
       (.I0(mul_res[33]),
        .I1(mul_res[32]),
        .O(sar1_carry__3_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_5
       (.I0(mul_res[38]),
        .I1(mul_res[39]),
        .O(sar1_carry__3_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_6
       (.I0(mul_res[36]),
        .I1(mul_res[37]),
        .O(sar1_carry__3_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_7
       (.I0(mul_res[34]),
        .I1(mul_res[35]),
        .O(sar1_carry__3_i_7_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_8
       (.I0(mul_res[32]),
        .I1(mul_res[33]),
        .O(sar1_carry__3_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__4
       (.CI(sar1_carry__3_n_0),
        .CO({sar1_carry__4_n_0,sar1_carry__4_n_1,sar1_carry__4_n_2,sar1_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__4_i_1_n_0,sar1_carry__4_i_2_n_0,sar1_carry__4_i_3_n_0,sar1_carry__4_i_4_n_0}),
        .O(NLW_sar1_carry__4_O_UNCONNECTED[3:0]),
        .S({sar1_carry__4_i_5_n_0,sar1_carry__4_i_6_n_0,sar1_carry__4_i_7_n_0,sar1_carry__4_i_8_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_1
       (.I0(mul_res[47]),
        .I1(mul_res[46]),
        .O(sar1_carry__4_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_2
       (.I0(mul_res[45]),
        .I1(mul_res[44]),
        .O(sar1_carry__4_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_3
       (.I0(mul_res[43]),
        .I1(mul_res[42]),
        .O(sar1_carry__4_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_4
       (.I0(mul_res[41]),
        .I1(mul_res[40]),
        .O(sar1_carry__4_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_5
       (.I0(mul_res[46]),
        .I1(mul_res[47]),
        .O(sar1_carry__4_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_6
       (.I0(mul_res[44]),
        .I1(mul_res[45]),
        .O(sar1_carry__4_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_7
       (.I0(mul_res[42]),
        .I1(mul_res[43]),
        .O(sar1_carry__4_i_7_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_8
       (.I0(mul_res[40]),
        .I1(mul_res[41]),
        .O(sar1_carry__4_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__5
       (.CI(sar1_carry__4_n_0),
        .CO({NLW_sar1_carry__5_CO_UNCONNECTED[3:2],sar1_carry__5_n_2,sar1_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,sar1_carry__5_i_1_n_0,sar1_carry__5_i_2_n_0}),
        .O(NLW_sar1_carry__5_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,sar1_carry__5_i_3_n_0,sar1_carry__5_i_4_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__5_i_1
       (.I0(mul_res[51]),
        .I1(mul_res[50]),
        .O(sar1_carry__5_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__5_i_2
       (.I0(mul_res[49]),
        .I1(mul_res[48]),
        .O(sar1_carry__5_i_2_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__5_i_3
       (.I0(mul_res[50]),
        .I1(mul_res[51]),
        .O(sar1_carry__5_i_3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__5_i_4
       (.I0(mul_res[48]),
        .I1(mul_res[49]),
        .O(sar1_carry__5_i_4_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_1__0
       (.I0(mul_res[7]),
        .I1(\dividend_reg_reg_n_0_[7] ),
        .I2(mul_res[6]),
        .I3(\dividend_reg_reg_n_0_[6] ),
        .O(sar1_carry_i_1__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_2__0
       (.I0(mul_res[5]),
        .I1(\dividend_reg_reg_n_0_[5] ),
        .I2(mul_res[4]),
        .I3(\dividend_reg_reg_n_0_[4] ),
        .O(sar1_carry_i_2__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_3__0
       (.I0(mul_res[3]),
        .I1(\dividend_reg_reg_n_0_[3] ),
        .I2(mul_res[2]),
        .I3(\dividend_reg_reg_n_0_[2] ),
        .O(sar1_carry_i_3__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_4__0
       (.I0(mul_res[1]),
        .I1(\dividend_reg_reg_n_0_[1] ),
        .I2(mul_res[0]),
        .I3(\dividend_reg_reg_n_0_[0] ),
        .O(sar1_carry_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_5__0
       (.I0(\dividend_reg_reg_n_0_[7] ),
        .I1(mul_res[7]),
        .I2(mul_res[6]),
        .I3(\dividend_reg_reg_n_0_[6] ),
        .O(sar1_carry_i_5__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_6__0
       (.I0(\dividend_reg_reg_n_0_[5] ),
        .I1(mul_res[5]),
        .I2(mul_res[4]),
        .I3(\dividend_reg_reg_n_0_[4] ),
        .O(sar1_carry_i_6__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_7__0
       (.I0(\dividend_reg_reg_n_0_[3] ),
        .I1(mul_res[3]),
        .I2(mul_res[2]),
        .I3(\dividend_reg_reg_n_0_[2] ),
        .O(sar1_carry_i_7__0_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_8__0
       (.I0(\dividend_reg_reg_n_0_[1] ),
        .I1(mul_res[1]),
        .I2(mul_res[0]),
        .I3(\dividend_reg_reg_n_0_[0] ),
        .O(sar1_carry_i_8__0_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    \sar[0]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[31]_i_3__0_n_0 ),
        .I2(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I3(i_reg[3]),
        .I4(\sar[8]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[0] ),
        .O(\sar[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[10]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[10]_i_2__0_n_0 ),
        .I2(\sar[31]_i_3__0_n_0 ),
        .I3(i_reg[3]),
        .I4(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I5(\sar_reg_n_0_[10] ),
        .O(\sar[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \sar[10]_i_2__0 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .O(\sar[10]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[11]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[11]_i_2__0_n_0 ),
        .I2(\sar[31]_i_3__0_n_0 ),
        .I3(i_reg[3]),
        .I4(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I5(\sar_reg_n_0_[11] ),
        .O(\sar[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair43" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \sar[11]_i_2__0 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .O(\sar[11]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[12]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[28]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[12] ),
        .O(\sar[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[13]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[29]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[13] ),
        .O(\sar[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[14]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[30]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[14] ),
        .O(\sar[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[15]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_4__0_n_0 ),
        .I5(\sar_reg_n_0_[15] ),
        .O(\sar[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \sar[15]_i_2__0 
       (.I0(i_reg[3]),
        .I1(i_reg[7]),
        .I2(i_reg[4]),
        .I3(i_reg[5]),
        .I4(i_reg[6]),
        .O(\sar[15]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[16]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[31]_i_3__0_n_0 ),
        .I2(\sar[23]_i_2__0_n_0 ),
        .I3(i_reg[2]),
        .I4(\sar[28]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[16] ),
        .O(\sar[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[17]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[29]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[23]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[17] ),
        .O(\sar[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[18]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[30]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[23]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[18] ),
        .O(\sar[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[19]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_4__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[23]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[19] ),
        .O(\sar[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[1]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[9]_i_2__0_n_0 ),
        .I2(\sar[31]_i_3__0_n_0 ),
        .I3(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I4(i_reg[3]),
        .I5(\sar_reg_n_0_[1] ),
        .O(\sar[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[20]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[28]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[20] ),
        .O(\sar[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[21]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[29]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[21] ),
        .O(\sar[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[22]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[30]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[22] ),
        .O(\sar[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[23]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_4__0_n_0 ),
        .I5(\sar_reg_n_0_[23] ),
        .O(\sar[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \sar[23]_i_2__0 
       (.I0(i_reg[3]),
        .I1(i_reg[4]),
        .I2(i_reg[5]),
        .I3(i_reg[7]),
        .I4(i_reg[6]),
        .O(\sar[23]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[24]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[31]_i_3__0_n_0 ),
        .I2(\sar[31]_i_2__0_n_0 ),
        .I3(i_reg[2]),
        .I4(\sar[28]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[24] ),
        .O(\sar[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[25]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[29]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[25] ),
        .O(\sar[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[26]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[30]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[26] ),
        .O(\sar[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[27]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_4__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[27] ),
        .O(\sar[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[28]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[28]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[28] ),
        .O(\sar[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \sar[28]_i_2__0 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .O(\sar[28]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[29]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[29]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[29] ),
        .O(\sar[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sar[29]_i_2__0 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .O(\sar[29]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[2]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[10]_i_2__0_n_0 ),
        .I2(\sar[31]_i_3__0_n_0 ),
        .I3(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I4(i_reg[3]),
        .I5(\sar_reg_n_0_[2] ),
        .O(\sar[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[30]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[30]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[30] ),
        .O(\sar[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair47" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sar[30]_i_2__0 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .O(\sar[30]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[31]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_4__0_n_0 ),
        .I5(\sar_reg_n_0_[31] ),
        .O(\sar[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair36" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \sar[31]_i_2__0 
       (.I0(i_reg[3]),
        .I1(i_reg[4]),
        .I2(i_reg[5]),
        .I3(i_reg[7]),
        .I4(i_reg[6]),
        .O(\sar[31]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \sar[31]_i_3__0 
       (.I0(\sar[31]_i_5__0_n_0 ),
        .I1(\sar[31]_i_6__0_n_0 ),
        .I2(\sar[31]_i_7__0_n_0 ),
        .I3(sar1_carry__5_n_2),
        .I4(lat_cnt),
        .I5(lat_cnt0),
        .O(\sar[31]_i_3__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair46" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sar[31]_i_4__0 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .O(\sar[31]_i_4__0_n_0 ));
  LUT6 #(
    .INIT(64'h000B000B0000000B)) 
    \sar[31]_i_5__0 
       (.I0(lat_cnt_reg[1]),
        .I1(lat_cnt_reg[0]),
        .I2(lat_cnt_reg[2]),
        .I3(lat_cnt_reg[5]),
        .I4(lat_cnt_reg[3]),
        .I5(lat_cnt_reg[4]),
        .O(\sar[31]_i_5__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair41" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \sar[31]_i_6__0 
       (.I0(lat_cnt_reg[7]),
        .I1(lat_cnt_reg[4]),
        .I2(lat_cnt_reg[5]),
        .I3(lat_cnt_reg[6]),
        .O(\sar[31]_i_6__0_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair45" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \sar[31]_i_7__0 
       (.I0(lat_cnt_reg[1]),
        .I1(lat_cnt_reg[2]),
        .O(\sar[31]_i_7__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[3]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[11]_i_2__0_n_0 ),
        .I2(\sar[31]_i_3__0_n_0 ),
        .I3(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I4(i_reg[3]),
        .I5(\sar_reg_n_0_[3] ),
        .O(\sar[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[4]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[28]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[4] ),
        .O(\sar[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[5]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[29]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[5] ),
        .O(\sar[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[6]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[30]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[6] ),
        .O(\sar[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[7]_i_1 
       (.I0(lat_cnt0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2__0_n_0 ),
        .I3(\sar[31]_i_3__0_n_0 ),
        .I4(\sar[31]_i_4__0_n_0 ),
        .I5(\sar_reg_n_0_[7] ),
        .O(\sar[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair38" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \sar[7]_i_2__0 
       (.I0(i_reg[7]),
        .I1(i_reg[4]),
        .I2(i_reg[5]),
        .I3(i_reg[6]),
        .I4(i_reg[3]),
        .O(\sar[7]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[8]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[31]_i_3__0_n_0 ),
        .I2(i_reg[3]),
        .I3(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I4(\sar[8]_i_2__0_n_0 ),
        .I5(\sar_reg_n_0_[8] ),
        .O(\sar[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair42" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \sar[8]_i_2__0 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .O(\sar[8]_i_2__0_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[9]_i_1 
       (.I0(lat_cnt0),
        .I1(\sar[9]_i_2__0_n_0 ),
        .I2(\sar[31]_i_3__0_n_0 ),
        .I3(i_reg[3]),
        .I4(\FSM_onehot_state[3]_i_3__0_n_0 ),
        .I5(\sar_reg_n_0_[9] ),
        .O(\sar[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair44" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \sar[9]_i_2__0 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .I2(i_reg[2]),
        .O(\sar[9]_i_2__0_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[0]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[0] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[10]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[10] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[11]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[11] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[12]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[12] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[13]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[13] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[14]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[14] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[15]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[15] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[16]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[16] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[17]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[17] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[18]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[18] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[19]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[19] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[1]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[1] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[20]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[20] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[21]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[21] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[22]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[22] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[23]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[23] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[24]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[24] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[25]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[25] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[26]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[26] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[27]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[27] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[28]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[28] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[29]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[29] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[2]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[30]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[30] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[31]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[31] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[3]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[3] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[4]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[4] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[5]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[5] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[6]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[6] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[7]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[7] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[8]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[8] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[9]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[9] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "divider_32_20" *) 
module hdmi_vga_vp_0_0_divider_32_20__xdcDup__1
   (\FSM_onehot_state_reg[0]_0 ,
    \result_reg_reg[10]_0 ,
    clk,
    eof,
    E,
    Q,
    \divisor_reg_reg[19]_0 );
  output \FSM_onehot_state_reg[0]_0 ;
  output [10:0]\result_reg_reg[10]_0 ;
  input clk;
  input eof;
  input [0:0]E;
  input [31:0]Q;
  input [19:0]\divisor_reg_reg[19]_0 ;

  wire [0:0]E;
  wire \FSM_onehot_state[0]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_1_n_0 ;
  wire \FSM_onehot_state[1]_i_2_n_0 ;
  wire \FSM_onehot_state[1]_i_3_n_0 ;
  wire \FSM_onehot_state[2]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_1_n_0 ;
  wire \FSM_onehot_state[3]_i_2_n_0 ;
  wire \FSM_onehot_state[3]_i_3_n_0 ;
  wire \FSM_onehot_state_reg[0]_0 ;
  wire [31:0]Q;
  wire clk;
  wire [31:0]dividend_reg;
  wire [19:0]divisor_reg;
  wire [19:0]\divisor_reg_reg[19]_0 ;
  wire eof;
  wire [6:1]i0__0;
  wire \i[0]_i_1_n_0 ;
  wire \i[7]_i_1_n_0 ;
  wire \i[7]_i_2_n_0 ;
  wire \i[7]_i_3_n_0 ;
  wire [7:0]i_reg;
  wire lat_cnt;
  wire [7:0]lat_cnt0;
  wire lat_cnt0_0;
  wire \lat_cnt[7]_i_2_n_0 ;
  wire [7:0]lat_cnt_reg;
  wire [51:0]mul_res;
  wire [10:0]\result_reg_reg[10]_0 ;
  wire rv_reg;
  wire sar1;
  wire sar1_carry__0_i_1_n_0;
  wire sar1_carry__0_i_2_n_0;
  wire sar1_carry__0_i_3_n_0;
  wire sar1_carry__0_i_4_n_0;
  wire sar1_carry__0_i_5_n_0;
  wire sar1_carry__0_i_6_n_0;
  wire sar1_carry__0_i_7_n_0;
  wire sar1_carry__0_i_8_n_0;
  wire sar1_carry__0_n_0;
  wire sar1_carry__0_n_1;
  wire sar1_carry__0_n_2;
  wire sar1_carry__0_n_3;
  wire sar1_carry__1_i_1_n_0;
  wire sar1_carry__1_i_2_n_0;
  wire sar1_carry__1_i_3_n_0;
  wire sar1_carry__1_i_4_n_0;
  wire sar1_carry__1_i_5_n_0;
  wire sar1_carry__1_i_6_n_0;
  wire sar1_carry__1_i_7_n_0;
  wire sar1_carry__1_i_8_n_0;
  wire sar1_carry__1_n_0;
  wire sar1_carry__1_n_1;
  wire sar1_carry__1_n_2;
  wire sar1_carry__1_n_3;
  wire sar1_carry__2_i_1_n_0;
  wire sar1_carry__2_i_2_n_0;
  wire sar1_carry__2_i_3_n_0;
  wire sar1_carry__2_i_4_n_0;
  wire sar1_carry__2_i_5_n_0;
  wire sar1_carry__2_i_6_n_0;
  wire sar1_carry__2_i_7_n_0;
  wire sar1_carry__2_i_8_n_0;
  wire sar1_carry__2_n_0;
  wire sar1_carry__2_n_1;
  wire sar1_carry__2_n_2;
  wire sar1_carry__2_n_3;
  wire sar1_carry__3_i_1__0_n_0;
  wire sar1_carry__3_i_2__0_n_0;
  wire sar1_carry__3_i_3__0_n_0;
  wire sar1_carry__3_i_4__0_n_0;
  wire sar1_carry__3_i_5__0_n_0;
  wire sar1_carry__3_i_6__0_n_0;
  wire sar1_carry__3_i_7__0_n_0;
  wire sar1_carry__3_i_8__0_n_0;
  wire sar1_carry__3_n_0;
  wire sar1_carry__3_n_1;
  wire sar1_carry__3_n_2;
  wire sar1_carry__3_n_3;
  wire sar1_carry__4_i_1__0_n_0;
  wire sar1_carry__4_i_2__0_n_0;
  wire sar1_carry__4_i_3__0_n_0;
  wire sar1_carry__4_i_4__0_n_0;
  wire sar1_carry__4_i_5__0_n_0;
  wire sar1_carry__4_i_6__0_n_0;
  wire sar1_carry__4_i_7__0_n_0;
  wire sar1_carry__4_i_8__0_n_0;
  wire sar1_carry__4_n_0;
  wire sar1_carry__4_n_1;
  wire sar1_carry__4_n_2;
  wire sar1_carry__4_n_3;
  wire sar1_carry__5_i_1__0_n_0;
  wire sar1_carry__5_i_2__0_n_0;
  wire sar1_carry__5_i_3__0_n_0;
  wire sar1_carry__5_i_4__0_n_0;
  wire sar1_carry__5_n_3;
  wire sar1_carry_i_1_n_0;
  wire sar1_carry_i_2_n_0;
  wire sar1_carry_i_3_n_0;
  wire sar1_carry_i_4_n_0;
  wire sar1_carry_i_5_n_0;
  wire sar1_carry_i_6_n_0;
  wire sar1_carry_i_7_n_0;
  wire sar1_carry_i_8_n_0;
  wire sar1_carry_n_0;
  wire sar1_carry_n_1;
  wire sar1_carry_n_2;
  wire sar1_carry_n_3;
  wire \sar[0]_i_1_n_0 ;
  wire \sar[10]_i_1_n_0 ;
  wire \sar[10]_i_2_n_0 ;
  wire \sar[11]_i_1_n_0 ;
  wire \sar[11]_i_2_n_0 ;
  wire \sar[12]_i_1_n_0 ;
  wire \sar[13]_i_1_n_0 ;
  wire \sar[14]_i_1_n_0 ;
  wire \sar[15]_i_1_n_0 ;
  wire \sar[15]_i_2_n_0 ;
  wire \sar[16]_i_1_n_0 ;
  wire \sar[17]_i_1_n_0 ;
  wire \sar[18]_i_1_n_0 ;
  wire \sar[19]_i_1_n_0 ;
  wire \sar[1]_i_1_n_0 ;
  wire \sar[20]_i_1_n_0 ;
  wire \sar[21]_i_1_n_0 ;
  wire \sar[22]_i_1_n_0 ;
  wire \sar[23]_i_1_n_0 ;
  wire \sar[23]_i_2_n_0 ;
  wire \sar[24]_i_1_n_0 ;
  wire \sar[25]_i_1_n_0 ;
  wire \sar[26]_i_1_n_0 ;
  wire \sar[27]_i_1_n_0 ;
  wire \sar[28]_i_1_n_0 ;
  wire \sar[28]_i_2_n_0 ;
  wire \sar[29]_i_1_n_0 ;
  wire \sar[29]_i_2_n_0 ;
  wire \sar[2]_i_1_n_0 ;
  wire \sar[30]_i_1_n_0 ;
  wire \sar[30]_i_2_n_0 ;
  wire \sar[31]_i_1_n_0 ;
  wire \sar[31]_i_2_n_0 ;
  wire \sar[31]_i_3_n_0 ;
  wire \sar[31]_i_4_n_0 ;
  wire \sar[31]_i_5_n_0 ;
  wire \sar[31]_i_6_n_0 ;
  wire \sar[31]_i_7_n_0 ;
  wire \sar[3]_i_1_n_0 ;
  wire \sar[4]_i_1_n_0 ;
  wire \sar[5]_i_1_n_0 ;
  wire \sar[6]_i_1_n_0 ;
  wire \sar[7]_i_1_n_0 ;
  wire \sar[7]_i_2_n_0 ;
  wire \sar[8]_i_1_n_0 ;
  wire \sar[8]_i_2_n_0 ;
  wire \sar[9]_i_1_n_0 ;
  wire \sar[9]_i_2_n_0 ;
  wire \sar_reg_n_0_[0] ;
  wire \sar_reg_n_0_[10] ;
  wire \sar_reg_n_0_[11] ;
  wire \sar_reg_n_0_[12] ;
  wire \sar_reg_n_0_[13] ;
  wire \sar_reg_n_0_[14] ;
  wire \sar_reg_n_0_[15] ;
  wire \sar_reg_n_0_[16] ;
  wire \sar_reg_n_0_[17] ;
  wire \sar_reg_n_0_[18] ;
  wire \sar_reg_n_0_[19] ;
  wire \sar_reg_n_0_[1] ;
  wire \sar_reg_n_0_[20] ;
  wire \sar_reg_n_0_[21] ;
  wire \sar_reg_n_0_[22] ;
  wire \sar_reg_n_0_[23] ;
  wire \sar_reg_n_0_[24] ;
  wire \sar_reg_n_0_[25] ;
  wire \sar_reg_n_0_[26] ;
  wire \sar_reg_n_0_[27] ;
  wire \sar_reg_n_0_[28] ;
  wire \sar_reg_n_0_[29] ;
  wire \sar_reg_n_0_[2] ;
  wire \sar_reg_n_0_[30] ;
  wire \sar_reg_n_0_[31] ;
  wire \sar_reg_n_0_[3] ;
  wire \sar_reg_n_0_[4] ;
  wire \sar_reg_n_0_[5] ;
  wire \sar_reg_n_0_[6] ;
  wire \sar_reg_n_0_[7] ;
  wire \sar_reg_n_0_[8] ;
  wire \sar_reg_n_0_[9] ;
  wire [3:0]NLW_sar1_carry_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__0_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__1_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__2_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__3_O_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__4_O_UNCONNECTED;
  wire [3:2]NLW_sar1_carry__5_CO_UNCONNECTED;
  wire [3:0]NLW_sar1_carry__5_O_UNCONNECTED;

  LUT6 #(
    .INIT(64'h0000050000000530)) 
    \FSM_onehot_state[0]_i_1 
       (.I0(lat_cnt),
        .I1(eof),
        .I2(\FSM_onehot_state_reg[0]_0 ),
        .I3(rv_reg),
        .I4(lat_cnt0_0),
        .I5(\i[7]_i_1_n_0 ),
        .O(\FSM_onehot_state[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FFFFFFA80000)) 
    \FSM_onehot_state[1]_i_1 
       (.I0(lat_cnt),
        .I1(\FSM_onehot_state[3]_i_3_n_0 ),
        .I2(\FSM_onehot_state[1]_i_2_n_0 ),
        .I3(\FSM_onehot_state_reg[0]_0 ),
        .I4(\FSM_onehot_state[1]_i_3_n_0 ),
        .I5(lat_cnt0_0),
        .O(\FSM_onehot_state[1]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[1]_i_2 
       (.I0(i_reg[3]),
        .I1(i_reg[2]),
        .I2(i_reg[1]),
        .I3(i_reg[0]),
        .O(\FSM_onehot_state[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFFFFFFF8)) 
    \FSM_onehot_state[1]_i_3 
       (.I0(eof),
        .I1(\FSM_onehot_state_reg[0]_0 ),
        .I2(rv_reg),
        .I3(lat_cnt0_0),
        .I4(\i[7]_i_1_n_0 ),
        .O(\FSM_onehot_state[1]_i_3_n_0 ));
  LUT6 #(
    .INIT(64'h0F0F00000F0F002A)) 
    \FSM_onehot_state[2]_i_1 
       (.I0(lat_cnt),
        .I1(eof),
        .I2(\FSM_onehot_state_reg[0]_0 ),
        .I3(rv_reg),
        .I4(lat_cnt0_0),
        .I5(\i[7]_i_1_n_0 ),
        .O(\FSM_onehot_state[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h2222222222222220)) 
    \FSM_onehot_state[3]_i_1 
       (.I0(\FSM_onehot_state[3]_i_2_n_0 ),
        .I1(\FSM_onehot_state[3]_i_3_n_0 ),
        .I2(E),
        .I3(rv_reg),
        .I4(lat_cnt0_0),
        .I5(\i[7]_i_1_n_0 ),
        .O(\FSM_onehot_state[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \FSM_onehot_state[3]_i_2 
       (.I0(\sar[28]_i_2_n_0 ),
        .I1(i_reg[2]),
        .I2(i_reg[3]),
        .I3(\FSM_onehot_state_reg[0]_0 ),
        .I4(lat_cnt),
        .I5(lat_cnt0_0),
        .O(\FSM_onehot_state[3]_i_2_n_0 ));
  LUT4 #(
    .INIT(16'hFFFE)) 
    \FSM_onehot_state[3]_i_3 
       (.I0(i_reg[6]),
        .I1(i_reg[5]),
        .I2(i_reg[4]),
        .I3(i_reg[7]),
        .O(\FSM_onehot_state[3]_i_3_n_0 ));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b1)) 
    \FSM_onehot_state_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[0]_i_1_n_0 ),
        .Q(\FSM_onehot_state_reg[0]_0 ),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[1]_i_1_n_0 ),
        .Q(lat_cnt0_0),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[2]_i_1_n_0 ),
        .Q(lat_cnt),
        .R(1'b0));
  (* FSM_ENCODED_STATES = "IDLE:0001,NOP:0100,DIV:0010,END:1000" *) 
  FDRE #(
    .INIT(1'b0)) 
    \FSM_onehot_state_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\FSM_onehot_state[3]_i_1_n_0 ),
        .Q(rv_reg),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .D(Q[0]),
        .Q(dividend_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[10] 
       (.C(clk),
        .CE(E),
        .D(Q[10]),
        .Q(dividend_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[11] 
       (.C(clk),
        .CE(E),
        .D(Q[11]),
        .Q(dividend_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[12] 
       (.C(clk),
        .CE(E),
        .D(Q[12]),
        .Q(dividend_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[13] 
       (.C(clk),
        .CE(E),
        .D(Q[13]),
        .Q(dividend_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[14] 
       (.C(clk),
        .CE(E),
        .D(Q[14]),
        .Q(dividend_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[15] 
       (.C(clk),
        .CE(E),
        .D(Q[15]),
        .Q(dividend_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[16] 
       (.C(clk),
        .CE(E),
        .D(Q[16]),
        .Q(dividend_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[17] 
       (.C(clk),
        .CE(E),
        .D(Q[17]),
        .Q(dividend_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[18] 
       (.C(clk),
        .CE(E),
        .D(Q[18]),
        .Q(dividend_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[19] 
       (.C(clk),
        .CE(E),
        .D(Q[19]),
        .Q(dividend_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .D(Q[1]),
        .Q(dividend_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[20] 
       (.C(clk),
        .CE(E),
        .D(Q[20]),
        .Q(dividend_reg[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[21] 
       (.C(clk),
        .CE(E),
        .D(Q[21]),
        .Q(dividend_reg[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[22] 
       (.C(clk),
        .CE(E),
        .D(Q[22]),
        .Q(dividend_reg[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[23] 
       (.C(clk),
        .CE(E),
        .D(Q[23]),
        .Q(dividend_reg[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[24] 
       (.C(clk),
        .CE(E),
        .D(Q[24]),
        .Q(dividend_reg[24]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[25] 
       (.C(clk),
        .CE(E),
        .D(Q[25]),
        .Q(dividend_reg[25]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[26] 
       (.C(clk),
        .CE(E),
        .D(Q[26]),
        .Q(dividend_reg[26]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[27] 
       (.C(clk),
        .CE(E),
        .D(Q[27]),
        .Q(dividend_reg[27]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[28] 
       (.C(clk),
        .CE(E),
        .D(Q[28]),
        .Q(dividend_reg[28]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[29] 
       (.C(clk),
        .CE(E),
        .D(Q[29]),
        .Q(dividend_reg[29]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .D(Q[2]),
        .Q(dividend_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[30] 
       (.C(clk),
        .CE(E),
        .D(Q[30]),
        .Q(dividend_reg[30]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[31] 
       (.C(clk),
        .CE(E),
        .D(Q[31]),
        .Q(dividend_reg[31]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .D(Q[3]),
        .Q(dividend_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .D(Q[4]),
        .Q(dividend_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[5] 
       (.C(clk),
        .CE(E),
        .D(Q[5]),
        .Q(dividend_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[6] 
       (.C(clk),
        .CE(E),
        .D(Q[6]),
        .Q(dividend_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[7] 
       (.C(clk),
        .CE(E),
        .D(Q[7]),
        .Q(dividend_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[8] 
       (.C(clk),
        .CE(E),
        .D(Q[8]),
        .Q(dividend_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \dividend_reg_reg[9] 
       (.C(clk),
        .CE(E),
        .D(Q[9]),
        .Q(dividend_reg[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[0] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [0]),
        .Q(divisor_reg[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[10] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [10]),
        .Q(divisor_reg[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[11] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [11]),
        .Q(divisor_reg[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[12] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [12]),
        .Q(divisor_reg[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[13] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [13]),
        .Q(divisor_reg[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[14] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [14]),
        .Q(divisor_reg[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[15] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [15]),
        .Q(divisor_reg[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[16] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [16]),
        .Q(divisor_reg[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[17] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [17]),
        .Q(divisor_reg[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[18] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [18]),
        .Q(divisor_reg[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[19] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [19]),
        .Q(divisor_reg[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[1] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [1]),
        .Q(divisor_reg[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[2] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [2]),
        .Q(divisor_reg[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[3] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [3]),
        .Q(divisor_reg[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[4] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [4]),
        .Q(divisor_reg[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[5] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [5]),
        .Q(divisor_reg[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[6] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [6]),
        .Q(divisor_reg[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[7] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [7]),
        .Q(divisor_reg[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[8] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [8]),
        .Q(divisor_reg[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \divisor_reg_reg[9] 
       (.C(clk),
        .CE(E),
        .D(\divisor_reg_reg[19]_0 [9]),
        .Q(divisor_reg[9]),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \i[0]_i_1 
       (.I0(i_reg[0]),
        .O(\i[0]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair35" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \i[1]_i_1 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .O(i0__0[1]));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \i[2]_i_1 
       (.I0(i_reg[2]),
        .I1(i_reg[1]),
        .I2(i_reg[0]),
        .O(i0__0[2]));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \i[3]_i_1 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .I3(i_reg[3]),
        .O(i0__0[3]));
  (* SOFT_HLUTNM = "soft_lutpair25" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \i[4]_i_1 
       (.I0(i_reg[4]),
        .I1(i_reg[3]),
        .I2(i_reg[2]),
        .I3(i_reg[1]),
        .I4(i_reg[0]),
        .O(i0__0[4]));
  LUT6 #(
    .INIT(64'hFFFF0000FFFE0001)) 
    \i[5]_i_1 
       (.I0(i_reg[3]),
        .I1(i_reg[2]),
        .I2(i_reg[1]),
        .I3(i_reg[0]),
        .I4(i_reg[5]),
        .I5(i_reg[4]),
        .O(i0__0[5]));
  LUT6 #(
    .INIT(64'hFFFFFFFE00000001)) 
    \i[6]_i_1 
       (.I0(i_reg[3]),
        .I1(i_reg[2]),
        .I2(\sar[28]_i_2_n_0 ),
        .I3(i_reg[4]),
        .I4(i_reg[5]),
        .I5(i_reg[6]),
        .O(i0__0[6]));
  LUT6 #(
    .INIT(64'h0000000000010000)) 
    \i[7]_i_1 
       (.I0(lat_cnt_reg[6]),
        .I1(lat_cnt_reg[5]),
        .I2(lat_cnt_reg[7]),
        .I3(lat_cnt_reg[4]),
        .I4(lat_cnt),
        .I5(\i[7]_i_3_n_0 ),
        .O(\i[7]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFF00FF00FF00FE01)) 
    \i[7]_i_2 
       (.I0(i_reg[6]),
        .I1(i_reg[5]),
        .I2(i_reg[4]),
        .I3(i_reg[7]),
        .I4(i_reg[3]),
        .I5(\sar[8]_i_2_n_0 ),
        .O(\i[7]_i_2_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hFFFE)) 
    \i[7]_i_3 
       (.I0(lat_cnt_reg[2]),
        .I1(lat_cnt_reg[0]),
        .I2(lat_cnt_reg[1]),
        .I3(lat_cnt_reg[3]),
        .O(\i[7]_i_3_n_0 ));
  FDSE \i_reg[0] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(\i[0]_i_1_n_0 ),
        .Q(i_reg[0]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[1] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(i0__0[1]),
        .Q(i_reg[1]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[2] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(i0__0[2]),
        .Q(i_reg[2]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[3] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(i0__0[3]),
        .Q(i_reg[3]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDSE \i_reg[4] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(i0__0[4]),
        .Q(i_reg[4]),
        .S(\FSM_onehot_state_reg[0]_0 ));
  FDRE \i_reg[5] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(i0__0[5]),
        .Q(i_reg[5]),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE \i_reg[6] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(i0__0[6]),
        .Q(i_reg[6]),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE \i_reg[7] 
       (.C(clk),
        .CE(\i[7]_i_1_n_0 ),
        .D(\i[7]_i_2_n_0 ),
        .Q(i_reg[7]),
        .R(\FSM_onehot_state_reg[0]_0 ));
  (* CHECK_LICENSE_TYPE = "mult_32_20_lm,mult_gen_v12_0_18,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "mult_gen_v12_0_18,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_mult_32_20_lm__2 instance_name
       (.A({\sar_reg_n_0_[31] ,\sar_reg_n_0_[30] ,\sar_reg_n_0_[29] ,\sar_reg_n_0_[28] ,\sar_reg_n_0_[27] ,\sar_reg_n_0_[26] ,\sar_reg_n_0_[25] ,\sar_reg_n_0_[24] ,\sar_reg_n_0_[23] ,\sar_reg_n_0_[22] ,\sar_reg_n_0_[21] ,\sar_reg_n_0_[20] ,\sar_reg_n_0_[19] ,\sar_reg_n_0_[18] ,\sar_reg_n_0_[17] ,\sar_reg_n_0_[16] ,\sar_reg_n_0_[15] ,\sar_reg_n_0_[14] ,\sar_reg_n_0_[13] ,\sar_reg_n_0_[12] ,\sar_reg_n_0_[11] ,\sar_reg_n_0_[10] ,\sar_reg_n_0_[9] ,\sar_reg_n_0_[8] ,\sar_reg_n_0_[7] ,\sar_reg_n_0_[6] ,\sar_reg_n_0_[5] ,\sar_reg_n_0_[4] ,\sar_reg_n_0_[3] ,\sar_reg_n_0_[2] ,\sar_reg_n_0_[1] ,\sar_reg_n_0_[0] }),
        .B(divisor_reg),
        .CLK(clk),
        .P(mul_res));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT1 #(
    .INIT(2'h1)) 
    \lat_cnt[0]_i_1 
       (.I0(lat_cnt_reg[0]),
        .O(lat_cnt0[0]));
  (* SOFT_HLUTNM = "soft_lutpair34" *) 
  LUT2 #(
    .INIT(4'h9)) 
    \lat_cnt[1]_i_1 
       (.I0(lat_cnt_reg[1]),
        .I1(lat_cnt_reg[0]),
        .O(lat_cnt0[1]));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT3 #(
    .INIT(8'hA9)) 
    \lat_cnt[2]_i_1 
       (.I0(lat_cnt_reg[2]),
        .I1(lat_cnt_reg[0]),
        .I2(lat_cnt_reg[1]),
        .O(lat_cnt0[2]));
  (* SOFT_HLUTNM = "soft_lutpair26" *) 
  LUT4 #(
    .INIT(16'hAAA9)) 
    \lat_cnt[3]_i_1 
       (.I0(lat_cnt_reg[3]),
        .I1(lat_cnt_reg[1]),
        .I2(lat_cnt_reg[0]),
        .I3(lat_cnt_reg[2]),
        .O(lat_cnt0[3]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hAAAAAAA9)) 
    \lat_cnt[4]_i_1 
       (.I0(lat_cnt_reg[4]),
        .I1(lat_cnt_reg[2]),
        .I2(lat_cnt_reg[0]),
        .I3(lat_cnt_reg[1]),
        .I4(lat_cnt_reg[3]),
        .O(lat_cnt0[4]));
  LUT6 #(
    .INIT(64'hAAAAAAAAAAAAAAA9)) 
    \lat_cnt[5]_i_1 
       (.I0(lat_cnt_reg[5]),
        .I1(lat_cnt_reg[3]),
        .I2(lat_cnt_reg[1]),
        .I3(lat_cnt_reg[0]),
        .I4(lat_cnt_reg[2]),
        .I5(lat_cnt_reg[4]),
        .O(lat_cnt0[5]));
  LUT3 #(
    .INIT(8'hC9)) 
    \lat_cnt[6]_i_1 
       (.I0(\lat_cnt[7]_i_2_n_0 ),
        .I1(lat_cnt_reg[6]),
        .I2(lat_cnt_reg[5]),
        .O(lat_cnt0[6]));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'hFE01)) 
    \lat_cnt[7]_i_1 
       (.I0(\lat_cnt[7]_i_2_n_0 ),
        .I1(lat_cnt_reg[6]),
        .I2(lat_cnt_reg[5]),
        .I3(lat_cnt_reg[7]),
        .O(lat_cnt0[7]));
  (* SOFT_HLUTNM = "soft_lutpair23" *) 
  LUT5 #(
    .INIT(32'hFFFFFFFE)) 
    \lat_cnt[7]_i_2 
       (.I0(lat_cnt_reg[3]),
        .I1(lat_cnt_reg[1]),
        .I2(lat_cnt_reg[0]),
        .I3(lat_cnt_reg[2]),
        .I4(lat_cnt_reg[4]),
        .O(\lat_cnt[7]_i_2_n_0 ));
  FDRE \lat_cnt_reg[0] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[0]),
        .Q(lat_cnt_reg[0]),
        .R(lat_cnt0_0));
  FDRE \lat_cnt_reg[1] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[1]),
        .Q(lat_cnt_reg[1]),
        .R(lat_cnt0_0));
  FDSE \lat_cnt_reg[2] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[2]),
        .Q(lat_cnt_reg[2]),
        .S(lat_cnt0_0));
  FDRE \lat_cnt_reg[3] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[3]),
        .Q(lat_cnt_reg[3]),
        .R(lat_cnt0_0));
  FDRE \lat_cnt_reg[4] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[4]),
        .Q(lat_cnt_reg[4]),
        .R(lat_cnt0_0));
  FDRE \lat_cnt_reg[5] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[5]),
        .Q(lat_cnt_reg[5]),
        .R(lat_cnt0_0));
  FDRE \lat_cnt_reg[6] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[6]),
        .Q(lat_cnt_reg[6]),
        .R(lat_cnt0_0));
  FDRE \lat_cnt_reg[7] 
       (.C(clk),
        .CE(lat_cnt),
        .D(lat_cnt0[7]),
        .Q(lat_cnt_reg[7]),
        .R(lat_cnt0_0));
  FDRE \result_reg_reg[0] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[0] ),
        .Q(\result_reg_reg[10]_0 [0]),
        .R(1'b0));
  FDRE \result_reg_reg[10] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[10] ),
        .Q(\result_reg_reg[10]_0 [10]),
        .R(1'b0));
  FDRE \result_reg_reg[1] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[1] ),
        .Q(\result_reg_reg[10]_0 [1]),
        .R(1'b0));
  FDRE \result_reg_reg[2] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[2] ),
        .Q(\result_reg_reg[10]_0 [2]),
        .R(1'b0));
  FDRE \result_reg_reg[3] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[3] ),
        .Q(\result_reg_reg[10]_0 [3]),
        .R(1'b0));
  FDRE \result_reg_reg[4] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[4] ),
        .Q(\result_reg_reg[10]_0 [4]),
        .R(1'b0));
  FDRE \result_reg_reg[5] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[5] ),
        .Q(\result_reg_reg[10]_0 [5]),
        .R(1'b0));
  FDRE \result_reg_reg[6] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[6] ),
        .Q(\result_reg_reg[10]_0 [6]),
        .R(1'b0));
  FDRE \result_reg_reg[7] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[7] ),
        .Q(\result_reg_reg[10]_0 [7]),
        .R(1'b0));
  FDRE \result_reg_reg[8] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[8] ),
        .Q(\result_reg_reg[10]_0 [8]),
        .R(1'b0));
  FDRE \result_reg_reg[9] 
       (.C(clk),
        .CE(rv_reg),
        .D(\sar_reg_n_0_[9] ),
        .Q(\result_reg_reg[10]_0 [9]),
        .R(1'b0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry
       (.CI(1'b0),
        .CO({sar1_carry_n_0,sar1_carry_n_1,sar1_carry_n_2,sar1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry_i_1_n_0,sar1_carry_i_2_n_0,sar1_carry_i_3_n_0,sar1_carry_i_4_n_0}),
        .O(NLW_sar1_carry_O_UNCONNECTED[3:0]),
        .S({sar1_carry_i_5_n_0,sar1_carry_i_6_n_0,sar1_carry_i_7_n_0,sar1_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__0
       (.CI(sar1_carry_n_0),
        .CO({sar1_carry__0_n_0,sar1_carry__0_n_1,sar1_carry__0_n_2,sar1_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__0_i_1_n_0,sar1_carry__0_i_2_n_0,sar1_carry__0_i_3_n_0,sar1_carry__0_i_4_n_0}),
        .O(NLW_sar1_carry__0_O_UNCONNECTED[3:0]),
        .S({sar1_carry__0_i_5_n_0,sar1_carry__0_i_6_n_0,sar1_carry__0_i_7_n_0,sar1_carry__0_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_1
       (.I0(mul_res[15]),
        .I1(dividend_reg[15]),
        .I2(mul_res[14]),
        .I3(dividend_reg[14]),
        .O(sar1_carry__0_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_2
       (.I0(mul_res[13]),
        .I1(dividend_reg[13]),
        .I2(mul_res[12]),
        .I3(dividend_reg[12]),
        .O(sar1_carry__0_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_3
       (.I0(mul_res[11]),
        .I1(dividend_reg[11]),
        .I2(mul_res[10]),
        .I3(dividend_reg[10]),
        .O(sar1_carry__0_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__0_i_4
       (.I0(mul_res[9]),
        .I1(dividend_reg[9]),
        .I2(mul_res[8]),
        .I3(dividend_reg[8]),
        .O(sar1_carry__0_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_5
       (.I0(dividend_reg[15]),
        .I1(mul_res[15]),
        .I2(mul_res[14]),
        .I3(dividend_reg[14]),
        .O(sar1_carry__0_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_6
       (.I0(dividend_reg[13]),
        .I1(mul_res[13]),
        .I2(mul_res[12]),
        .I3(dividend_reg[12]),
        .O(sar1_carry__0_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_7
       (.I0(dividend_reg[11]),
        .I1(mul_res[11]),
        .I2(mul_res[10]),
        .I3(dividend_reg[10]),
        .O(sar1_carry__0_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__0_i_8
       (.I0(dividend_reg[9]),
        .I1(mul_res[9]),
        .I2(mul_res[8]),
        .I3(dividend_reg[8]),
        .O(sar1_carry__0_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__1
       (.CI(sar1_carry__0_n_0),
        .CO({sar1_carry__1_n_0,sar1_carry__1_n_1,sar1_carry__1_n_2,sar1_carry__1_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__1_i_1_n_0,sar1_carry__1_i_2_n_0,sar1_carry__1_i_3_n_0,sar1_carry__1_i_4_n_0}),
        .O(NLW_sar1_carry__1_O_UNCONNECTED[3:0]),
        .S({sar1_carry__1_i_5_n_0,sar1_carry__1_i_6_n_0,sar1_carry__1_i_7_n_0,sar1_carry__1_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_1
       (.I0(mul_res[23]),
        .I1(dividend_reg[23]),
        .I2(mul_res[22]),
        .I3(dividend_reg[22]),
        .O(sar1_carry__1_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_2
       (.I0(mul_res[21]),
        .I1(dividend_reg[21]),
        .I2(mul_res[20]),
        .I3(dividend_reg[20]),
        .O(sar1_carry__1_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_3
       (.I0(mul_res[19]),
        .I1(dividend_reg[19]),
        .I2(mul_res[18]),
        .I3(dividend_reg[18]),
        .O(sar1_carry__1_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__1_i_4
       (.I0(mul_res[17]),
        .I1(dividend_reg[17]),
        .I2(mul_res[16]),
        .I3(dividend_reg[16]),
        .O(sar1_carry__1_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_5
       (.I0(dividend_reg[23]),
        .I1(mul_res[23]),
        .I2(mul_res[22]),
        .I3(dividend_reg[22]),
        .O(sar1_carry__1_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_6
       (.I0(dividend_reg[21]),
        .I1(mul_res[21]),
        .I2(mul_res[20]),
        .I3(dividend_reg[20]),
        .O(sar1_carry__1_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_7
       (.I0(dividend_reg[19]),
        .I1(mul_res[19]),
        .I2(mul_res[18]),
        .I3(dividend_reg[18]),
        .O(sar1_carry__1_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__1_i_8
       (.I0(dividend_reg[17]),
        .I1(mul_res[17]),
        .I2(mul_res[16]),
        .I3(dividend_reg[16]),
        .O(sar1_carry__1_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__2
       (.CI(sar1_carry__1_n_0),
        .CO({sar1_carry__2_n_0,sar1_carry__2_n_1,sar1_carry__2_n_2,sar1_carry__2_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__2_i_1_n_0,sar1_carry__2_i_2_n_0,sar1_carry__2_i_3_n_0,sar1_carry__2_i_4_n_0}),
        .O(NLW_sar1_carry__2_O_UNCONNECTED[3:0]),
        .S({sar1_carry__2_i_5_n_0,sar1_carry__2_i_6_n_0,sar1_carry__2_i_7_n_0,sar1_carry__2_i_8_n_0}));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_1
       (.I0(mul_res[31]),
        .I1(dividend_reg[31]),
        .I2(mul_res[30]),
        .I3(dividend_reg[30]),
        .O(sar1_carry__2_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_2
       (.I0(mul_res[29]),
        .I1(dividend_reg[29]),
        .I2(mul_res[28]),
        .I3(dividend_reg[28]),
        .O(sar1_carry__2_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_3
       (.I0(mul_res[27]),
        .I1(dividend_reg[27]),
        .I2(mul_res[26]),
        .I3(dividend_reg[26]),
        .O(sar1_carry__2_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry__2_i_4
       (.I0(mul_res[25]),
        .I1(dividend_reg[25]),
        .I2(mul_res[24]),
        .I3(dividend_reg[24]),
        .O(sar1_carry__2_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_5
       (.I0(dividend_reg[31]),
        .I1(mul_res[31]),
        .I2(mul_res[30]),
        .I3(dividend_reg[30]),
        .O(sar1_carry__2_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_6
       (.I0(dividend_reg[29]),
        .I1(mul_res[29]),
        .I2(mul_res[28]),
        .I3(dividend_reg[28]),
        .O(sar1_carry__2_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_7
       (.I0(dividend_reg[27]),
        .I1(mul_res[27]),
        .I2(mul_res[26]),
        .I3(dividend_reg[26]),
        .O(sar1_carry__2_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry__2_i_8
       (.I0(dividend_reg[25]),
        .I1(mul_res[25]),
        .I2(mul_res[24]),
        .I3(dividend_reg[24]),
        .O(sar1_carry__2_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__3
       (.CI(sar1_carry__2_n_0),
        .CO({sar1_carry__3_n_0,sar1_carry__3_n_1,sar1_carry__3_n_2,sar1_carry__3_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__3_i_1__0_n_0,sar1_carry__3_i_2__0_n_0,sar1_carry__3_i_3__0_n_0,sar1_carry__3_i_4__0_n_0}),
        .O(NLW_sar1_carry__3_O_UNCONNECTED[3:0]),
        .S({sar1_carry__3_i_5__0_n_0,sar1_carry__3_i_6__0_n_0,sar1_carry__3_i_7__0_n_0,sar1_carry__3_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_1__0
       (.I0(mul_res[39]),
        .I1(mul_res[38]),
        .O(sar1_carry__3_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_2__0
       (.I0(mul_res[37]),
        .I1(mul_res[36]),
        .O(sar1_carry__3_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_3__0
       (.I0(mul_res[35]),
        .I1(mul_res[34]),
        .O(sar1_carry__3_i_3__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__3_i_4__0
       (.I0(mul_res[33]),
        .I1(mul_res[32]),
        .O(sar1_carry__3_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_5__0
       (.I0(mul_res[38]),
        .I1(mul_res[39]),
        .O(sar1_carry__3_i_5__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_6__0
       (.I0(mul_res[36]),
        .I1(mul_res[37]),
        .O(sar1_carry__3_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_7__0
       (.I0(mul_res[34]),
        .I1(mul_res[35]),
        .O(sar1_carry__3_i_7__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__3_i_8__0
       (.I0(mul_res[32]),
        .I1(mul_res[33]),
        .O(sar1_carry__3_i_8__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__4
       (.CI(sar1_carry__3_n_0),
        .CO({sar1_carry__4_n_0,sar1_carry__4_n_1,sar1_carry__4_n_2,sar1_carry__4_n_3}),
        .CYINIT(1'b0),
        .DI({sar1_carry__4_i_1__0_n_0,sar1_carry__4_i_2__0_n_0,sar1_carry__4_i_3__0_n_0,sar1_carry__4_i_4__0_n_0}),
        .O(NLW_sar1_carry__4_O_UNCONNECTED[3:0]),
        .S({sar1_carry__4_i_5__0_n_0,sar1_carry__4_i_6__0_n_0,sar1_carry__4_i_7__0_n_0,sar1_carry__4_i_8__0_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_1__0
       (.I0(mul_res[47]),
        .I1(mul_res[46]),
        .O(sar1_carry__4_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_2__0
       (.I0(mul_res[45]),
        .I1(mul_res[44]),
        .O(sar1_carry__4_i_2__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_3__0
       (.I0(mul_res[43]),
        .I1(mul_res[42]),
        .O(sar1_carry__4_i_3__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__4_i_4__0
       (.I0(mul_res[41]),
        .I1(mul_res[40]),
        .O(sar1_carry__4_i_4__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_5__0
       (.I0(mul_res[46]),
        .I1(mul_res[47]),
        .O(sar1_carry__4_i_5__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_6__0
       (.I0(mul_res[44]),
        .I1(mul_res[45]),
        .O(sar1_carry__4_i_6__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_7__0
       (.I0(mul_res[42]),
        .I1(mul_res[43]),
        .O(sar1_carry__4_i_7__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__4_i_8__0
       (.I0(mul_res[40]),
        .I1(mul_res[41]),
        .O(sar1_carry__4_i_8__0_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 sar1_carry__5
       (.CI(sar1_carry__4_n_0),
        .CO({NLW_sar1_carry__5_CO_UNCONNECTED[3:2],sar1,sar1_carry__5_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,sar1_carry__5_i_1__0_n_0,sar1_carry__5_i_2__0_n_0}),
        .O(NLW_sar1_carry__5_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,sar1_carry__5_i_3__0_n_0,sar1_carry__5_i_4__0_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__5_i_1__0
       (.I0(mul_res[51]),
        .I1(mul_res[50]),
        .O(sar1_carry__5_i_1__0_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    sar1_carry__5_i_2__0
       (.I0(mul_res[49]),
        .I1(mul_res[48]),
        .O(sar1_carry__5_i_2__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__5_i_3__0
       (.I0(mul_res[50]),
        .I1(mul_res[51]),
        .O(sar1_carry__5_i_3__0_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    sar1_carry__5_i_4__0
       (.I0(mul_res[48]),
        .I1(mul_res[49]),
        .O(sar1_carry__5_i_4__0_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_1
       (.I0(mul_res[7]),
        .I1(dividend_reg[7]),
        .I2(mul_res[6]),
        .I3(dividend_reg[6]),
        .O(sar1_carry_i_1_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_2
       (.I0(mul_res[5]),
        .I1(dividend_reg[5]),
        .I2(mul_res[4]),
        .I3(dividend_reg[4]),
        .O(sar1_carry_i_2_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_3
       (.I0(mul_res[3]),
        .I1(dividend_reg[3]),
        .I2(mul_res[2]),
        .I3(dividend_reg[2]),
        .O(sar1_carry_i_3_n_0));
  LUT4 #(
    .INIT(16'h22B2)) 
    sar1_carry_i_4
       (.I0(mul_res[1]),
        .I1(dividend_reg[1]),
        .I2(mul_res[0]),
        .I3(dividend_reg[0]),
        .O(sar1_carry_i_4_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_5
       (.I0(dividend_reg[7]),
        .I1(mul_res[7]),
        .I2(mul_res[6]),
        .I3(dividend_reg[6]),
        .O(sar1_carry_i_5_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_6
       (.I0(dividend_reg[5]),
        .I1(mul_res[5]),
        .I2(mul_res[4]),
        .I3(dividend_reg[4]),
        .O(sar1_carry_i_6_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_7
       (.I0(dividend_reg[3]),
        .I1(mul_res[3]),
        .I2(mul_res[2]),
        .I3(dividend_reg[2]),
        .O(sar1_carry_i_7_n_0));
  LUT4 #(
    .INIT(16'h9009)) 
    sar1_carry_i_8
       (.I0(dividend_reg[1]),
        .I1(mul_res[1]),
        .I2(mul_res[0]),
        .I3(dividend_reg[0]),
        .O(sar1_carry_i_8_n_0));
  LUT6 #(
    .INIT(64'hFFFFFFFB00000008)) 
    \sar[0]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[31]_i_3_n_0 ),
        .I2(\FSM_onehot_state[3]_i_3_n_0 ),
        .I3(i_reg[3]),
        .I4(\sar[8]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[0] ),
        .O(\sar[0]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[10]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[10]_i_2_n_0 ),
        .I2(\sar[31]_i_3_n_0 ),
        .I3(i_reg[3]),
        .I4(\FSM_onehot_state[3]_i_3_n_0 ),
        .I5(\sar_reg_n_0_[10] ),
        .O(\sar[10]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \sar[10]_i_2 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .O(\sar[10]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[11]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[11]_i_2_n_0 ),
        .I2(\sar[31]_i_3_n_0 ),
        .I3(i_reg[3]),
        .I4(\FSM_onehot_state[3]_i_3_n_0 ),
        .I5(\sar_reg_n_0_[11] ),
        .O(\sar[11]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair29" *) 
  LUT3 #(
    .INIT(8'h08)) 
    \sar[11]_i_2 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .O(\sar[11]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[12]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[28]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[12] ),
        .O(\sar[12]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[13]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[29]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[13] ),
        .O(\sar[13]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[14]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[30]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[14] ),
        .O(\sar[14]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[15]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[15]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_4_n_0 ),
        .I5(\sar_reg_n_0_[15] ),
        .O(\sar[15]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h00000002)) 
    \sar[15]_i_2 
       (.I0(i_reg[3]),
        .I1(i_reg[7]),
        .I2(i_reg[4]),
        .I3(i_reg[5]),
        .I4(i_reg[6]),
        .O(\sar[15]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[16]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[31]_i_3_n_0 ),
        .I2(\sar[23]_i_2_n_0 ),
        .I3(i_reg[2]),
        .I4(\sar[28]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[16] ),
        .O(\sar[16]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[17]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[29]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[23]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[17] ),
        .O(\sar[17]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[18]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[30]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[23]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[18] ),
        .O(\sar[18]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[19]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_4_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[23]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[19] ),
        .O(\sar[19]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[1]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[9]_i_2_n_0 ),
        .I2(\sar[31]_i_3_n_0 ),
        .I3(\FSM_onehot_state[3]_i_3_n_0 ),
        .I4(i_reg[3]),
        .I5(\sar_reg_n_0_[1] ),
        .O(\sar[1]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[20]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[28]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[20] ),
        .O(\sar[20]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[21]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[29]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[21] ),
        .O(\sar[21]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[22]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[30]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[22] ),
        .O(\sar[22]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[23]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[23]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_4_n_0 ),
        .I5(\sar_reg_n_0_[23] ),
        .O(\sar[23]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h00000004)) 
    \sar[23]_i_2 
       (.I0(i_reg[3]),
        .I1(i_reg[4]),
        .I2(i_reg[5]),
        .I3(i_reg[7]),
        .I4(i_reg[6]),
        .O(\sar[23]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[24]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[31]_i_3_n_0 ),
        .I2(\sar[31]_i_2_n_0 ),
        .I3(i_reg[2]),
        .I4(\sar[28]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[24] ),
        .O(\sar[24]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[25]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[29]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[25] ),
        .O(\sar[25]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[26]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[30]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[26] ),
        .O(\sar[26]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hEFFFFFFF20000000)) 
    \sar[27]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_4_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[27] ),
        .O(\sar[27]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[28]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[28]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[28] ),
        .O(\sar[28]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'hE)) 
    \sar[28]_i_2 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .O(\sar[28]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[29]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[29]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[29] ),
        .O(\sar[29]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sar[29]_i_2 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .O(\sar[29]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[2]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[10]_i_2_n_0 ),
        .I2(\sar[31]_i_3_n_0 ),
        .I3(\FSM_onehot_state[3]_i_3_n_0 ),
        .I4(i_reg[3]),
        .I5(\sar_reg_n_0_[2] ),
        .O(\sar[2]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[30]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[30]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[30] ),
        .O(\sar[30]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair33" *) 
  LUT2 #(
    .INIT(4'h2)) 
    \sar[30]_i_2 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .O(\sar[30]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[31]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[31]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_4_n_0 ),
        .I5(\sar_reg_n_0_[31] ),
        .O(\sar[31]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair22" *) 
  LUT5 #(
    .INIT(32'h00000008)) 
    \sar[31]_i_2 
       (.I0(i_reg[3]),
        .I1(i_reg[4]),
        .I2(i_reg[5]),
        .I3(i_reg[7]),
        .I4(i_reg[6]),
        .O(\sar[31]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFFF80000000)) 
    \sar[31]_i_3 
       (.I0(\sar[31]_i_5_n_0 ),
        .I1(\sar[31]_i_6_n_0 ),
        .I2(\sar[31]_i_7_n_0 ),
        .I3(sar1),
        .I4(lat_cnt),
        .I5(lat_cnt0_0),
        .O(\sar[31]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair32" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \sar[31]_i_4 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .O(\sar[31]_i_4_n_0 ));
  LUT6 #(
    .INIT(64'h000B000B0000000B)) 
    \sar[31]_i_5 
       (.I0(lat_cnt_reg[1]),
        .I1(lat_cnt_reg[0]),
        .I2(lat_cnt_reg[2]),
        .I3(lat_cnt_reg[5]),
        .I4(lat_cnt_reg[3]),
        .I5(lat_cnt_reg[4]),
        .O(\sar[31]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair27" *) 
  LUT4 #(
    .INIT(16'h0001)) 
    \sar[31]_i_6 
       (.I0(lat_cnt_reg[7]),
        .I1(lat_cnt_reg[4]),
        .I2(lat_cnt_reg[5]),
        .I3(lat_cnt_reg[6]),
        .O(\sar[31]_i_6_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair31" *) 
  LUT2 #(
    .INIT(4'h1)) 
    \sar[31]_i_7 
       (.I0(lat_cnt_reg[1]),
        .I1(lat_cnt_reg[2]),
        .O(\sar[31]_i_7_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[3]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[11]_i_2_n_0 ),
        .I2(\sar[31]_i_3_n_0 ),
        .I3(\FSM_onehot_state[3]_i_3_n_0 ),
        .I4(i_reg[3]),
        .I5(\sar_reg_n_0_[3] ),
        .O(\sar[3]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[4]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[28]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[4] ),
        .O(\sar[4]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[5]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[29]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[5] ),
        .O(\sar[5]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[6]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[30]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[6] ),
        .O(\sar[6]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'hBFFFFFFF80000000)) 
    \sar[7]_i_1 
       (.I0(lat_cnt0_0),
        .I1(i_reg[2]),
        .I2(\sar[7]_i_2_n_0 ),
        .I3(\sar[31]_i_3_n_0 ),
        .I4(\sar[31]_i_4_n_0 ),
        .I5(\sar_reg_n_0_[7] ),
        .O(\sar[7]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair24" *) 
  LUT5 #(
    .INIT(32'h00000001)) 
    \sar[7]_i_2 
       (.I0(i_reg[7]),
        .I1(i_reg[4]),
        .I2(i_reg[5]),
        .I3(i_reg[6]),
        .I4(i_reg[3]),
        .O(\sar[7]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFFFBF00000080)) 
    \sar[8]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[31]_i_3_n_0 ),
        .I2(i_reg[3]),
        .I3(\FSM_onehot_state[3]_i_3_n_0 ),
        .I4(\sar[8]_i_2_n_0 ),
        .I5(\sar_reg_n_0_[8] ),
        .O(\sar[8]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair28" *) 
  LUT3 #(
    .INIT(8'hFE)) 
    \sar[8]_i_2 
       (.I0(i_reg[0]),
        .I1(i_reg[1]),
        .I2(i_reg[2]),
        .O(\sar[8]_i_2_n_0 ));
  LUT6 #(
    .INIT(64'hFFFFBFFF00008000)) 
    \sar[9]_i_1 
       (.I0(lat_cnt0_0),
        .I1(\sar[9]_i_2_n_0 ),
        .I2(\sar[31]_i_3_n_0 ),
        .I3(i_reg[3]),
        .I4(\FSM_onehot_state[3]_i_3_n_0 ),
        .I5(\sar_reg_n_0_[9] ),
        .O(\sar[9]_i_1_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair30" *) 
  LUT3 #(
    .INIT(8'h04)) 
    \sar[9]_i_2 
       (.I0(i_reg[1]),
        .I1(i_reg[0]),
        .I2(i_reg[2]),
        .O(\sar[9]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[0]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[0] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[10]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[10] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[11]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[11] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[12]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[12] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[13]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[13] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[14]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[14] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[15]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[15] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[16]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[16] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[17]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[17] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[18]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[18] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[19]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[19] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[1]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[1] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[20]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[20] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[21]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[21] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[22]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[22] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[23]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[23] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[24] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[24]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[24] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[25]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[25] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[26]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[26] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[27]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[27] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[28] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[28]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[28] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[29] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[29]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[29] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[2]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[2] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[30] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[30]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[30] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[31] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[31]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[31] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[3]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[3] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[4]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[4] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[5]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[5] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[6]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[6] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[7]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[7] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[8]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[8] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \sar_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(\sar[9]_i_1_n_0 ),
        .Q(\sar_reg_n_0_[9] ),
        .R(\FSM_onehot_state_reg[0]_0 ));
endmodule

(* ORIG_REF_NAME = "draw_circle" *) 
module hdmi_vga_vp_0_0_draw_circle
   (\val_reg[1] ,
    \val_reg[2] ,
    \de_mux[4] ,
    \pixel_reg_reg[0] ,
    \val_reg[18] ,
    \val_reg[26] ,
    Q,
    \x_error_r_reg[11] ,
    clk,
    CE,
    \y_error_r_reg[11] ,
    \y_error_r_reg[11]_0 ,
    \v_sync_mux[1] ,
    \h_sync_mux[1] ,
    \val_reg[26]_0 ,
    \val_reg[18]_0 ,
    \pix_mux[5] ,
    \pix_mux[6] ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[15]_0 );
  output \val_reg[1] ;
  output \val_reg[2] ;
  output \de_mux[4] ;
  output \pixel_reg_reg[0] ;
  output \val_reg[18] ;
  output \val_reg[26] ;
  input [10:0]Q;
  input [10:0]\x_error_r_reg[11] ;
  input clk;
  input CE;
  input [10:0]\y_error_r_reg[11] ;
  input [10:0]\y_error_r_reg[11]_0 ;
  input \v_sync_mux[1] ;
  input \h_sync_mux[1] ;
  input \val_reg[26]_0 ;
  input \val_reg[18]_0 ;
  input [0:0]\pix_mux[5] ;
  input [0:0]\pix_mux[6] ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[15]_0 ;

  wire CE;
  wire [10:0]Q;
  wire circle_getter_n_0;
  wire clk;
  wire \de_mux[4] ;
  wire getter_delay_n_2;
  wire \h_sync_mux[1] ;
  wire is_circle;
  wire [0:0]\pix_mux[5] ;
  wire [0:0]\pix_mux[6] ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[15]_0 ;
  wire \pixel_reg_reg[0] ;
  wire \v_sync_mux[1] ;
  wire \val_reg[18] ;
  wire \val_reg[18]_0 ;
  wire \val_reg[1] ;
  wire \val_reg[26] ;
  wire \val_reg[26]_0 ;
  wire \val_reg[2] ;
  wire [10:0]\x_error_r_reg[11] ;
  wire [10:0]\y_error_r_reg[11] ;
  wire [10:0]\y_error_r_reg[11]_0 ;

  hdmi_vga_vp_0_0_get_circle circle_getter
       (.CE(CE),
        .Q(Q),
        .clk(clk),
        .\pix_mux[5] (\pix_mux[5] ),
        .\pix_mux[6] (\pix_mux[6] ),
        .\pix_reg_reg[7] (getter_delay_n_2),
        .\pix_reg_reg[7]_0 (\pix_reg_reg[15] ),
        .\pix_reg_reg[7]_1 (\pix_reg_reg[15]_0 ),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0] ),
        .qspo(is_circle),
        .\val_reg[0] (circle_getter_n_0),
        .\x_error_r_reg[11]_0 (\x_error_r_reg[11] ),
        .\y_error_r_reg[11]_0 (\y_error_r_reg[11] ),
        .\y_error_r_reg[11]_1 (\y_error_r_reg[11]_0 ));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized4 getter_delay
       (.clk(clk),
        .\de_mux[4] (\de_mux[4] ),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\pix_mux[5] (\pix_mux[5] ),
        .\pix_mux[6] (\pix_mux[6] ),
        .\pix_reg_reg[15] (\pix_reg_reg[15] ),
        .\pix_reg_reg[15]_0 (\pix_reg_reg[15]_0 ),
        .qspo(is_circle),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\val_reg[18] (\val_reg[18] ),
        .\val_reg[18]_0 (\val_reg[18]_0 ),
        .\val_reg[1] (\val_reg[1] ),
        .\val_reg[26] (getter_delay_n_2),
        .\val_reg[26]_0 (\val_reg[26] ),
        .\val_reg[26]_1 (\val_reg[26]_0 ),
        .\val_reg[2] (\val_reg[2] ),
        .\val_reg[2]_0 (circle_getter_n_0));
endmodule

(* ORIG_REF_NAME = "draw_rectangle" *) 
module hdmi_vga_vp_0_0_draw_rectangle
   (CE,
    \y_max_r_out_reg[9] ,
    \x_min_r_out_reg[9] ,
    \y_min_r_out_reg[9] ,
    \x_max_r_out_reg[9] ,
    \val_reg[25] ,
    \val_reg[25]_0 ,
    Q,
    clk,
    \val_reg[26]_srl6_i_2 ,
    \val_reg[26]_srl6_i_2_0 ,
    \val_reg[26]_srl6_i_2_1 ,
    \val_reg[26]_srl6_i_2_2 ,
    pixel_r4_carry__0_0,
    pixel_r4_carry__0_1,
    \val_reg[26]_srl6_i_1_0 ,
    S,
    \pixel_r3_inferred__1/i__carry__0_0 ,
    \pixel_r3_inferred__1/i__carry__0_1 ,
    \val_reg[26]_srl6_i_1_1 ,
    \val_reg[26]_srl6_i_1_2 ,
    \pixel_r2_inferred__0/i__carry__0_0 ,
    \pixel_r2_inferred__0/i__carry__0_1 ,
    \val_reg[26]_srl6_i_1_3 ,
    \val_reg[26]_srl6_i_1_4 ,
    \pixel_r4_inferred__0/i__carry__0_0 ,
    \pixel_r4_inferred__0/i__carry__0_1 ,
    \val_reg[26]_srl6_i_1_5 ,
    \val_reg[26]_srl6_i_1_6 ,
    \val_reg[26] );
  output CE;
  output [0:0]\y_max_r_out_reg[9] ;
  output [0:0]\x_min_r_out_reg[9] ;
  output [0:0]\y_min_r_out_reg[9] ;
  output [0:0]\x_max_r_out_reg[9] ;
  output \val_reg[25] ;
  output \val_reg[25]_0 ;
  input [1:0]Q;
  input clk;
  input [3:0]\val_reg[26]_srl6_i_2 ;
  input [3:0]\val_reg[26]_srl6_i_2_0 ;
  input [3:0]\val_reg[26]_srl6_i_2_1 ;
  input [3:0]\val_reg[26]_srl6_i_2_2 ;
  input [3:0]pixel_r4_carry__0_0;
  input [3:0]pixel_r4_carry__0_1;
  input [1:0]\val_reg[26]_srl6_i_1_0 ;
  input [1:0]S;
  input [3:0]\pixel_r3_inferred__1/i__carry__0_0 ;
  input [3:0]\pixel_r3_inferred__1/i__carry__0_1 ;
  input [1:0]\val_reg[26]_srl6_i_1_1 ;
  input [1:0]\val_reg[26]_srl6_i_1_2 ;
  input [3:0]\pixel_r2_inferred__0/i__carry__0_0 ;
  input [3:0]\pixel_r2_inferred__0/i__carry__0_1 ;
  input [1:0]\val_reg[26]_srl6_i_1_3 ;
  input [1:0]\val_reg[26]_srl6_i_1_4 ;
  input [3:0]\pixel_r4_inferred__0/i__carry__0_0 ;
  input [3:0]\pixel_r4_inferred__0/i__carry__0_1 ;
  input [1:0]\val_reg[26]_srl6_i_1_5 ;
  input [1:0]\val_reg[26]_srl6_i_1_6 ;
  input \val_reg[26] ;

  wire CE;
  wire [1:0]Q;
  wire [1:0]S;
  wire clk;
  wire pixel_r1_carry_n_1;
  wire pixel_r1_carry_n_2;
  wire pixel_r1_carry_n_3;
  wire pixel_r2_carry_n_1;
  wire pixel_r2_carry_n_2;
  wire pixel_r2_carry_n_3;
  wire [3:0]\pixel_r2_inferred__0/i__carry__0_0 ;
  wire [3:0]\pixel_r2_inferred__0/i__carry__0_1 ;
  wire \pixel_r2_inferred__0/i__carry__0_n_2 ;
  wire \pixel_r2_inferred__0/i__carry__0_n_3 ;
  wire \pixel_r2_inferred__0/i__carry_n_0 ;
  wire \pixel_r2_inferred__0/i__carry_n_1 ;
  wire \pixel_r2_inferred__0/i__carry_n_2 ;
  wire \pixel_r2_inferred__0/i__carry_n_3 ;
  wire pixel_r3_carry_n_1;
  wire pixel_r3_carry_n_2;
  wire pixel_r3_carry_n_3;
  wire \pixel_r3_inferred__0/i__carry_n_1 ;
  wire \pixel_r3_inferred__0/i__carry_n_2 ;
  wire \pixel_r3_inferred__0/i__carry_n_3 ;
  wire [3:0]\pixel_r3_inferred__1/i__carry__0_0 ;
  wire [3:0]\pixel_r3_inferred__1/i__carry__0_1 ;
  wire \pixel_r3_inferred__1/i__carry__0_n_2 ;
  wire \pixel_r3_inferred__1/i__carry__0_n_3 ;
  wire \pixel_r3_inferred__1/i__carry_n_0 ;
  wire \pixel_r3_inferred__1/i__carry_n_1 ;
  wire \pixel_r3_inferred__1/i__carry_n_2 ;
  wire \pixel_r3_inferred__1/i__carry_n_3 ;
  wire [3:0]pixel_r4_carry__0_0;
  wire [3:0]pixel_r4_carry__0_1;
  wire pixel_r4_carry__0_n_2;
  wire pixel_r4_carry__0_n_3;
  wire pixel_r4_carry_n_0;
  wire pixel_r4_carry_n_1;
  wire pixel_r4_carry_n_2;
  wire pixel_r4_carry_n_3;
  wire [3:0]\pixel_r4_inferred__0/i__carry__0_0 ;
  wire [3:0]\pixel_r4_inferred__0/i__carry__0_1 ;
  wire \pixel_r4_inferred__0/i__carry__0_n_2 ;
  wire \pixel_r4_inferred__0/i__carry__0_n_3 ;
  wire \pixel_r4_inferred__0/i__carry_n_0 ;
  wire \pixel_r4_inferred__0/i__carry_n_1 ;
  wire \pixel_r4_inferred__0/i__carry_n_2 ;
  wire \pixel_r4_inferred__0/i__carry_n_3 ;
  wire \val_reg[25] ;
  wire \val_reg[25]_0 ;
  wire \val_reg[26] ;
  wire [1:0]\val_reg[26]_srl6_i_1_0 ;
  wire [1:0]\val_reg[26]_srl6_i_1_1 ;
  wire [1:0]\val_reg[26]_srl6_i_1_2 ;
  wire [1:0]\val_reg[26]_srl6_i_1_3 ;
  wire [1:0]\val_reg[26]_srl6_i_1_4 ;
  wire [1:0]\val_reg[26]_srl6_i_1_5 ;
  wire [1:0]\val_reg[26]_srl6_i_1_6 ;
  wire [3:0]\val_reg[26]_srl6_i_2 ;
  wire [3:0]\val_reg[26]_srl6_i_2_0 ;
  wire [3:0]\val_reg[26]_srl6_i_2_1 ;
  wire [3:0]\val_reg[26]_srl6_i_2_2 ;
  wire [0:0]\x_max_r_out_reg[9] ;
  wire [0:0]\x_min_r_out_reg[9] ;
  wire [0:0]\y_max_r_out_reg[9] ;
  wire [0:0]\y_min_r_out_reg[9] ;
  wire [3:0]NLW_pixel_r1_carry_O_UNCONNECTED;
  wire [3:0]NLW_pixel_r2_carry_O_UNCONNECTED;
  wire [3:0]\NLW_pixel_r2_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_pixel_r2_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_pixel_r2_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]NLW_pixel_r3_carry_O_UNCONNECTED;
  wire [3:0]\NLW_pixel_r3_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:0]\NLW_pixel_r3_inferred__1/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_pixel_r3_inferred__1/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_pixel_r3_inferred__1/i__carry__0_O_UNCONNECTED ;
  wire [3:0]NLW_pixel_r4_carry_O_UNCONNECTED;
  wire [3:2]NLW_pixel_r4_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_pixel_r4_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_pixel_r4_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_pixel_r4_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_pixel_r4_inferred__0/i__carry__0_O_UNCONNECTED ;

  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized2 draw_delay
       (.CE(CE),
        .Q(Q[1]),
        .clk(clk));
  CARRY4 pixel_r1_carry
       (.CI(1'b0),
        .CO({\y_min_r_out_reg[9] ,pixel_r1_carry_n_1,pixel_r1_carry_n_2,pixel_r1_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_pixel_r1_carry_O_UNCONNECTED[3:0]),
        .S(\val_reg[26]_srl6_i_2_1 ));
  CARRY4 pixel_r2_carry
       (.CI(1'b0),
        .CO({\x_min_r_out_reg[9] ,pixel_r2_carry_n_1,pixel_r2_carry_n_2,pixel_r2_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_pixel_r2_carry_O_UNCONNECTED[3:0]),
        .S(\val_reg[26]_srl6_i_2_0 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \pixel_r2_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\pixel_r2_inferred__0/i__carry_n_0 ,\pixel_r2_inferred__0/i__carry_n_1 ,\pixel_r2_inferred__0/i__carry_n_2 ,\pixel_r2_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI(\pixel_r2_inferred__0/i__carry__0_0 ),
        .O(\NLW_pixel_r2_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S(\pixel_r2_inferred__0/i__carry__0_1 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \pixel_r2_inferred__0/i__carry__0 
       (.CI(\pixel_r2_inferred__0/i__carry_n_0 ),
        .CO({\NLW_pixel_r2_inferred__0/i__carry__0_CO_UNCONNECTED [3:2],\pixel_r2_inferred__0/i__carry__0_n_2 ,\pixel_r2_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\val_reg[26]_srl6_i_1_3 }),
        .O(\NLW_pixel_r2_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\val_reg[26]_srl6_i_1_4 }));
  CARRY4 pixel_r3_carry
       (.CI(1'b0),
        .CO({\y_max_r_out_reg[9] ,pixel_r3_carry_n_1,pixel_r3_carry_n_2,pixel_r3_carry_n_3}),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(NLW_pixel_r3_carry_O_UNCONNECTED[3:0]),
        .S(\val_reg[26]_srl6_i_2 ));
  CARRY4 \pixel_r3_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\x_max_r_out_reg[9] ,\pixel_r3_inferred__0/i__carry_n_1 ,\pixel_r3_inferred__0/i__carry_n_2 ,\pixel_r3_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI({1'b0,1'b0,1'b0,1'b0}),
        .O(\NLW_pixel_r3_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S(\val_reg[26]_srl6_i_2_2 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \pixel_r3_inferred__1/i__carry 
       (.CI(1'b0),
        .CO({\pixel_r3_inferred__1/i__carry_n_0 ,\pixel_r3_inferred__1/i__carry_n_1 ,\pixel_r3_inferred__1/i__carry_n_2 ,\pixel_r3_inferred__1/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI(\pixel_r3_inferred__1/i__carry__0_0 ),
        .O(\NLW_pixel_r3_inferred__1/i__carry_O_UNCONNECTED [3:0]),
        .S(\pixel_r3_inferred__1/i__carry__0_1 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \pixel_r3_inferred__1/i__carry__0 
       (.CI(\pixel_r3_inferred__1/i__carry_n_0 ),
        .CO({\NLW_pixel_r3_inferred__1/i__carry__0_CO_UNCONNECTED [3:2],\pixel_r3_inferred__1/i__carry__0_n_2 ,\pixel_r3_inferred__1/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\val_reg[26]_srl6_i_1_1 }),
        .O(\NLW_pixel_r3_inferred__1/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\val_reg[26]_srl6_i_1_2 }));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 pixel_r4_carry
       (.CI(1'b0),
        .CO({pixel_r4_carry_n_0,pixel_r4_carry_n_1,pixel_r4_carry_n_2,pixel_r4_carry_n_3}),
        .CYINIT(1'b1),
        .DI(pixel_r4_carry__0_0),
        .O(NLW_pixel_r4_carry_O_UNCONNECTED[3:0]),
        .S(pixel_r4_carry__0_1));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 pixel_r4_carry__0
       (.CI(pixel_r4_carry_n_0),
        .CO({NLW_pixel_r4_carry__0_CO_UNCONNECTED[3:2],pixel_r4_carry__0_n_2,pixel_r4_carry__0_n_3}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\val_reg[26]_srl6_i_1_0 }),
        .O(NLW_pixel_r4_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,S}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \pixel_r4_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\pixel_r4_inferred__0/i__carry_n_0 ,\pixel_r4_inferred__0/i__carry_n_1 ,\pixel_r4_inferred__0/i__carry_n_2 ,\pixel_r4_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b1),
        .DI(\pixel_r4_inferred__0/i__carry__0_0 ),
        .O(\NLW_pixel_r4_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S(\pixel_r4_inferred__0/i__carry__0_1 ));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \pixel_r4_inferred__0/i__carry__0 
       (.CI(\pixel_r4_inferred__0/i__carry_n_0 ),
        .CO({\NLW_pixel_r4_inferred__0/i__carry__0_CO_UNCONNECTED [3:2],\pixel_r4_inferred__0/i__carry__0_n_2 ,\pixel_r4_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,\val_reg[26]_srl6_i_1_5 }),
        .O(\NLW_pixel_r4_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,\val_reg[26]_srl6_i_1_6 }));
  LUT6 #(
    .INIT(64'hEAAAAAAAAAAAAAAA)) 
    \val_reg[18]_srl6_i_1 
       (.I0(Q[0]),
        .I1(\val_reg[26] ),
        .I2(\pixel_r3_inferred__1/i__carry__0_n_2 ),
        .I3(\pixel_r4_inferred__0/i__carry__0_n_2 ),
        .I4(\pixel_r2_inferred__0/i__carry__0_n_2 ),
        .I5(pixel_r4_carry__0_n_2),
        .O(\val_reg[25]_0 ));
  LUT6 #(
    .INIT(64'h2AAAAAAAAAAAAAAA)) 
    \val_reg[26]_srl6_i_1 
       (.I0(Q[0]),
        .I1(\val_reg[26] ),
        .I2(\pixel_r3_inferred__1/i__carry__0_n_2 ),
        .I3(\pixel_r4_inferred__0/i__carry__0_n_2 ),
        .I4(\pixel_r2_inferred__0/i__carry__0_n_2 ),
        .I5(pixel_r4_carry__0_n_2),
        .O(\val_reg[25] ));
endmodule

(* ORIG_REF_NAME = "erodyl" *) 
module hdmi_vga_vp_0_0_erodyl
   (\h_sync_mux[6] ,
    \v_sync_mux[6] ,
    \de_mux[6] ,
    \pix_mux[6] ,
    clk,
    p_0_in_6,
    \val_reg[1] ,
    sw,
    pixel_reg,
    de_reg);
  output \h_sync_mux[6] ;
  output \v_sync_mux[6] ;
  output \de_mux[6] ;
  output [0:0]\pix_mux[6] ;
  input clk;
  input p_0_in_6;
  input \val_reg[1] ;
  input [0:0]sw;
  input pixel_reg;
  input de_reg;

  wire clk;
  wire [19:4]de_context;
  wire [24:0]de_context__0;
  wire \de_mux[6] ;
  wire de_reg;
  wire \h_sync_mux[6] ;
  wire median_context_n_4;
  wire median_context_n_5;
  wire median_context_n_6;
  wire median_context_n_7;
  wire p_0_in_6;
  wire [0:0]\pix_mux[6] ;
  wire pixel_reg;
  wire \pixel_reg[23]_i_10_n_0 ;
  wire \pixel_reg[23]_i_11_n_0 ;
  wire \pixel_reg[23]_i_12_n_0 ;
  wire \pixel_reg[23]_i_13_n_0 ;
  wire \pixel_reg[23]_i_1_n_0 ;
  wire \pixel_reg[23]_i_4_n_0 ;
  wire [0:0]sw;
  wire \v_sync_mux[6] ;
  wire \val_reg[1] ;

  FDRE #(
    .INIT(1'b0)) 
    de_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0[12]),
        .Q(\de_mux[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    h_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(median_context_n_4),
        .Q(\h_sync_mux[6] ),
        .R(1'b0));
  hdmi_vga_vp_0_0_contextNxN median_context
       (.clk(clk),
        .de_context__0({de_context__0[24:20],de_context__0[18:15],de_context__0[13:10],de_context__0[8:5],de_context__0[3:0]}),
        .de_reg(de_reg),
        .dina({de_context[4],de_context[9],de_context[14],de_context[19]}),
        .p_0_in_6(p_0_in_6),
        .pixel_reg(pixel_reg),
        .sw(sw),
        .\val_reg[1] (median_context_n_5),
        .\val_reg[1]_0 (\val_reg[1] ),
        .\val_reg[2] (median_context_n_4),
        .\val_reg[3] (median_context_n_6),
        .\val_reg[3]_0 (median_context_n_7));
  LUT5 #(
    .INIT(32'hAEFFAE00)) 
    \pixel_reg[23]_i_1 
       (.I0(median_context_n_7),
        .I1(sw),
        .I2(median_context_n_6),
        .I3(\pixel_reg[23]_i_4_n_0 ),
        .I4(\pix_mux[6] ),
        .O(\pixel_reg[23]_i_1_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[23]_i_10 
       (.I0(de_context__0[3]),
        .I1(de_context[4]),
        .I2(de_context__0[1]),
        .I3(de_context__0[2]),
        .I4(de_context__0[6]),
        .I5(de_context__0[5]),
        .O(\pixel_reg[23]_i_10_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[23]_i_11 
       (.I0(de_context__0[21]),
        .I1(de_context__0[22]),
        .I2(de_context[19]),
        .I3(de_context__0[20]),
        .I4(de_context__0[24]),
        .I5(de_context__0[23]),
        .O(\pixel_reg[23]_i_11_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[23]_i_12 
       (.I0(de_context__0[15]),
        .I1(de_context__0[16]),
        .I2(de_context__0[13]),
        .I3(de_context[14]),
        .I4(de_context__0[18]),
        .I5(de_context__0[17]),
        .O(\pixel_reg[23]_i_12_n_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[23]_i_13 
       (.I0(de_context[9]),
        .I1(de_context__0[10]),
        .I2(de_context__0[7]),
        .I3(de_context__0[8]),
        .I4(de_context__0[12]),
        .I5(de_context__0[11]),
        .O(\pixel_reg[23]_i_13_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \pixel_reg[23]_i_4 
       (.I0(\pixel_reg[23]_i_10_n_0 ),
        .I1(\pixel_reg[23]_i_11_n_0 ),
        .I2(\pixel_reg[23]_i_12_n_0 ),
        .I3(de_context__0[0]),
        .I4(\pixel_reg[23]_i_13_n_0 ),
        .O(\pixel_reg[23]_i_4_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pixel_reg_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg[23]_i_1_n_0 ),
        .Q(\pix_mux[6] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    v_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(median_context_n_5),
        .Q(\v_sync_mux[6] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "erodyl" *) 
module hdmi_vga_vp_0_0_erodyl__xdcDup__1
   (de_reg,
    pixel_reg,
    p_0_in_6,
    \val_reg[1] ,
    \val_reg[3] ,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    \val_reg[3]_3 ,
    \val_reg[0] ,
    \val_reg[0]_0 ,
    clk,
    dina,
    \pixel_reg_reg[0]_0 ,
    p_0_in0_in,
    p_0_in,
    sw,
    p_0_in1_in,
    \pixel_reg_reg[0]_1 );
  output de_reg;
  output pixel_reg;
  output p_0_in_6;
  output \val_reg[1] ;
  output \val_reg[3] ;
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output \val_reg[3]_3 ;
  output \val_reg[0] ;
  output [0:0]\val_reg[0]_0 ;
  input clk;
  input [3:0]dina;
  input \pixel_reg_reg[0]_0 ;
  input p_0_in0_in;
  input p_0_in;
  input [0:0]sw;
  input p_0_in1_in;
  input \pixel_reg_reg[0]_1 ;

  wire clk;
  wire [12:12]de_context;
  wire de_reg;
  wire [3:0]dina;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire p_0_in_6;
  wire pixel_reg;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire [0:0]sw;
  wire \val_reg[0] ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1] ;
  wire \val_reg[3] ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;
  wire \val_reg[3]_3 ;

  FDRE #(
    .INIT(1'b0)) 
    de_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_context),
        .Q(de_reg),
        .R(1'b0));
  hdmi_vga_vp_0_0_contextNxN__xdcDup__2 median_context
       (.clk(clk),
        .dina(dina),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in_6(p_0_in_6),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0]_1 ),
        .sw(sw),
        .\val_reg[0] (\val_reg[0] ),
        .\val_reg[0]_0 (de_context),
        .\val_reg[0]_1 (\val_reg[0]_0 ),
        .\val_reg[1] (\val_reg[1] ),
        .\val_reg[3] (\val_reg[3] ),
        .\val_reg[3]_0 (\val_reg[3]_0 ),
        .\val_reg[3]_1 (\val_reg[3]_1 ),
        .\val_reg[3]_2 (\val_reg[3]_2 ),
        .\val_reg[3]_3 (\val_reg[3]_3 ));
  FDRE #(
    .INIT(1'b0)) 
    \pixel_reg_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg_reg[0]_0 ),
        .Q(pixel_reg),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "get_circle" *) 
module hdmi_vga_vp_0_0_get_circle
   (\val_reg[0] ,
    qspo,
    \pixel_reg_reg[0] ,
    Q,
    \x_error_r_reg[11]_0 ,
    clk,
    CE,
    \y_error_r_reg[11]_0 ,
    \y_error_r_reg[11]_1 ,
    \pix_mux[5] ,
    \pix_mux[6] ,
    \pix_reg_reg[7] ,
    \pix_reg_reg[7]_0 ,
    \pix_reg_reg[7]_1 );
  output \val_reg[0] ;
  output [0:0]qspo;
  output \pixel_reg_reg[0] ;
  input [10:0]Q;
  input [10:0]\x_error_r_reg[11]_0 ;
  input clk;
  input CE;
  input [10:0]\y_error_r_reg[11]_0 ;
  input [10:0]\y_error_r_reg[11]_1 ;
  input [0:0]\pix_mux[5] ;
  input [0:0]\pix_mux[6] ;
  input \pix_reg_reg[7] ;
  input \pix_reg_reg[7]_0 ;
  input \pix_reg_reg[7]_1 ;

  wire CE;
  wire [10:0]Q;
  wire clk;
  wire i__carry__0_i_1__2_n_0;
  wire i__carry__0_i_1__3_n_0;
  wire i__carry__0_i_2__2_n_0;
  wire i__carry__0_i_2__3_n_0;
  wire i__carry__0_i_3__2_n_0;
  wire i__carry__0_i_3__3_n_0;
  wire i__carry__0_i_4__2_n_0;
  wire i__carry__0_i_4__3_n_0;
  wire i__carry_i_1__3_n_0;
  wire i__carry_i_1__4_n_0;
  wire i__carry_i_2__3_n_0;
  wire i__carry_i_2__4_n_0;
  wire i__carry_i_3__3_n_0;
  wire i__carry_i_3__4_n_0;
  wire i__carry_i_4__3_n_0;
  wire i__carry_i_4__4_n_0;
  wire i__carry_i_5__2_n_0;
  wire i__carry_i_5__3_n_0;
  wire i__carry_i_6__2_n_0;
  wire i__carry_i_6__3_n_0;
  wire i__carry_i_7__2_n_0;
  wire i__carry_i_7__3_n_0;
  wire i__carry_i_8__2_n_0;
  wire i__carry_i_8__3_n_0;
  wire [5:0]lut_address;
  wire [0:0]\pix_mux[5] ;
  wire [0:0]\pix_mux[6] ;
  wire \pix_reg_reg[7] ;
  wire \pix_reg_reg[7]_0 ;
  wire \pix_reg_reg[7]_1 ;
  wire \pixel_reg_reg[0] ;
  wire [0:0]qspo;
  wire \val_reg[0] ;
  wire [11:0]x_error;
  wire [11:0]x_error_r;
  wire x_error_r0;
  wire x_error_r1;
  wire x_error_r11_in;
  wire x_error_r1_carry__0_i_1_n_0;
  wire x_error_r1_carry__0_i_2_n_0;
  wire x_error_r1_carry_i_1_n_0;
  wire x_error_r1_carry_i_2_n_0;
  wire x_error_r1_carry_i_3_n_0;
  wire x_error_r1_carry_i_4_n_0;
  wire x_error_r1_carry_i_5_n_0;
  wire x_error_r1_carry_i_6_n_0;
  wire x_error_r1_carry_i_7_n_0;
  wire x_error_r1_carry_i_8_n_0;
  wire x_error_r1_carry_n_0;
  wire x_error_r1_carry_n_1;
  wire x_error_r1_carry_n_2;
  wire x_error_r1_carry_n_3;
  wire \x_error_r1_inferred__0/i__carry__0_n_3 ;
  wire \x_error_r1_inferred__0/i__carry_n_0 ;
  wire \x_error_r1_inferred__0/i__carry_n_1 ;
  wire \x_error_r1_inferred__0/i__carry_n_2 ;
  wire \x_error_r1_inferred__0/i__carry_n_3 ;
  wire [10:0]\x_error_r_reg[11]_0 ;
  wire [11:0]y_error;
  wire [11:0]y_error_r;
  wire y_error_r0;
  wire y_error_r1;
  wire y_error_r10_in;
  wire y_error_r1_carry__0_i_1_n_0;
  wire y_error_r1_carry__0_i_2_n_0;
  wire y_error_r1_carry_i_1_n_0;
  wire y_error_r1_carry_i_2_n_0;
  wire y_error_r1_carry_i_3_n_0;
  wire y_error_r1_carry_i_4_n_0;
  wire y_error_r1_carry_i_5_n_0;
  wire y_error_r1_carry_i_6_n_0;
  wire y_error_r1_carry_i_7_n_0;
  wire y_error_r1_carry_i_8_n_0;
  wire y_error_r1_carry_n_0;
  wire y_error_r1_carry_n_1;
  wire y_error_r1_carry_n_2;
  wire y_error_r1_carry_n_3;
  wire \y_error_r1_inferred__0/i__carry__0_n_3 ;
  wire \y_error_r1_inferred__0/i__carry_n_0 ;
  wire \y_error_r1_inferred__0/i__carry_n_1 ;
  wire \y_error_r1_inferred__0/i__carry_n_2 ;
  wire \y_error_r1_inferred__0/i__carry_n_3 ;
  wire [10:0]\y_error_r_reg[11]_0 ;
  wire [10:0]\y_error_r_reg[11]_1 ;
  wire [11:3]NLW_add3_x_S_UNCONNECTED;
  wire [11:3]NLW_add3_y_S_UNCONNECTED;
  wire [3:0]NLW_x_error_r1_carry_O_UNCONNECTED;
  wire [3:1]NLW_x_error_r1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_x_error_r1_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_x_error_r1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_x_error_r1_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_x_error_r1_inferred__0/i__carry__0_O_UNCONNECTED ;
  wire [3:0]NLW_y_error_r1_carry_O_UNCONNECTED;
  wire [3:1]NLW_y_error_r1_carry__0_CO_UNCONNECTED;
  wire [3:0]NLW_y_error_r1_carry__0_O_UNCONNECTED;
  wire [3:0]\NLW_y_error_r1_inferred__0/i__carry_O_UNCONNECTED ;
  wire [3:2]\NLW_y_error_r1_inferred__0/i__carry__0_CO_UNCONNECTED ;
  wire [3:0]\NLW_y_error_r1_inferred__0/i__carry__0_O_UNCONNECTED ;

  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_add3 add3_x
       (.A(x_error_r),
        .CE(\val_reg[0] ),
        .CLK(clk),
        .S({NLW_add3_x_S_UNCONNECTED[11:3],lut_address[2:0]}));
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_add3_HD244 add3_y
       (.A(y_error_r),
        .CE(\val_reg[0] ),
        .CLK(clk),
        .S({NLW_add3_y_S_UNCONNECTED[11:3],lut_address[5:3]}));
  (* x_core_info = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_1 circle_mem
       (.a(lut_address),
        .clk(clk),
        .qspo(qspo));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1__2
       (.I0(x_error[11]),
        .I1(x_error[10]),
        .O(i__carry__0_i_1__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry__0_i_1__3
       (.I0(y_error[11]),
        .I1(y_error[10]),
        .O(i__carry__0_i_1__3_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry__0_i_2__2
       (.I0(x_error[8]),
        .I1(x_error[9]),
        .O(i__carry__0_i_2__2_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry__0_i_2__3
       (.I0(y_error[8]),
        .I1(y_error[9]),
        .O(i__carry__0_i_2__3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry__0_i_3__2
       (.I0(x_error[10]),
        .I1(x_error[11]),
        .O(i__carry__0_i_3__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry__0_i_3__3
       (.I0(y_error[10]),
        .I1(y_error[11]),
        .O(i__carry__0_i_3__3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry__0_i_4__2
       (.I0(x_error[8]),
        .I1(x_error[9]),
        .O(i__carry__0_i_4__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry__0_i_4__3
       (.I0(y_error[8]),
        .I1(y_error[9]),
        .O(i__carry__0_i_4__3_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_1__3
       (.I0(x_error[6]),
        .I1(x_error[7]),
        .O(i__carry_i_1__3_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_1__4
       (.I0(y_error[6]),
        .I1(y_error[7]),
        .O(i__carry_i_1__4_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_2__3
       (.I0(x_error[4]),
        .I1(x_error[5]),
        .O(i__carry_i_2__3_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_2__4
       (.I0(y_error[4]),
        .I1(y_error[5]),
        .O(i__carry_i_2__4_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_3__3
       (.I0(x_error[2]),
        .I1(x_error[3]),
        .O(i__carry_i_3__3_n_0));
  LUT2 #(
    .INIT(4'h7)) 
    i__carry_i_3__4
       (.I0(y_error[2]),
        .I1(y_error[3]),
        .O(i__carry_i_3__4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_4__3
       (.I0(x_error[0]),
        .I1(x_error[1]),
        .O(i__carry_i_4__3_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    i__carry_i_4__4
       (.I0(y_error[0]),
        .I1(y_error[1]),
        .O(i__carry_i_4__4_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_5__2
       (.I0(x_error[6]),
        .I1(x_error[7]),
        .O(i__carry_i_5__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_5__3
       (.I0(y_error[6]),
        .I1(y_error[7]),
        .O(i__carry_i_5__3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_6__2
       (.I0(x_error[4]),
        .I1(x_error[5]),
        .O(i__carry_i_6__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_6__3
       (.I0(y_error[4]),
        .I1(y_error[5]),
        .O(i__carry_i_6__3_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_7__2
       (.I0(x_error[2]),
        .I1(x_error[3]),
        .O(i__carry_i_7__2_n_0));
  LUT2 #(
    .INIT(4'h8)) 
    i__carry_i_7__3
       (.I0(y_error[2]),
        .I1(y_error[3]),
        .O(i__carry_i_7__3_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_8__2
       (.I0(x_error[0]),
        .I1(x_error[1]),
        .O(i__carry_i_8__2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    i__carry_i_8__3
       (.I0(y_error[0]),
        .I1(y_error[1]),
        .O(i__carry_i_8__3_n_0));
  LUT6 #(
    .INIT(64'h0000AAAACCCCFFF0)) 
    \pix_reg[7]_i_2 
       (.I0(\pix_mux[5] ),
        .I1(\pix_mux[6] ),
        .I2(qspo),
        .I3(\pix_reg_reg[7] ),
        .I4(\pix_reg_reg[7]_0 ),
        .I5(\pix_reg_reg[7]_1 ),
        .O(\pixel_reg_reg[0] ));
  hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized3 sub_delay
       (.CE(CE),
        .clk(clk),
        .\val_reg[0] (\val_reg[0] ));
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_sub_cordinates sub_x
       (.A(Q),
        .B(\x_error_r_reg[11]_0 ),
        .CE(CE),
        .CLK(clk),
        .S(x_error));
  (* x_core_info = "c_addsub_v12_0_14,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_sub_cordinates_HD245 sub_y
       (.A(\y_error_r_reg[11]_0 ),
        .B(\y_error_r_reg[11]_1 ),
        .CE(CE),
        .CLK(clk),
        .S(y_error));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 x_error_r1_carry
       (.CI(1'b0),
        .CO({x_error_r1_carry_n_0,x_error_r1_carry_n_1,x_error_r1_carry_n_2,x_error_r1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({x_error_r1_carry_i_1_n_0,x_error_r1_carry_i_2_n_0,x_error_r1_carry_i_3_n_0,x_error_r1_carry_i_4_n_0}),
        .O(NLW_x_error_r1_carry_O_UNCONNECTED[3:0]),
        .S({x_error_r1_carry_i_5_n_0,x_error_r1_carry_i_6_n_0,x_error_r1_carry_i_7_n_0,x_error_r1_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 x_error_r1_carry__0
       (.CI(x_error_r1_carry_n_0),
        .CO({NLW_x_error_r1_carry__0_CO_UNCONNECTED[3:1],x_error_r1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,x_error_r1_carry__0_i_1_n_0}),
        .O(NLW_x_error_r1_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,x_error_r1_carry__0_i_2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    x_error_r1_carry__0_i_1
       (.I0(x_error[10]),
        .I1(x_error[11]),
        .O(x_error_r1_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    x_error_r1_carry__0_i_2
       (.I0(x_error[10]),
        .I1(x_error[11]),
        .O(x_error_r1_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    x_error_r1_carry_i_1
       (.I0(x_error[8]),
        .I1(x_error[9]),
        .O(x_error_r1_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    x_error_r1_carry_i_2
       (.I0(x_error[6]),
        .I1(x_error[7]),
        .O(x_error_r1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    x_error_r1_carry_i_3
       (.I0(x_error[4]),
        .I1(x_error[5]),
        .O(x_error_r1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    x_error_r1_carry_i_4
       (.I0(x_error[2]),
        .I1(x_error[3]),
        .O(x_error_r1_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    x_error_r1_carry_i_5
       (.I0(x_error[8]),
        .I1(x_error[9]),
        .O(x_error_r1_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    x_error_r1_carry_i_6
       (.I0(x_error[6]),
        .I1(x_error[7]),
        .O(x_error_r1_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    x_error_r1_carry_i_7
       (.I0(x_error[4]),
        .I1(x_error[5]),
        .O(x_error_r1_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    x_error_r1_carry_i_8
       (.I0(x_error[2]),
        .I1(x_error[3]),
        .O(x_error_r1_carry_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \x_error_r1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\x_error_r1_inferred__0/i__carry_n_0 ,\x_error_r1_inferred__0/i__carry_n_1 ,\x_error_r1_inferred__0/i__carry_n_2 ,\x_error_r1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__3_n_0,i__carry_i_2__3_n_0,i__carry_i_3__3_n_0,i__carry_i_4__3_n_0}),
        .O(\NLW_x_error_r1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__2_n_0,i__carry_i_6__2_n_0,i__carry_i_7__2_n_0,i__carry_i_8__2_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \x_error_r1_inferred__0/i__carry__0 
       (.CI(\x_error_r1_inferred__0/i__carry_n_0 ),
        .CO({\NLW_x_error_r1_inferred__0/i__carry__0_CO_UNCONNECTED [3:2],x_error_r11_in,\x_error_r1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,i__carry__0_i_1__2_n_0,i__carry__0_i_2__2_n_0}),
        .O(\NLW_x_error_r1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,i__carry__0_i_3__2_n_0,i__carry__0_i_4__2_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    \x_error_r[11]_i_1 
       (.I0(x_error_r11_in),
        .I1(x_error_r1),
        .O(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[0]),
        .Q(x_error_r[0]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[10]),
        .Q(x_error_r[10]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[11]),
        .Q(x_error_r[11]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[1]),
        .Q(x_error_r[1]),
        .R(x_error_r0));
  FDSE #(
    .INIT(1'b0)) 
    \x_error_r_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[2]),
        .Q(x_error_r[2]),
        .S(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[3]),
        .Q(x_error_r[3]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[4]),
        .Q(x_error_r[4]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[5]),
        .Q(x_error_r[5]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[6]),
        .Q(x_error_r[6]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[7]),
        .Q(x_error_r[7]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[8]),
        .Q(x_error_r[8]),
        .R(x_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \x_error_r_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(x_error[9]),
        .Q(x_error_r[9]),
        .R(x_error_r0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 y_error_r1_carry
       (.CI(1'b0),
        .CO({y_error_r1_carry_n_0,y_error_r1_carry_n_1,y_error_r1_carry_n_2,y_error_r1_carry_n_3}),
        .CYINIT(1'b0),
        .DI({y_error_r1_carry_i_1_n_0,y_error_r1_carry_i_2_n_0,y_error_r1_carry_i_3_n_0,y_error_r1_carry_i_4_n_0}),
        .O(NLW_y_error_r1_carry_O_UNCONNECTED[3:0]),
        .S({y_error_r1_carry_i_5_n_0,y_error_r1_carry_i_6_n_0,y_error_r1_carry_i_7_n_0,y_error_r1_carry_i_8_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 y_error_r1_carry__0
       (.CI(y_error_r1_carry_n_0),
        .CO({NLW_y_error_r1_carry__0_CO_UNCONNECTED[3:1],y_error_r1}),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,1'b0,y_error_r1_carry__0_i_1_n_0}),
        .O(NLW_y_error_r1_carry__0_O_UNCONNECTED[3:0]),
        .S({1'b0,1'b0,1'b0,y_error_r1_carry__0_i_2_n_0}));
  LUT2 #(
    .INIT(4'h2)) 
    y_error_r1_carry__0_i_1
       (.I0(y_error[10]),
        .I1(y_error[11]),
        .O(y_error_r1_carry__0_i_1_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    y_error_r1_carry__0_i_2
       (.I0(y_error[10]),
        .I1(y_error[11]),
        .O(y_error_r1_carry__0_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    y_error_r1_carry_i_1
       (.I0(y_error[8]),
        .I1(y_error[9]),
        .O(y_error_r1_carry_i_1_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    y_error_r1_carry_i_2
       (.I0(y_error[6]),
        .I1(y_error[7]),
        .O(y_error_r1_carry_i_2_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    y_error_r1_carry_i_3
       (.I0(y_error[4]),
        .I1(y_error[5]),
        .O(y_error_r1_carry_i_3_n_0));
  LUT2 #(
    .INIT(4'hE)) 
    y_error_r1_carry_i_4
       (.I0(y_error[2]),
        .I1(y_error[3]),
        .O(y_error_r1_carry_i_4_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    y_error_r1_carry_i_5
       (.I0(y_error[8]),
        .I1(y_error[9]),
        .O(y_error_r1_carry_i_5_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    y_error_r1_carry_i_6
       (.I0(y_error[6]),
        .I1(y_error[7]),
        .O(y_error_r1_carry_i_6_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    y_error_r1_carry_i_7
       (.I0(y_error[4]),
        .I1(y_error[5]),
        .O(y_error_r1_carry_i_7_n_0));
  LUT2 #(
    .INIT(4'h1)) 
    y_error_r1_carry_i_8
       (.I0(y_error[2]),
        .I1(y_error[3]),
        .O(y_error_r1_carry_i_8_n_0));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \y_error_r1_inferred__0/i__carry 
       (.CI(1'b0),
        .CO({\y_error_r1_inferred__0/i__carry_n_0 ,\y_error_r1_inferred__0/i__carry_n_1 ,\y_error_r1_inferred__0/i__carry_n_2 ,\y_error_r1_inferred__0/i__carry_n_3 }),
        .CYINIT(1'b0),
        .DI({i__carry_i_1__4_n_0,i__carry_i_2__4_n_0,i__carry_i_3__4_n_0,i__carry_i_4__4_n_0}),
        .O(\NLW_y_error_r1_inferred__0/i__carry_O_UNCONNECTED [3:0]),
        .S({i__carry_i_5__3_n_0,i__carry_i_6__3_n_0,i__carry_i_7__3_n_0,i__carry_i_8__3_n_0}));
  (* COMPARATOR_THRESHOLD = "11" *) 
  CARRY4 \y_error_r1_inferred__0/i__carry__0 
       (.CI(\y_error_r1_inferred__0/i__carry_n_0 ),
        .CO({\NLW_y_error_r1_inferred__0/i__carry__0_CO_UNCONNECTED [3:2],y_error_r10_in,\y_error_r1_inferred__0/i__carry__0_n_3 }),
        .CYINIT(1'b0),
        .DI({1'b0,1'b0,i__carry__0_i_1__3_n_0,i__carry__0_i_2__3_n_0}),
        .O(\NLW_y_error_r1_inferred__0/i__carry__0_O_UNCONNECTED [3:0]),
        .S({1'b0,1'b0,i__carry__0_i_3__3_n_0,i__carry__0_i_4__3_n_0}));
  LUT2 #(
    .INIT(4'hE)) 
    \y_error_r[11]_i_1 
       (.I0(y_error_r10_in),
        .I1(y_error_r1),
        .O(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[0]),
        .Q(y_error_r[0]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[10]),
        .Q(y_error_r[10]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[11]),
        .Q(y_error_r[11]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[1]),
        .Q(y_error_r[1]),
        .R(y_error_r0));
  FDSE #(
    .INIT(1'b0)) 
    \y_error_r_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[2]),
        .Q(y_error_r[2]),
        .S(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[3]),
        .Q(y_error_r[3]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[4]),
        .Q(y_error_r[4]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[5]),
        .Q(y_error_r[5]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[6]),
        .Q(y_error_r[6]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[7]),
        .Q(y_error_r[7]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[8]),
        .Q(y_error_r[8]),
        .R(y_error_r0));
  FDRE #(
    .INIT(1'b0)) 
    \y_error_r_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(y_error[9]),
        .Q(y_error_r[9]),
        .R(y_error_r0));
endmodule

(* ORIG_REF_NAME = "mass_centroid" *) 
module hdmi_vga_vp_0_0_mass_centroid
   (prev_h_sync,
    prev_v_sync,
    \de_mux[4] ,
    i0,
    i0_0,
    \pixel_reg_reg[0] ,
    \val_reg[18] ,
    \val_reg[26] ,
    \v_sync_mux[4] ,
    \h_sync_mux[4] ,
    clk,
    \h_sync_mux[1] ,
    \v_sync_mux[1] ,
    eof,
    \pix_mux[5] ,
    \pix_mux[6] ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[15]_0 ,
    E,
    \dividend_reg_reg[31] ,
    D,
    SR,
    \y_pos_reg[10] ,
    \y_pos_reg[10]_0 );
  output prev_h_sync;
  output prev_v_sync;
  output \de_mux[4] ;
  output i0;
  output i0_0;
  output \pixel_reg_reg[0] ;
  output \val_reg[18] ;
  output \val_reg[26] ;
  output \v_sync_mux[4] ;
  output \h_sync_mux[4] ;
  input clk;
  input \h_sync_mux[1] ;
  input \v_sync_mux[1] ;
  input eof;
  input [0:0]\pix_mux[5] ;
  input [0:0]\pix_mux[6] ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[15]_0 ;
  input [0:0]E;
  input [0:0]\dividend_reg_reg[31] ;
  input [1:0]D;
  input [0:0]SR;
  input [0:0]\y_pos_reg[10] ;
  input [0:0]\y_pos_reg[10]_0 ;

  wire [1:0]D;
  wire [0:0]E;
  wire [0:0]SR;
  wire clk;
  wire \de_mux[4] ;
  wire [0:0]\dividend_reg_reg[31] ;
  wire eof;
  wire \h_sync_mux[1] ;
  wire \h_sync_mux[4] ;
  wire i0;
  wire i0_0;
  wire [0:0]\pix_mux[5] ;
  wire [0:0]\pix_mux[6] ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[15]_0 ;
  wire \pixel_reg_reg[0] ;
  wire prev_h_sync;
  wire prev_v_sync;
  wire \v_sync_mux[1] ;
  wire \v_sync_mux[4] ;
  wire \val_reg[18] ;
  wire \val_reg[26] ;
  wire [0:0]\y_pos_reg[10] ;
  wire [0:0]\y_pos_reg[10]_0 ;

  hdmi_vga_vp_0_0_centroid centroid_ent
       (.D(D),
        .E(E),
        .\FSM_onehot_state_reg[0] (i0),
        .\FSM_onehot_state_reg[0]_0 (i0_0),
        .SR(SR),
        .clk(clk),
        .\de_mux[4] (\de_mux[4] ),
        .\dividend_reg_reg[31] (\dividend_reg_reg[31] ),
        .eof(eof),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\h_sync_mux[4] (\h_sync_mux[4] ),
        .\pix_mux[5] (\pix_mux[5] ),
        .\pix_mux[6] (\pix_mux[6] ),
        .\pix_reg_reg[15] (\pix_reg_reg[15] ),
        .\pix_reg_reg[15]_0 (\pix_reg_reg[15]_0 ),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0] ),
        .prev_h_sync(prev_h_sync),
        .prev_v_sync(prev_v_sync),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\v_sync_mux[4] (\v_sync_mux[4] ),
        .\val_reg[18] (\val_reg[18] ),
        .\val_reg[26] (\val_reg[26] ),
        .\y_pos_reg[10] (\y_pos_reg[10] ),
        .\y_pos_reg[10]_0 (\y_pos_reg[10]_0 ));
endmodule

(* ORIG_REF_NAME = "median_filter" *) 
module hdmi_vga_vp_0_0_median_filter
   (\val_reg[3] ,
    dina,
    \pix_mux[5] ,
    p_0_in,
    p_0_in0_in,
    p_0_in1_in,
    de_reg_reg_0,
    v_sync_reg_reg_0,
    h_sync_reg_reg_0,
    \val_reg[0] ,
    sw_0_sp_1,
    clk,
    D,
    \v_sync_mux[1] ,
    \h_sync_mux[1] ,
    \pixel_reg_reg[0]_0 ,
    \pixel_reg_reg[0]_1 ,
    \pixel_reg_reg[0]_2 ,
    \pixel_reg_reg[0]_3 ,
    \pixel_reg_reg[0]_4 ,
    \de_mux[4] ,
    sw,
    \v_sync_mux[4] ,
    \h_sync_mux[4] ,
    de_context,
    \pixel_reg_reg[0]_5 ,
    pixel_reg);
  output [0:0]\val_reg[3] ;
  output [2:0]dina;
  output [0:0]\pix_mux[5] ;
  output p_0_in;
  output p_0_in0_in;
  output p_0_in1_in;
  output de_reg_reg_0;
  output v_sync_reg_reg_0;
  output h_sync_reg_reg_0;
  output \val_reg[0] ;
  output sw_0_sp_1;
  input clk;
  input [1:0]D;
  input \v_sync_mux[1] ;
  input \h_sync_mux[1] ;
  input \pixel_reg_reg[0]_0 ;
  input \pixel_reg_reg[0]_1 ;
  input \pixel_reg_reg[0]_2 ;
  input \pixel_reg_reg[0]_3 ;
  input \pixel_reg_reg[0]_4 ;
  input \de_mux[4] ;
  input [2:0]sw;
  input \v_sync_mux[4] ;
  input \h_sync_mux[4] ;
  input [0:0]de_context;
  input \pixel_reg_reg[0]_5 ;
  input pixel_reg;

  wire [1:0]D;
  wire clk;
  wire [0:0]de_context;
  wire [12:12]de_context__0;
  wire \de_mux[4] ;
  wire \de_mux[5] ;
  wire de_reg_reg_0;
  wire [2:0]dina;
  wire [4:0]fin_sum;
  wire \h_sync_mux[1] ;
  wire \h_sync_mux[4] ;
  wire \h_sync_mux[5] ;
  wire h_sync_reg_reg_0;
  wire median_context_n_10;
  wire median_context_n_11;
  wire median_context_n_12;
  wire median_context_n_13;
  wire median_context_n_14;
  wire median_context_n_15;
  wire median_context_n_8;
  wire median_context_n_9;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire [0:0]\pix_mux[5] ;
  wire pixel_reg;
  wire pixel_reg0_n_0;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire \pixel_reg_reg[0]_2 ;
  wire \pixel_reg_reg[0]_3 ;
  wire \pixel_reg_reg[0]_4 ;
  wire \pixel_reg_reg[0]_5 ;
  wire [2:0]sw;
  wire sw_0_sn_1;
  wire \v_sync_mux[1] ;
  wire \v_sync_mux[4] ;
  wire \v_sync_mux[5] ;
  wire v_sync_reg_reg_0;
  wire \val_reg[0] ;
  wire [0:0]\val_reg[3] ;

  assign sw_0_sp_1 = sw_0_sn_1;
  LUT5 #(
    .INIT(32'h0000A0C0)) 
    de_reg_i_3
       (.I0(\de_mux[5] ),
        .I1(\de_mux[4] ),
        .I2(sw[2]),
        .I3(sw[0]),
        .I4(sw[1]),
        .O(de_reg_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    de_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(\de_mux[5] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fin_sum_reg[0] 
       (.C(clk),
        .CE(median_context_n_15),
        .D(median_context_n_14),
        .Q(fin_sum[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fin_sum_reg[1] 
       (.C(clk),
        .CE(median_context_n_15),
        .D(median_context_n_13),
        .Q(fin_sum[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fin_sum_reg[2] 
       (.C(clk),
        .CE(median_context_n_15),
        .D(median_context_n_12),
        .Q(fin_sum[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fin_sum_reg[3] 
       (.C(clk),
        .CE(median_context_n_15),
        .D(median_context_n_11),
        .Q(fin_sum[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \fin_sum_reg[4] 
       (.C(clk),
        .CE(median_context_n_15),
        .D(median_context_n_10),
        .Q(fin_sum[4]),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000A0C0)) 
    h_sync_reg_i_3
       (.I0(\h_sync_mux[5] ),
        .I1(\h_sync_mux[4] ),
        .I2(sw[2]),
        .I3(sw[0]),
        .I4(sw[1]),
        .O(h_sync_reg_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    h_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(median_context_n_8),
        .Q(\h_sync_mux[5] ),
        .R(1'b0));
  hdmi_vga_vp_0_0_contextNxN__xdcDup__1 median_context
       (.D(D),
        .E(median_context_n_15),
        .clk(clk),
        .de_context(de_context),
        .dina({\val_reg[3] ,dina}),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .pixel_reg(pixel_reg),
        .\pixel_reg_reg[0] (\pixel_reg_reg[0]_0 ),
        .\pixel_reg_reg[0]_0 (\pixel_reg_reg[0]_1 ),
        .\pixel_reg_reg[0]_1 (\pixel_reg_reg[0]_2 ),
        .\pixel_reg_reg[0]_2 (\pixel_reg_reg[0]_3 ),
        .\pixel_reg_reg[0]_3 (\pixel_reg_reg[0]_4 ),
        .\pixel_reg_reg[0]_4 (\pixel_reg_reg[0]_5 ),
        .sw(sw[0]),
        .sw_0_sp_1(sw_0_sn_1),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\val_reg[0] (de_context__0),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[1] (median_context_n_9),
        .\val_reg[2] (median_context_n_8),
        .\val_reg[3] (p_0_in),
        .\val_reg[3]_0 (p_0_in0_in),
        .\val_reg[3]_1 (p_0_in1_in),
        .\val_reg[3]_2 ({median_context_n_10,median_context_n_11,median_context_n_12,median_context_n_13,median_context_n_14}));
  LUT5 #(
    .INIT(32'hEEEAAAAA)) 
    pixel_reg0
       (.I0(fin_sum[4]),
        .I1(fin_sum[3]),
        .I2(fin_sum[0]),
        .I3(fin_sum[1]),
        .I4(fin_sum[2]),
        .O(pixel_reg0_n_0));
  FDRE #(
    .INIT(1'b0)) 
    \pixel_reg_reg[0] 
       (.C(clk),
        .CE(median_context_n_15),
        .D(pixel_reg0_n_0),
        .Q(\pix_mux[5] ),
        .R(1'b0));
  LUT5 #(
    .INIT(32'h0000A0C0)) 
    v_sync_reg_i_3
       (.I0(\v_sync_mux[5] ),
        .I1(\v_sync_mux[4] ),
        .I2(sw[2]),
        .I3(sw[0]),
        .I4(sw[1]),
        .O(v_sync_reg_reg_0));
  FDRE #(
    .INIT(1'b0)) 
    v_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(median_context_n_9),
        .Q(\v_sync_mux[5] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "moment" *) 
module hdmi_vga_vp_0_0_moment
   (Q,
    \val_reg[31] ,
    eof,
    E,
    clk);
  output [31:0]Q;
  input [10:0]\val_reg[31] ;
  input eof;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [31:0]Q;
  wire clk;
  wire eof;
  wire [10:0]\val_reg[31] ;

  hdmi_vga_vp_0_0_accum moment_accum
       (.E(E),
        .Q(Q),
        .clk(clk),
        .eof(eof),
        .\val_reg[31] (\val_reg[31] ));
endmodule

(* ORIG_REF_NAME = "moment" *) 
module hdmi_vga_vp_0_0_moment__xdcDup__1
   (Q,
    eof,
    E,
    clk);
  output [19:0]Q;
  input eof;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [19:0]Q;
  wire clk;
  wire eof;

  hdmi_vga_vp_0_0_accum__xdcDup__1 moment_accum
       (.E(E),
        .Q(Q),
        .clk(clk),
        .eof(eof));
endmodule

(* ORIG_REF_NAME = "moment" *) 
module hdmi_vga_vp_0_0_moment__xdcDup__2
   (\val_reg[31] ,
    Q,
    eof,
    E,
    clk);
  output [31:0]\val_reg[31] ;
  input [10:0]Q;
  input eof;
  input [0:0]E;
  input clk;

  wire [0:0]E;
  wire [10:0]Q;
  wire clk;
  wire eof;
  wire [31:0]\val_reg[31] ;

  hdmi_vga_vp_0_0_accum__xdcDup__2 moment_accum
       (.E(E),
        .Q(Q),
        .clk(clk),
        .eof(eof),
        .\val_reg[31] (\val_reg[31] ));
endmodule

(* CHECK_LICENSE_TYPE = "mult_32_20_lm,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mult_32_20_lm" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_mult_32_20_lm
   (CLK,
    A,
    B,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [31:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [19:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [51:0]P;

  wire [31:0]A;
  wire [19:0]B;
  wire CLK;
  wire [51:0]P;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  (* C_A_TYPE = "1" *) 
  (* C_A_WIDTH = "32" *) 
  (* C_B_TYPE = "1" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "20" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "4" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "51" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__parameterized1 U0
       (.A(A),
        .B(B),
        .CE(1'b1),
        .CLK(CLK),
        .P(P),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "mult_32_20_lm,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "mult_32_20_lm" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_mult_32_20_lm__2
   (CLK,
    A,
    B,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [31:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [19:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [51:0]P;

  wire [31:0]A;
  wire [19:0]B;
  wire CLK;
  wire [51:0]P;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  (* C_A_TYPE = "1" *) 
  (* C_A_WIDTH = "32" *) 
  (* C_B_TYPE = "1" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "20" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "0" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "4" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "51" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__parameterized1__2 U0
       (.A(A),
        .B(B),
        .CE(1'b1),
        .CLK(CLK),
        .P(P),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b1,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__1
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__1 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b0,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__2
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__2 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__3
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__3 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b0,1'b0,1'b0,1'b0,1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b1,1'b1,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__4
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__4 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b1,1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b1}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__5
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__5 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b1,1'b1,1'b0,1'b1,1'b0,1'b1,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__6
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__6 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__7
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__7 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b0,1'b1,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* CHECK_LICENSE_TYPE = "multiply,mult_gen_v12_0_18,{}" *) (* DowngradeIPIdentifiedWarnings = "yes" *) (* ORIG_REF_NAME = "multiply" *) 
(* X_CORE_INFO = "mult_gen_v12_0_18,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_multiply__8
   (CLK,
    A,
    B,
    CE,
    P);
  (* X_INTERFACE_INFO = "xilinx.com:signal:clock:1.0 clk_intf CLK" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME clk_intf, ASSOCIATED_BUSIF p_intf:b_intf:a_intf, ASSOCIATED_RESET sclr, ASSOCIATED_CLKEN ce, FREQ_HZ 10000000, FREQ_TOLERANCE_HZ 0, PHASE 0.0, INSERT_VIP 0" *) input CLK;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 a_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME a_intf, LAYERED_METADATA undef" *) input [17:0]A;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 b_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME b_intf, LAYERED_METADATA undef" *) input [17:0]B;
  (* X_INTERFACE_INFO = "xilinx.com:signal:clockenable:1.0 ce_intf CE" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME ce_intf, POLARITY ACTIVE_HIGH" *) input CE;
  (* X_INTERFACE_INFO = "xilinx.com:signal:data:1.0 p_intf DATA" *) (* X_INTERFACE_PARAMETER = "XIL_INTERFACENAME p_intf, LAYERED_METADATA undef" *) output [35:0]P;

  wire \<const0> ;
  wire [17:0]A;
  wire CLK;
  wire [25:17]\^P ;
  wire [35:0]NLW_U0_P_UNCONNECTED;
  wire [47:0]NLW_U0_PCASC_UNCONNECTED;
  wire [1:0]NLW_U0_ZERO_DETECT_UNCONNECTED;

  assign P[35] = \<const0> ;
  assign P[34] = \<const0> ;
  assign P[33] = \<const0> ;
  assign P[32] = \<const0> ;
  assign P[31] = \<const0> ;
  assign P[30] = \<const0> ;
  assign P[29] = \<const0> ;
  assign P[28] = \<const0> ;
  assign P[27] = \<const0> ;
  assign P[26] = \<const0> ;
  assign P[25:17] = \^P [25:17];
  assign P[16] = \<const0> ;
  assign P[15] = \<const0> ;
  assign P[14] = \<const0> ;
  assign P[13] = \<const0> ;
  assign P[12] = \<const0> ;
  assign P[11] = \<const0> ;
  assign P[10] = \<const0> ;
  assign P[9] = \<const0> ;
  assign P[8] = \<const0> ;
  assign P[7] = \<const0> ;
  assign P[6] = \<const0> ;
  assign P[5] = \<const0> ;
  assign P[4] = \<const0> ;
  assign P[3] = \<const0> ;
  assign P[2] = \<const0> ;
  assign P[1] = \<const0> ;
  assign P[0] = \<const0> ;
  GND GND
       (.G(\<const0> ));
  (* C_A_TYPE = "0" *) 
  (* C_A_WIDTH = "18" *) 
  (* C_B_TYPE = "0" *) 
  (* C_B_VALUE = "10000001" *) 
  (* C_B_WIDTH = "18" *) 
  (* C_CCM_IMP = "0" *) 
  (* C_CE_OVERRIDES_SCLR = "0" *) 
  (* C_HAS_CE = "1" *) 
  (* C_HAS_SCLR = "0" *) 
  (* C_HAS_ZERO_DETECT = "0" *) 
  (* C_LATENCY = "3" *) 
  (* C_MODEL_TYPE = "0" *) 
  (* C_MULT_TYPE = "1" *) 
  (* C_OPTIMIZE_GOAL = "1" *) 
  (* C_OUT_HIGH = "35" *) 
  (* C_OUT_LOW = "0" *) 
  (* C_ROUND_OUTPUT = "0" *) 
  (* C_ROUND_PT = "0" *) 
  (* C_VERBOSITY = "0" *) 
  (* C_XDEVICEFAMILY = "zynq" *) 
  (* KEEP_HIERARCHY = "soft" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* is_du_within_envelope = "true" *) 
  hdmi_vga_vp_0_0_mult_gen_v12_0_18__8 U0
       (.A({1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,A[7:0]}),
        .B({1'b1,1'b1,1'b0,1'b0,1'b1,1'b0,1'b1,1'b0,1'b0,1'b1,1'b1,1'b0,1'b1,1'b0,1'b0,1'b0,1'b1,1'b0}),
        .CE(1'b1),
        .CLK(CLK),
        .P({NLW_U0_P_UNCONNECTED[35:26],\^P ,NLW_U0_P_UNCONNECTED[16:0]}),
        .PCASC(NLW_U0_PCASC_UNCONNECTED[47:0]),
        .SCLR(1'b0),
        .ZERO_DETECT(NLW_U0_ZERO_DETECT_UNCONNECTED[1:0]));
endmodule

(* ORIG_REF_NAME = "otwzamk" *) 
module hdmi_vga_vp_0_0_otwzamk
   (\val_reg[0] ,
    \h_sync_mux[6] ,
    \v_sync_mux[6] ,
    \de_mux[6] ,
    pixel_reg,
    \val_reg[3] ,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    \val_reg[3]_3 ,
    \val_reg[0]_0 ,
    \pix_mux[6] ,
    clk,
    dina,
    \pixel_reg_reg[0] ,
    p_0_in0_in,
    p_0_in,
    sw,
    p_0_in1_in,
    \pixel_reg_reg[0]_0 );
  output [0:0]\val_reg[0] ;
  output \h_sync_mux[6] ;
  output \v_sync_mux[6] ;
  output \de_mux[6] ;
  output pixel_reg;
  output \val_reg[3] ;
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output \val_reg[3]_3 ;
  output \val_reg[0]_0 ;
  output [0:0]\pix_mux[6] ;
  input clk;
  input [3:0]dina;
  input \pixel_reg_reg[0] ;
  input p_0_in0_in;
  input p_0_in;
  input [0:0]sw;
  input p_0_in1_in;
  input \pixel_reg_reg[0]_0 ;

  wire clk;
  wire \de_mux[6] ;
  wire de_reg;
  wire [3:0]dina;
  wire \h_sync_mux[6] ;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire p_0_in_6;
  wire part_1_n_3;
  wire [0:0]\pix_mux[6] ;
  wire pixel_reg;
  wire \pixel_reg_reg[0] ;
  wire \pixel_reg_reg[0]_0 ;
  wire [0:0]sw;
  wire \v_sync_mux[6] ;
  wire [0:0]\val_reg[0] ;
  wire \val_reg[0]_0 ;
  wire \val_reg[3] ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;
  wire \val_reg[3]_3 ;

  hdmi_vga_vp_0_0_erodyl__xdcDup__1 part_1
       (.clk(clk),
        .de_reg(de_reg),
        .dina(dina),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .p_0_in_6(p_0_in_6),
        .pixel_reg(pixel_reg),
        .\pixel_reg_reg[0]_0 (\pixel_reg_reg[0] ),
        .\pixel_reg_reg[0]_1 (\pixel_reg_reg[0]_0 ),
        .sw(sw),
        .\val_reg[0] (\val_reg[0]_0 ),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[1] (part_1_n_3),
        .\val_reg[3] (\val_reg[3] ),
        .\val_reg[3]_0 (\val_reg[3]_0 ),
        .\val_reg[3]_1 (\val_reg[3]_1 ),
        .\val_reg[3]_2 (\val_reg[3]_2 ),
        .\val_reg[3]_3 (\val_reg[3]_3 ));
  hdmi_vga_vp_0_0_erodyl part_2
       (.clk(clk),
        .\de_mux[6] (\de_mux[6] ),
        .de_reg(de_reg),
        .\h_sync_mux[6] (\h_sync_mux[6] ),
        .p_0_in_6(p_0_in_6),
        .\pix_mux[6] (\pix_mux[6] ),
        .pixel_reg(pixel_reg),
        .sw(sw),
        .\v_sync_mux[6] (\v_sync_mux[6] ),
        .\val_reg[1] (part_1_n_3));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register
   (val,
    P,
    clk);
  output [8:0]val;
  input [8:0]P;
  input clk;

  wire [8:0]P;
  wire clk;
  wire [8:0]val;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(P[0]),
        .Q(val[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(P[1]),
        .Q(val[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(P[2]),
        .Q(val[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(P[3]),
        .Q(val[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(P[4]),
        .Q(val[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(P[5]),
        .Q(val[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(P[6]),
        .Q(val[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(P[7]),
        .Q(val[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(P[8]),
        .Q(val[8]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register_117
   (\val_reg[8]_0 ,
    \val_reg[7]_0 ,
    \val_reg[6]_0 ,
    \val_reg[5]_0 ,
    \val_reg[4]_0 ,
    \val_reg[3]_0 ,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    \val_reg[0]_0 ,
    P,
    clk);
  output \val_reg[8]_0 ;
  output \val_reg[7]_0 ;
  output \val_reg[6]_0 ;
  output \val_reg[5]_0 ;
  output \val_reg[4]_0 ;
  output \val_reg[3]_0 ;
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output \val_reg[0]_0 ;
  input [8:0]P;
  input clk;

  wire [8:0]P;
  wire clk;
  wire \val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[4]_0 ;
  wire \val_reg[5]_0 ;
  wire \val_reg[6]_0 ;
  wire \val_reg[7]_0 ;
  wire \val_reg[8]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(P[0]),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(P[1]),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(P[2]),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(P[3]),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(P[4]),
        .Q(\val_reg[4]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(P[5]),
        .Q(\val_reg[5]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(P[6]),
        .Q(\val_reg[6]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(P[7]),
        .Q(\val_reg[7]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(P[8]),
        .Q(\val_reg[8]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register_118
   (A,
    \val_reg[8]_0 ,
    clk,
    \val_reg[7]_0 ,
    \val_reg[6]_0 ,
    \val_reg[5]_0 ,
    \val_reg[4]_0 ,
    \val_reg[3]_0 ,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    \val_reg[0]_0 );
  output [8:0]A;
  input \val_reg[8]_0 ;
  input clk;
  input \val_reg[7]_0 ;
  input \val_reg[6]_0 ;
  input \val_reg[5]_0 ;
  input \val_reg[4]_0 ;
  input \val_reg[3]_0 ;
  input \val_reg[2]_0 ;
  input \val_reg[1]_0 ;
  input \val_reg[0]_0 ;

  wire [8:0]A;
  wire clk;
  wire \val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[4]_0 ;
  wire \val_reg[5]_0 ;
  wire \val_reg[6]_0 ;
  wire \val_reg[7]_0 ;
  wire \val_reg[8]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(A[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(A[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(A[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(A[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[4]_0 ),
        .Q(A[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[5]_0 ),
        .Q(A[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[6]_0 ),
        .Q(A[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[7]_0 ),
        .Q(A[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[8]_0 ),
        .Q(A[8]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register_82
   (A,
    val,
    clk);
  output [8:0]A;
  input [8:0]val;
  input clk;

  wire [8:0]A;
  wire clk;
  wire [8:0]val;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(val[0]),
        .Q(A[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(val[1]),
        .Q(A[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(val[2]),
        .Q(A[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(val[3]),
        .Q(A[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(val[4]),
        .Q(A[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(val[5]),
        .Q(A[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(val[6]),
        .Q(A[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(val[7]),
        .Q(A[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(val[8]),
        .Q(A[8]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register_96
   (\val_reg[8]_0 ,
    \val_reg[7]_0 ,
    \val_reg[6]_0 ,
    \val_reg[5]_0 ,
    \val_reg[4]_0 ,
    \val_reg[3]_0 ,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    \val_reg[0]_0 ,
    P,
    clk);
  output \val_reg[8]_0 ;
  output \val_reg[7]_0 ;
  output \val_reg[6]_0 ;
  output \val_reg[5]_0 ;
  output \val_reg[4]_0 ;
  output \val_reg[3]_0 ;
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output \val_reg[0]_0 ;
  input [8:0]P;
  input clk;

  wire [8:0]P;
  wire clk;
  wire \val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[4]_0 ;
  wire \val_reg[5]_0 ;
  wire \val_reg[6]_0 ;
  wire \val_reg[7]_0 ;
  wire \val_reg[8]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(P[0]),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(P[1]),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(P[2]),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(P[3]),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(P[4]),
        .Q(\val_reg[4]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(P[5]),
        .Q(\val_reg[5]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(P[6]),
        .Q(\val_reg[6]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(P[7]),
        .Q(\val_reg[7]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(P[8]),
        .Q(\val_reg[8]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register_97
   (A,
    \val_reg[8]_0 ,
    clk,
    \val_reg[7]_0 ,
    \val_reg[6]_0 ,
    \val_reg[5]_0 ,
    \val_reg[4]_0 ,
    \val_reg[3]_0 ,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    \val_reg[0]_0 );
  output [8:0]A;
  input \val_reg[8]_0 ;
  input clk;
  input \val_reg[7]_0 ;
  input \val_reg[6]_0 ;
  input \val_reg[5]_0 ;
  input \val_reg[4]_0 ;
  input \val_reg[3]_0 ;
  input \val_reg[2]_0 ;
  input \val_reg[1]_0 ;
  input \val_reg[0]_0 ;

  wire [8:0]A;
  wire clk;
  wire \val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[4]_0 ;
  wire \val_reg[5]_0 ;
  wire \val_reg[6]_0 ;
  wire \val_reg[7]_0 ;
  wire \val_reg[8]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(A[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(A[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(A[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(A[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[4]_0 ),
        .Q(A[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[5]_0 ),
        .Q(A[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[6]_0 ),
        .Q(A[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[7]_0 ),
        .Q(A[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[8]_0 ),
        .Q(A[8]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized0
   (CE,
    Q,
    clk);
  output CE;
  input [0:0]Q;
  input clk;

  wire CE;
  wire [0:0]Q;
  wire clk;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(Q),
        .Q(CE),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized0_49
   (\val_reg[2] ,
    CE,
    clk);
  output \val_reg[2] ;
  input CE;
  input clk;

  wire CE;
  wire clk;
  wire \val_reg[2] ;

  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/circle_drawer/circle_getter/sub_delay/genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/circle_drawer/circle_getter/sub_delay/genblk1[1].regis_del/val_reg[0]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[0]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(CE),
        .Q(\val_reg[2] ));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized0_50
   (\val_reg[0]_0 ,
    \val_reg[0]_1 ,
    clk);
  output \val_reg[0]_0 ;
  input \val_reg[0]_1 ;
  input clk;

  wire clk;
  wire \val_reg[0]_0 ;
  wire \val_reg[0]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized0_80
   (h_sync_in_0,
    v_sync_in_0,
    de_in_0,
    h_sync_in,
    clk,
    v_sync_in,
    de_in);
  output h_sync_in_0;
  output v_sync_in_0;
  output de_in_0;
  input h_sync_in;
  input clk;
  input v_sync_in;
  input de_in;

  wire clk;
  wire de_in;
  wire de_in_0;
  wire h_sync_in;
  wire h_sync_in_0;
  wire v_sync_in;
  wire v_sync_in_0;

  (* srl_bus_name = "inst/\conv/del_sync/genblk1[7].regis_del/val_reg " *) 
  (* srl_name = "inst/\conv/del_sync/genblk1[7].regis_del/val_reg[0]_srl8 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[0]_srl8 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(de_in),
        .Q(de_in_0));
  (* srl_bus_name = "inst/\conv/del_sync/genblk1[7].regis_del/val_reg " *) 
  (* srl_name = "inst/\conv/del_sync/genblk1[7].regis_del/val_reg[1]_srl8 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl8 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(v_sync_in),
        .Q(v_sync_in_0));
  (* srl_bus_name = "inst/\conv/del_sync/genblk1[7].regis_del/val_reg " *) 
  (* srl_name = "inst/\conv/del_sync/genblk1[7].regis_del/val_reg[2]_srl8 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl8 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(h_sync_in),
        .Q(h_sync_in_0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized0_81
   (\val_reg[2]_0 ,
    \val_reg[1]_0 ,
    E,
    SR,
    \val_reg[0]_0 ,
    \val_reg[2]_1 ,
    \FSM_onehot_state_reg[0] ,
    eof,
    \FSM_onehot_state_reg[0]_0 ,
    de_reg,
    v_sync_reg,
    h_sync_reg,
    \val_reg[2]_2 ,
    clk,
    \val_reg[1]_1 ,
    \val_reg[0]_1 ,
    prev_h_sync,
    i0,
    i0_0,
    prev_v_sync,
    sw,
    de_reg_reg,
    de_in,
    \de_mux[6] ,
    de_reg_reg_0,
    v_sync_reg_reg,
    v_sync_in,
    \v_sync_mux[6] ,
    v_sync_reg_reg_0,
    h_sync_reg_reg,
    h_sync_in,
    \h_sync_mux[6] ,
    h_sync_reg_reg_0);
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output [0:0]E;
  output [0:0]SR;
  output [0:0]\val_reg[0]_0 ;
  output [0:0]\val_reg[2]_1 ;
  output [0:0]\FSM_onehot_state_reg[0] ;
  output eof;
  output [0:0]\FSM_onehot_state_reg[0]_0 ;
  output de_reg;
  output v_sync_reg;
  output h_sync_reg;
  input \val_reg[2]_2 ;
  input clk;
  input \val_reg[1]_1 ;
  input \val_reg[0]_1 ;
  input prev_h_sync;
  input i0;
  input i0_0;
  input prev_v_sync;
  input [2:0]sw;
  input de_reg_reg;
  input de_in;
  input \de_mux[6] ;
  input de_reg_reg_0;
  input v_sync_reg_reg;
  input v_sync_in;
  input \v_sync_mux[6] ;
  input v_sync_reg_reg_0;
  input h_sync_reg_reg;
  input h_sync_in;
  input \h_sync_mux[6] ;
  input h_sync_reg_reg_0;

  wire [0:0]E;
  wire [0:0]\FSM_onehot_state_reg[0] ;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire [0:0]SR;
  wire clk;
  wire de_in;
  wire \de_mux[6] ;
  wire de_reg;
  wire de_reg_i_2_n_0;
  wire de_reg_reg;
  wire de_reg_reg_0;
  wire eof;
  wire h_sync_in;
  wire \h_sync_mux[6] ;
  wire h_sync_reg;
  wire h_sync_reg_i_2_n_0;
  wire h_sync_reg_reg;
  wire h_sync_reg_reg_0;
  wire i0;
  wire i0_0;
  wire prev_h_sync;
  wire prev_v_sync;
  wire [2:0]sw;
  wire v_sync_in;
  wire \v_sync_mux[6] ;
  wire v_sync_reg;
  wire v_sync_reg_i_2_n_0;
  wire v_sync_reg_reg;
  wire v_sync_reg_reg_0;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[0]_1 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire [0:0]\val_reg[2]_1 ;
  wire \val_reg[2]_2 ;

  LUT6 #(
    .INIT(64'hABABAAABABAAAAAA)) 
    de_reg_i_1
       (.I0(de_reg_i_2_n_0),
        .I1(sw[0]),
        .I2(sw[2]),
        .I3(sw[1]),
        .I4(de_reg_reg),
        .I5(de_in),
        .O(de_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCA000A0)) 
    de_reg_i_2
       (.I0(E),
        .I1(sw[1]),
        .I2(sw[0]),
        .I3(sw[2]),
        .I4(\de_mux[6] ),
        .I5(de_reg_reg_0),
        .O(de_reg_i_2_n_0));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend_reg[31]_i_1 
       (.I0(eof),
        .I1(i0),
        .O(\FSM_onehot_state_reg[0] ));
  (* SOFT_HLUTNM = "soft_lutpair2" *) 
  LUT2 #(
    .INIT(4'h8)) 
    \dividend_reg[31]_i_1__0 
       (.I0(eof),
        .I1(i0_0),
        .O(\FSM_onehot_state_reg[0]_0 ));
  LUT6 #(
    .INIT(64'hABABAAABABAAAAAA)) 
    h_sync_reg_i_1
       (.I0(h_sync_reg_i_2_n_0),
        .I1(sw[0]),
        .I2(sw[2]),
        .I3(sw[1]),
        .I4(h_sync_reg_reg),
        .I5(h_sync_in),
        .O(h_sync_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCA000A0)) 
    h_sync_reg_i_2
       (.I0(\val_reg[2]_0 ),
        .I1(sw[1]),
        .I2(sw[0]),
        .I3(sw[2]),
        .I4(\h_sync_mux[6] ),
        .I5(h_sync_reg_reg_0),
        .O(h_sync_reg_i_2_n_0));
  LUT6 #(
    .INIT(64'hABABAAABABAAAAAA)) 
    v_sync_reg_i_1
       (.I0(v_sync_reg_i_2_n_0),
        .I1(sw[0]),
        .I2(sw[2]),
        .I3(sw[1]),
        .I4(v_sync_reg_reg),
        .I5(v_sync_in),
        .O(v_sync_reg));
  LUT6 #(
    .INIT(64'hFFFFFFFFCCA000A0)) 
    v_sync_reg_i_2
       (.I0(\val_reg[1]_0 ),
        .I1(sw[1]),
        .I2(sw[0]),
        .I3(sw[2]),
        .I4(\v_sync_mux[6] ),
        .I5(v_sync_reg_reg_0),
        .O(v_sync_reg_i_2_n_0));
  LUT2 #(
    .INIT(4'h2)) 
    \val[27]_i_1 
       (.I0(\val_reg[1]_0 ),
        .I1(prev_v_sync),
        .O(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(E),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_2 ),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT4 #(
    .INIT(16'h44F4)) 
    \x_pos[10]_i_1 
       (.I0(E),
        .I1(\val_reg[1]_0 ),
        .I2(\val_reg[2]_0 ),
        .I3(prev_h_sync),
        .O(\val_reg[0]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair1" *) 
  LUT3 #(
    .INIT(8'hD0)) 
    \y_pos[10]_i_1 
       (.I0(\val_reg[2]_0 ),
        .I1(prev_h_sync),
        .I2(\val_reg[1]_0 ),
        .O(SR));
  LUT2 #(
    .INIT(4'h2)) 
    \y_pos[10]_i_2 
       (.I0(\val_reg[2]_0 ),
        .I1(prev_h_sync),
        .O(\val_reg[2]_1 ));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized1
   (E,
    Q,
    \val_reg[25]_0 ,
    \val_reg[25]_1 ,
    \val_reg[25]_2 ,
    \val_reg[27]_0 ,
    \v_sync_mux[4] ,
    \h_sync_mux[4] ,
    SR,
    clk,
    CO,
    \x_max_r_reg[10] ,
    \y_min_r_reg[10] ,
    \y_max_r_reg[10] ,
    eof,
    D,
    \val_reg[1]_fwrd__6_0 ,
    \val_reg[0]_fwrd_0 );
  output [0:0]E;
  output [1:0]Q;
  output [0:0]\val_reg[25]_0 ;
  output [0:0]\val_reg[25]_1 ;
  output [0:0]\val_reg[25]_2 ;
  output [0:0]\val_reg[27]_0 ;
  output \v_sync_mux[4] ;
  output \h_sync_mux[4] ;
  input [0:0]SR;
  input clk;
  input [0:0]CO;
  input [0:0]\x_max_r_reg[10] ;
  input [0:0]\y_min_r_reg[10] ;
  input [0:0]\y_max_r_reg[10] ;
  input eof;
  input [1:0]D;
  input \val_reg[1]_fwrd__6_0 ;
  input \val_reg[0]_fwrd_0 ;

  wire [0:0]CO;
  wire [1:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]SR;
  wire clk;
  wire eof;
  wire \h_sync_mux[4] ;
  wire \v_sync_mux[4] ;
  wire \val_reg[0]_fwrd_0 ;
  wire \val_reg[1]_fwrd__4_srl5_n_0 ;
  wire \val_reg[1]_fwrd__5_n_0 ;
  wire \val_reg[1]_fwrd__6_0 ;
  wire [0:0]\val_reg[25]_0 ;
  wire [0:0]\val_reg[25]_1 ;
  wire [0:0]\val_reg[25]_2 ;
  wire [0:0]\val_reg[27]_0 ;
  wire [0:0]\x_max_r_reg[10] ;
  wire [0:0]\y_max_r_reg[10] ;
  wire [0:0]\y_min_r_reg[10] ;

  LUT2 #(
    .INIT(4'h8)) 
    \val[31]_i_1 
       (.I0(Q[1]),
        .I1(Q[0]),
        .O(\val_reg[27]_0 ));
  FDRE \val_reg[0]_fwrd 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_fwrd_0 ),
        .Q(\h_sync_mux[4] ),
        .R(\val_reg[1]_fwrd__5_n_0 ));
  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/counter_delay/genblk1[0].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/counter_delay/genblk1[0].regis_del/val_reg[1]_fwrd__4_srl5 " *) 
  SRL16E \val_reg[1]_fwrd__4_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(SR),
        .Q(\val_reg[1]_fwrd__4_srl5_n_0 ));
  FDRE \val_reg[1]_fwrd__5 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_fwrd__4_srl5_n_0 ),
        .Q(\val_reg[1]_fwrd__5_n_0 ),
        .R(1'b0));
  FDRE \val_reg[1]_fwrd__6 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_fwrd__6_0 ),
        .Q(\v_sync_mux[4] ),
        .R(\val_reg[1]_fwrd__5_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[25] 
       (.C(clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(Q[0]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[27] 
       (.C(clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(Q[1]),
        .R(eof));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \x_max_r[10]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\x_max_r_reg[10] ),
        .O(\val_reg[25]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair20" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \x_min_r[10]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(CO),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \y_max_r[10]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\y_max_r_reg[10] ),
        .O(\val_reg[25]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair21" *) 
  LUT3 #(
    .INIT(8'h80)) 
    \y_min_r[10]_i_1 
       (.I0(Q[0]),
        .I1(Q[1]),
        .I2(\y_min_r_reg[10] ),
        .O(\val_reg[25]_1 ));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized2
   (Q,
    eof,
    E,
    D,
    clk);
  output [31:0]Q;
  input eof;
  input [0:0]E;
  input [31:0]D;
  input clk;

  wire [31:0]D;
  wire [0:0]E;
  wire [31:0]Q;
  wire clk;
  wire eof;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(E),
        .D(D[0]),
        .Q(Q[0]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[10] 
       (.C(clk),
        .CE(E),
        .D(D[10]),
        .Q(Q[10]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[11] 
       (.C(clk),
        .CE(E),
        .D(D[11]),
        .Q(Q[11]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[12] 
       (.C(clk),
        .CE(E),
        .D(D[12]),
        .Q(Q[12]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[13] 
       (.C(clk),
        .CE(E),
        .D(D[13]),
        .Q(Q[13]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[14] 
       (.C(clk),
        .CE(E),
        .D(D[14]),
        .Q(Q[14]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[15] 
       (.C(clk),
        .CE(E),
        .D(D[15]),
        .Q(Q[15]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[16] 
       (.C(clk),
        .CE(E),
        .D(D[16]),
        .Q(Q[16]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[17] 
       (.C(clk),
        .CE(E),
        .D(D[17]),
        .Q(Q[17]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[18] 
       (.C(clk),
        .CE(E),
        .D(D[18]),
        .Q(Q[18]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[19] 
       (.C(clk),
        .CE(E),
        .D(D[19]),
        .Q(Q[19]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(E),
        .D(D[1]),
        .Q(Q[1]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[20] 
       (.C(clk),
        .CE(E),
        .D(D[20]),
        .Q(Q[20]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[21] 
       (.C(clk),
        .CE(E),
        .D(D[21]),
        .Q(Q[21]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[22] 
       (.C(clk),
        .CE(E),
        .D(D[22]),
        .Q(Q[22]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[23] 
       (.C(clk),
        .CE(E),
        .D(D[23]),
        .Q(Q[23]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[24] 
       (.C(clk),
        .CE(E),
        .D(D[24]),
        .Q(Q[24]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[25] 
       (.C(clk),
        .CE(E),
        .D(D[25]),
        .Q(Q[25]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[26] 
       (.C(clk),
        .CE(E),
        .D(D[26]),
        .Q(Q[26]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[27] 
       (.C(clk),
        .CE(E),
        .D(D[27]),
        .Q(Q[27]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[28] 
       (.C(clk),
        .CE(E),
        .D(D[28]),
        .Q(Q[28]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[29] 
       (.C(clk),
        .CE(E),
        .D(D[29]),
        .Q(Q[29]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(E),
        .D(D[2]),
        .Q(Q[2]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[30] 
       (.C(clk),
        .CE(E),
        .D(D[30]),
        .Q(Q[30]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[31] 
       (.C(clk),
        .CE(E),
        .D(D[31]),
        .Q(Q[31]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(E),
        .D(D[3]),
        .Q(Q[3]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(E),
        .D(D[4]),
        .Q(Q[4]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(E),
        .D(D[5]),
        .Q(Q[5]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(E),
        .D(D[6]),
        .Q(Q[6]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(E),
        .D(D[7]),
        .Q(Q[7]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(E),
        .D(D[8]),
        .Q(Q[8]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[9] 
       (.C(clk),
        .CE(E),
        .D(D[9]),
        .Q(Q[9]),
        .R(eof));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized2_44
   (\val_reg[31]_0 ,
    eof,
    E,
    D,
    clk);
  output [31:0]\val_reg[31]_0 ;
  input eof;
  input [0:0]E;
  input [31:0]D;
  input clk;

  wire [31:0]D;
  wire [0:0]E;
  wire clk;
  wire eof;
  wire [31:0]\val_reg[31]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(E),
        .D(D[0]),
        .Q(\val_reg[31]_0 [0]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[10] 
       (.C(clk),
        .CE(E),
        .D(D[10]),
        .Q(\val_reg[31]_0 [10]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[11] 
       (.C(clk),
        .CE(E),
        .D(D[11]),
        .Q(\val_reg[31]_0 [11]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[12] 
       (.C(clk),
        .CE(E),
        .D(D[12]),
        .Q(\val_reg[31]_0 [12]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[13] 
       (.C(clk),
        .CE(E),
        .D(D[13]),
        .Q(\val_reg[31]_0 [13]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[14] 
       (.C(clk),
        .CE(E),
        .D(D[14]),
        .Q(\val_reg[31]_0 [14]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[15] 
       (.C(clk),
        .CE(E),
        .D(D[15]),
        .Q(\val_reg[31]_0 [15]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[16] 
       (.C(clk),
        .CE(E),
        .D(D[16]),
        .Q(\val_reg[31]_0 [16]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[17] 
       (.C(clk),
        .CE(E),
        .D(D[17]),
        .Q(\val_reg[31]_0 [17]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[18] 
       (.C(clk),
        .CE(E),
        .D(D[18]),
        .Q(\val_reg[31]_0 [18]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[19] 
       (.C(clk),
        .CE(E),
        .D(D[19]),
        .Q(\val_reg[31]_0 [19]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(E),
        .D(D[1]),
        .Q(\val_reg[31]_0 [1]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[20] 
       (.C(clk),
        .CE(E),
        .D(D[20]),
        .Q(\val_reg[31]_0 [20]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[21] 
       (.C(clk),
        .CE(E),
        .D(D[21]),
        .Q(\val_reg[31]_0 [21]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[22] 
       (.C(clk),
        .CE(E),
        .D(D[22]),
        .Q(\val_reg[31]_0 [22]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[23] 
       (.C(clk),
        .CE(E),
        .D(D[23]),
        .Q(\val_reg[31]_0 [23]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[24] 
       (.C(clk),
        .CE(E),
        .D(D[24]),
        .Q(\val_reg[31]_0 [24]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[25] 
       (.C(clk),
        .CE(E),
        .D(D[25]),
        .Q(\val_reg[31]_0 [25]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[26] 
       (.C(clk),
        .CE(E),
        .D(D[26]),
        .Q(\val_reg[31]_0 [26]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[27] 
       (.C(clk),
        .CE(E),
        .D(D[27]),
        .Q(\val_reg[31]_0 [27]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[28] 
       (.C(clk),
        .CE(E),
        .D(D[28]),
        .Q(\val_reg[31]_0 [28]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[29] 
       (.C(clk),
        .CE(E),
        .D(D[29]),
        .Q(\val_reg[31]_0 [29]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(E),
        .D(D[2]),
        .Q(\val_reg[31]_0 [2]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[30] 
       (.C(clk),
        .CE(E),
        .D(D[30]),
        .Q(\val_reg[31]_0 [30]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[31] 
       (.C(clk),
        .CE(E),
        .D(D[31]),
        .Q(\val_reg[31]_0 [31]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(E),
        .D(D[3]),
        .Q(\val_reg[31]_0 [3]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(E),
        .D(D[4]),
        .Q(\val_reg[31]_0 [4]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(E),
        .D(D[5]),
        .Q(\val_reg[31]_0 [5]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(E),
        .D(D[6]),
        .Q(\val_reg[31]_0 [6]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(E),
        .D(D[7]),
        .Q(\val_reg[31]_0 [7]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(E),
        .D(D[8]),
        .Q(\val_reg[31]_0 [8]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[9] 
       (.C(clk),
        .CE(E),
        .D(D[9]),
        .Q(\val_reg[31]_0 [9]),
        .R(eof));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized2_45
   (Q,
    eof,
    E,
    D,
    clk);
  output [31:0]Q;
  input eof;
  input [0:0]E;
  input [31:0]D;
  input clk;

  wire [31:0]D;
  wire [0:0]E;
  wire [31:0]Q;
  wire clk;
  wire eof;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(E),
        .D(D[0]),
        .Q(Q[0]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[10] 
       (.C(clk),
        .CE(E),
        .D(D[10]),
        .Q(Q[10]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[11] 
       (.C(clk),
        .CE(E),
        .D(D[11]),
        .Q(Q[11]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[12] 
       (.C(clk),
        .CE(E),
        .D(D[12]),
        .Q(Q[12]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[13] 
       (.C(clk),
        .CE(E),
        .D(D[13]),
        .Q(Q[13]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[14] 
       (.C(clk),
        .CE(E),
        .D(D[14]),
        .Q(Q[14]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[15] 
       (.C(clk),
        .CE(E),
        .D(D[15]),
        .Q(Q[15]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[16] 
       (.C(clk),
        .CE(E),
        .D(D[16]),
        .Q(Q[16]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[17] 
       (.C(clk),
        .CE(E),
        .D(D[17]),
        .Q(Q[17]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[18] 
       (.C(clk),
        .CE(E),
        .D(D[18]),
        .Q(Q[18]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[19] 
       (.C(clk),
        .CE(E),
        .D(D[19]),
        .Q(Q[19]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(E),
        .D(D[1]),
        .Q(Q[1]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[20] 
       (.C(clk),
        .CE(E),
        .D(D[20]),
        .Q(Q[20]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[21] 
       (.C(clk),
        .CE(E),
        .D(D[21]),
        .Q(Q[21]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[22] 
       (.C(clk),
        .CE(E),
        .D(D[22]),
        .Q(Q[22]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[23] 
       (.C(clk),
        .CE(E),
        .D(D[23]),
        .Q(Q[23]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[24] 
       (.C(clk),
        .CE(E),
        .D(D[24]),
        .Q(Q[24]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[25] 
       (.C(clk),
        .CE(E),
        .D(D[25]),
        .Q(Q[25]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[26] 
       (.C(clk),
        .CE(E),
        .D(D[26]),
        .Q(Q[26]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[27] 
       (.C(clk),
        .CE(E),
        .D(D[27]),
        .Q(Q[27]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[28] 
       (.C(clk),
        .CE(E),
        .D(D[28]),
        .Q(Q[28]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[29] 
       (.C(clk),
        .CE(E),
        .D(D[29]),
        .Q(Q[29]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(E),
        .D(D[2]),
        .Q(Q[2]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[30] 
       (.C(clk),
        .CE(E),
        .D(D[30]),
        .Q(Q[30]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[31] 
       (.C(clk),
        .CE(E),
        .D(D[31]),
        .Q(Q[31]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(E),
        .D(D[3]),
        .Q(Q[3]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[4] 
       (.C(clk),
        .CE(E),
        .D(D[4]),
        .Q(Q[4]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[5] 
       (.C(clk),
        .CE(E),
        .D(D[5]),
        .Q(Q[5]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[6] 
       (.C(clk),
        .CE(E),
        .D(D[6]),
        .Q(Q[6]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[7] 
       (.C(clk),
        .CE(E),
        .D(D[7]),
        .Q(Q[7]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[8] 
       (.C(clk),
        .CE(E),
        .D(D[8]),
        .Q(Q[8]),
        .R(eof));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[9] 
       (.C(clk),
        .CE(E),
        .D(D[9]),
        .Q(Q[9]),
        .R(eof));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized3
   (\val_reg[1] ,
    \val_reg[2] ,
    clk_0,
    clk_1,
    \val_reg[0] ,
    \v_sync_mux[1] ,
    clk,
    \h_sync_mux[1] ,
    \val_reg[26] ,
    \val_reg[18] ,
    \val_reg[2]_0 );
  output \val_reg[1] ;
  output \val_reg[2] ;
  output clk_0;
  output clk_1;
  output \val_reg[0] ;
  input \v_sync_mux[1] ;
  input clk;
  input \h_sync_mux[1] ;
  input \val_reg[26] ;
  input \val_reg[18] ;
  input \val_reg[2]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire \h_sync_mux[1] ;
  wire \v_sync_mux[1] ;
  wire \val_reg[0] ;
  wire \val_reg[18] ;
  wire \val_reg[1] ;
  wire \val_reg[26] ;
  wire \val_reg[2] ;
  wire \val_reg[2]_0 ;

  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg[0]_srl7 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[0]_srl7 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\h_sync_mux[1] ),
        .Q(\val_reg[2] ));
  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg[18]_srl6 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[18]_srl6 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\val_reg[18] ),
        .Q(clk_1));
  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg[1]_srl7 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl7 
       (.A0(1'b0),
        .A1(1'b1),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\v_sync_mux[1] ),
        .Q(\val_reg[1] ));
  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg[26]_srl6 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[26]_srl6 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\val_reg[26] ),
        .Q(clk_0));
  (* srl_bus_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg " *) 
  (* srl_name = "inst/\ms_centroid/centroid_ent/circle_drawer/getter_delay/genblk1[4].regis_del/val_reg[2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\val_reg[2]_0 ),
        .Q(\val_reg[0] ));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized3_48
   (\val_reg[26]_0 ,
    \de_mux[4] ,
    \val_reg[18]_0 ,
    \val_reg[26]_1 ,
    \val_reg[26]_2 ,
    clk,
    \val_reg[18]_1 ,
    \val_reg[2]_0 ,
    qspo,
    \pix_mux[6] ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[15]_0 ,
    \pix_mux[5] );
  output \val_reg[26]_0 ;
  output \de_mux[4] ;
  output \val_reg[18]_0 ;
  output \val_reg[26]_1 ;
  input \val_reg[26]_2 ;
  input clk;
  input \val_reg[18]_1 ;
  input \val_reg[2]_0 ;
  input [0:0]qspo;
  input [0:0]\pix_mux[6] ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[15]_0 ;
  input [0:0]\pix_mux[5] ;

  wire clk;
  wire \de_mux[4] ;
  wire [0:0]\pix_mux[5] ;
  wire [0:0]\pix_mux[6] ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[15]_0 ;
  wire [0:0]qspo;
  wire \val_reg[18]_0 ;
  wire \val_reg[18]_1 ;
  wire \val_reg[26]_0 ;
  wire \val_reg[26]_1 ;
  wire \val_reg[26]_2 ;
  wire \val_reg[2]_0 ;
  wire \val_reg_n_0_[18] ;

  LUT6 #(
    .INIT(64'h00FFF0220000F022)) 
    \pix_reg[15]_i_2 
       (.I0(\val_reg_n_0_[18] ),
        .I1(qspo),
        .I2(\pix_mux[6] ),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[15]_0 ),
        .I5(\pix_mux[5] ),
        .O(\val_reg[18]_0 ));
  LUT6 #(
    .INIT(64'h00FFF0220000F022)) 
    \pix_reg[23]_i_4 
       (.I0(\val_reg[26]_0 ),
        .I1(qspo),
        .I2(\pix_mux[6] ),
        .I3(\pix_reg_reg[15] ),
        .I4(\pix_reg_reg[15]_0 ),
        .I5(\pix_mux[5] ),
        .O(\val_reg[26]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[18]_1 ),
        .Q(\val_reg_n_0_[18] ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[26] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[26]_2 ),
        .Q(\val_reg[26]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(\de_mux[4] ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4
   (context__0,
    de_context__0,
    pixel_reg,
    clk,
    de_reg);
  output [0:0]context__0;
  output [0:0]de_context__0;
  input pixel_reg;
  input clk;
  input de_reg;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire de_reg;
  wire pixel_reg;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_reg),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(pixel_reg),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_0
   (context__0,
    de_context__0,
    \val_reg[3]_0 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_1
   (\val_reg[3]_0 ,
    context__0,
    \val_reg[3]_1 ,
    de_context__0,
    \val_reg[3]_2 ,
    \pixel_reg_reg[23] ,
    \pixel_reg_reg[23]_0 ,
    \pixel_reg_reg[23]_1 ,
    \pixel_reg_reg[23]_2 ,
    \pixel_reg_reg[23]_3 ,
    clk,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output [0:0]context__0;
  output \val_reg[3]_1 ;
  output [0:0]de_context__0;
  input [1:0]\val_reg[3]_2 ;
  input \pixel_reg_reg[23] ;
  input \pixel_reg_reg[23]_0 ;
  input \pixel_reg_reg[23]_1 ;
  input \pixel_reg_reg[23]_2 ;
  input \pixel_reg_reg[23]_3 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire \pixel_reg_reg[23] ;
  wire \pixel_reg_reg[23]_0 ;
  wire \pixel_reg_reg[23]_1 ;
  wire \pixel_reg_reg[23]_2 ;
  wire \pixel_reg_reg[23]_3 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire [1:0]\val_reg[3]_2 ;

  LUT5 #(
    .INIT(32'h80000000)) 
    \pixel_reg[23]_i_2 
       (.I0(context__0),
        .I1(\val_reg[3]_2 [1]),
        .I2(\val_reg[3]_2 [0]),
        .I3(\pixel_reg_reg[23]_2 ),
        .I4(\pixel_reg_reg[23]_3 ),
        .O(\val_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \pixel_reg[23]_i_3 
       (.I0(context__0),
        .I1(\val_reg[3]_2 [1]),
        .I2(\val_reg[3]_2 [0]),
        .I3(\pixel_reg_reg[23] ),
        .I4(\pixel_reg_reg[23]_0 ),
        .I5(\pixel_reg_reg[23]_1 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_2 [1]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_10
   (clk_0,
    clk_1,
    \val_reg[3]_0 ,
    context__0,
    \val_reg[3]_1 ,
    de_context__0,
    douta,
    clk,
    \pixel_reg[23]_i_3 ,
    dina,
    \pixel_reg[23]_i_3_0 ,
    \pixel_reg[23]_i_2 ,
    \pixel_reg[23]_i_2_0 ,
    \pixel_reg[23]_i_2_1 ,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output \val_reg[3]_0 ;
  output [0:0]context__0;
  output \val_reg[3]_1 ;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;
  input [1:0]\pixel_reg[23]_i_3 ;
  input [0:0]dina;
  input \pixel_reg[23]_i_3_0 ;
  input \pixel_reg[23]_i_2 ;
  input \pixel_reg[23]_i_2_0 ;
  input \pixel_reg[23]_i_2_1 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire [1:0]douta;
  wire \pixel_reg[23]_i_2 ;
  wire \pixel_reg[23]_i_2_0 ;
  wire \pixel_reg[23]_i_2_1 ;
  wire [1:0]\pixel_reg[23]_i_3 ;
  wire \pixel_reg[23]_i_3_0 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[23]_i_6 
       (.I0(context__0),
        .I1(\pixel_reg[23]_i_3 [0]),
        .I2(dina),
        .I3(\pixel_reg[23]_i_2 ),
        .I4(\pixel_reg[23]_i_2_0 ),
        .I5(\pixel_reg[23]_i_2_1 ),
        .O(\val_reg[3]_1 ));
  LUT5 #(
    .INIT(32'h00010000)) 
    \pixel_reg[23]_i_9 
       (.I0(context__0),
        .I1(\pixel_reg[23]_i_3 [1]),
        .I2(dina),
        .I3(\pixel_reg[23]_i_3 [0]),
        .I4(\pixel_reg[23]_i_3_0 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[2].genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[2].genblk1[1].regis_del/val_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[2].genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[2].genblk1[1].regis_del/val_reg[2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg[23]_i_3 [0]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_11
   (\val_reg[2]_0 ,
    \val_reg[1]_0 ,
    \val_reg[3]_0 ,
    de_context__0,
    \val_reg[2]_1 ,
    clk,
    \val_reg[1]_1 ,
    context__0,
    \val_reg[0]_0 );
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context__0;
  input \val_reg[2]_1 ;
  input clk;
  input \val_reg[1]_1 ;
  input [0:0]context__0;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[2]_1 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_1 ),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context__0),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_12
   (context__0,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    de_context__0,
    \val_reg[3]_0 ,
    clk,
    \val_reg[2]_1 ,
    \val_reg[1]_1 ,
    \val_reg[0]_0 );
  output [0:0]context__0;
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input \val_reg[2]_1 ;
  input \val_reg[1]_1 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[2]_1 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_1 ),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_13
   (dina,
    context__0,
    clk,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    de_context__0);
  output [3:0]dina;
  input [0:0]context__0;
  input clk;
  input \val_reg[2]_0 ;
  input \val_reg[1]_0 ;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [3:0]dina;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context__0),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_14
   (\val_reg[3]_0 ,
    context__0,
    de_context__0,
    dina,
    \pixel_reg[23]_i_6 ,
    douta,
    clk);
  output \val_reg[3]_0 ;
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [0:0]dina;
  input [1:0]\pixel_reg[23]_i_6 ;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire [1:0]douta;
  wire [1:0]\pixel_reg[23]_i_6 ;
  wire \val_reg[3]_0 ;

  LUT4 #(
    .INIT(16'h8000)) 
    \pixel_reg[23]_i_14 
       (.I0(context__0),
        .I1(dina),
        .I2(\pixel_reg[23]_i_6 [1]),
        .I3(\pixel_reg[23]_i_6 [0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_15
   (\val_reg[3]_0 ,
    context__0,
    de_context__0,
    \val_reg[3]_1 ,
    dina,
    clk,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [1:0]\val_reg[3]_1 ;
  input [0:0]dina;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire [1:0]\val_reg[3]_1 ;

  LUT4 #(
    .INIT(16'h0001)) 
    \pixel_reg[23]_i_18 
       (.I0(context__0),
        .I1(\val_reg[3]_1 [1]),
        .I2(dina),
        .I3(\val_reg[3]_1 [0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 [1]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_16
   (context__0,
    de_context__0,
    \val_reg[3]_0 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_17
   (clk_0,
    clk_1,
    context__0,
    de_context__0,
    douta,
    clk,
    \val_reg[3]_0 ,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;
  input [0:0]\val_reg[3]_0 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[3].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[3].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[3].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[3].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_18
   (dina,
    \val_reg[3]_0 ,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    context__0,
    de_context__0);
  output [3:0]dina;
  output \val_reg[3]_0 ;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input [2:0]context__0;
  input [0:0]de_context__0;

  wire clk;
  wire [2:0]context__0;
  wire [0:0]de_context__0;
  wire [3:0]dina;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;

  LUT4 #(
    .INIT(16'h8000)) 
    \pixel_reg[23]_i_15 
       (.I0(dina[3]),
        .I1(context__0[2]),
        .I2(context__0[1]),
        .I3(context__0[0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context__0[2]),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_19
   (\val_reg[3]_0 ,
    context__0,
    \val_reg[3]_1 ,
    de_context__0,
    dina,
    \pixel_reg[23]_i_6 ,
    sw,
    douta,
    clk);
  output \val_reg[3]_0 ;
  output [0:0]context__0;
  output \val_reg[3]_1 ;
  output [0:0]de_context__0;
  input [0:0]dina;
  input [5:0]\pixel_reg[23]_i_6 ;
  input [0:0]sw;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire [1:0]douta;
  wire [5:0]\pixel_reg[23]_i_6 ;
  wire [0:0]sw;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  LUT6 #(
    .INIT(64'h0000800000000000)) 
    \pixel_reg[23]_i_16 
       (.I0(context__0),
        .I1(\pixel_reg[23]_i_6 [2]),
        .I2(\pixel_reg[23]_i_6 [3]),
        .I3(\pixel_reg[23]_i_6 [4]),
        .I4(sw),
        .I5(\pixel_reg[23]_i_6 [5]),
        .O(\val_reg[3]_1 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \pixel_reg[23]_i_17 
       (.I0(context__0),
        .I1(dina),
        .I2(\pixel_reg[23]_i_6 [1]),
        .I3(\pixel_reg[23]_i_6 [0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_2
   (\val_reg[2] ,
    \val_reg[1] ,
    \val_reg[3]_0 ,
    context__0,
    \val_reg[3]_1 ,
    de_context__0,
    p_0_in_6,
    clk,
    \val_reg[1]_0 ,
    dina,
    \pixel_reg[23]_i_2 ,
    \val_reg[0]_0 );
  output \val_reg[2] ;
  output \val_reg[1] ;
  output \val_reg[3]_0 ;
  output [0:0]context__0;
  output \val_reg[3]_1 ;
  output [0:0]de_context__0;
  input p_0_in_6;
  input clk;
  input \val_reg[1]_0 ;
  input [0:0]dina;
  input [4:0]\pixel_reg[23]_i_2 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire p_0_in_6;
  wire [4:0]\pixel_reg[23]_i_2 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1] ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2] ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[23]_i_5 
       (.I0(context__0),
        .I1(dina),
        .I2(\pixel_reg[23]_i_2 [1]),
        .I3(\pixel_reg[23]_i_2 [2]),
        .I4(\pixel_reg[23]_i_2 [4]),
        .I5(\pixel_reg[23]_i_2 [3]),
        .O(\val_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \pixel_reg[23]_i_7 
       (.I0(context__0),
        .I1(dina),
        .I2(\pixel_reg[23]_i_2 [1]),
        .I3(\pixel_reg[23]_i_2 [2]),
        .I4(\pixel_reg[23]_i_2 [4]),
        .I5(\pixel_reg[23]_i_2 [3]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[0].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[0].genblk1[3].regis_del/val_reg[1]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\val_reg[1]_0 ),
        .Q(\val_reg[1] ));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[0].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[0].genblk1[3].regis_del/val_reg[2]_srl5 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl5 
       (.A0(1'b0),
        .A1(1'b0),
        .A2(1'b1),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(p_0_in_6),
        .Q(\val_reg[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg[23]_i_2 [0]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_20
   (\val_reg[3]_0 ,
    \val_reg[3]_1 ,
    de_context__0,
    context__0,
    \pixel_reg[23]_i_3 ,
    clk,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output [0:0]\val_reg[3]_1 ;
  output [0:0]de_context__0;
  input [3:0]context__0;
  input \pixel_reg[23]_i_3 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [3:0]context__0;
  wire [0:0]de_context__0;
  wire \pixel_reg[23]_i_3 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  LUT5 #(
    .INIT(32'h00010000)) 
    \pixel_reg[23]_i_8 
       (.I0(\val_reg[3]_1 ),
        .I1(context__0[1]),
        .I2(context__0[2]),
        .I3(context__0[3]),
        .I4(\pixel_reg[23]_i_3 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context__0[0]),
        .Q(\val_reg[3]_1 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_21
   (context__0,
    de_context__0,
    \val_reg[3]_0 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_22
   (context__0,
    de_context__0,
    \val_reg[3]_0 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_23
   (context__0,
    de_context__0,
    \val_reg[3]_0 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_24
   (\val_reg[3]_0 ,
    context,
    \val_reg[3]_1 ,
    de_context,
    \pixel_reg[0]_i_2 ,
    p_0_in0_in,
    p_0_in,
    p_0_in1_in,
    dina,
    douta,
    clk);
  output \val_reg[3]_0 ;
  output [0:0]context;
  output \val_reg[3]_1 ;
  output [0:0]de_context;
  input [2:0]\pixel_reg[0]_i_2 ;
  input p_0_in0_in;
  input p_0_in;
  input p_0_in1_in;
  input [0:0]dina;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [0:0]dina;
  wire [1:0]douta;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire [2:0]\pixel_reg[0]_i_2 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_5 
       (.I0(p_0_in1_in),
        .I1(dina),
        .I2(context),
        .I3(\pixel_reg[0]_i_2 [0]),
        .I4(\pixel_reg[0]_i_2 [2]),
        .I5(\pixel_reg[0]_i_2 [1]),
        .O(\val_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h0000000000000001)) 
    \pixel_reg[0]_i_7 
       (.I0(context),
        .I1(\pixel_reg[0]_i_2 [0]),
        .I2(\pixel_reg[0]_i_2 [1]),
        .I3(\pixel_reg[0]_i_2 [2]),
        .I4(p_0_in0_in),
        .I5(p_0_in),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_25
   (\val_reg[3]_0 ,
    de_context,
    context,
    clk,
    \val_reg[0]_0 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context;
  input [0:0]context;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_26
   (\val_reg[3]_0 ,
    de_context,
    \val_reg[3]_1 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context;
  input [0:0]\val_reg[3]_1 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]de_context;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_27
   (clk_0,
    clk_1,
    \val_reg[0]_0 ,
    \val_reg[0]_1 ,
    \val_reg[3]_0 ,
    douta,
    clk,
    \pixel_reg_reg[0] ,
    \pixel_reg_reg[0]_0 ,
    de_context,
    \pixel_reg_reg[0]_1 ,
    dina,
    \val_reg[3]_1 );
  output clk_0;
  output clk_1;
  output \val_reg[0]_0 ;
  output [0:0]\val_reg[0]_1 ;
  output [0:0]\val_reg[3]_0 ;
  input [1:0]douta;
  input clk;
  input \pixel_reg_reg[0] ;
  input \pixel_reg_reg[0]_0 ;
  input [4:0]de_context;
  input \pixel_reg_reg[0]_1 ;
  input [0:0]dina;
  input [0:0]\val_reg[3]_1 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [4:0]de_context;
  wire [0:0]dina;
  wire [1:0]douta;
  wire \pixel_reg[0]_i_10_n_0 ;
  wire \pixel_reg_reg[0] ;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire \val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_10 
       (.I0(\val_reg[0]_1 ),
        .I1(dina),
        .I2(de_context[1]),
        .I3(de_context[2]),
        .I4(de_context[4]),
        .I5(de_context[3]),
        .O(\pixel_reg[0]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h80000000)) 
    \pixel_reg[0]_i_4 
       (.I0(\pixel_reg[0]_i_10_n_0 ),
        .I1(\pixel_reg_reg[0] ),
        .I2(\pixel_reg_reg[0]_0 ),
        .I3(de_context[0]),
        .I4(\pixel_reg_reg[0]_1 ),
        .O(\val_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context[2]),
        .Q(\val_reg[0]_1 ),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_1/median_context/genblk1[1].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_1/median_context/genblk1[1].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\otwierac/part_1/median_context/genblk1[1].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_1/median_context/genblk1[1].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_28
   (dina,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    \val_reg[3]_0 ,
    \val_reg[0]_0 );
  output [3:0]dina;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input [0:0]\val_reg[3]_0 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [3:0]dina;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_29
   (\val_reg[3]_0 ,
    context,
    de_context,
    dina,
    sw,
    \pixel_reg[0]_i_2 ,
    \pixel_reg[0]_i_2_0 ,
    \pixel_reg[0]_i_2_1 ,
    douta,
    clk);
  output \val_reg[3]_0 ;
  output [0:0]context;
  output [0:0]de_context;
  input [0:0]dina;
  input [0:0]sw;
  input \pixel_reg[0]_i_2 ;
  input \pixel_reg[0]_i_2_0 ;
  input \pixel_reg[0]_i_2_1 ;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [0:0]dina;
  wire [1:0]douta;
  wire \pixel_reg[0]_i_2 ;
  wire \pixel_reg[0]_i_2_0 ;
  wire \pixel_reg[0]_i_2_1 ;
  wire [0:0]sw;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_6 
       (.I0(context),
        .I1(dina),
        .I2(sw),
        .I3(\pixel_reg[0]_i_2 ),
        .I4(\pixel_reg[0]_i_2_0 ),
        .I5(\pixel_reg[0]_i_2_1 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_3
   (dina,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    context__0,
    de_context__0);
  output [3:0]dina;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input [0:0]context__0;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [3:0]dina;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context__0),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_30
   (clk_0,
    clk_1,
    \val_reg[3]_0 ,
    context,
    de_context,
    douta,
    clk,
    \pixel_reg[0]_i_3 ,
    dina,
    \pixel_reg[0]_i_3_0 ,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output \val_reg[3]_0 ;
  output [0:0]context;
  output [0:0]de_context;
  input [1:0]douta;
  input clk;
  input [1:0]\pixel_reg[0]_i_3 ;
  input [0:0]dina;
  input \pixel_reg[0]_i_3_0 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [0:0]dina;
  wire [1:0]douta;
  wire [1:0]\pixel_reg[0]_i_3 ;
  wire \pixel_reg[0]_i_3_0 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT5 #(
    .INIT(32'h00010000)) 
    \pixel_reg[0]_i_9 
       (.I0(context),
        .I1(\pixel_reg[0]_i_3 [1]),
        .I2(dina),
        .I3(\pixel_reg[0]_i_3 [0]),
        .I4(\pixel_reg[0]_i_3_0 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_1/median_context/genblk1[2].genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_1/median_context/genblk1[2].genblk1[1].regis_del/val_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\otwierac/part_1/median_context/genblk1[2].genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_1/median_context/genblk1[2].genblk1[1].regis_del/val_reg[2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg[0]_i_3 [0]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_31
   (p_0_in_6,
    \val_reg[1]_0 ,
    \val_reg[3]_0 ,
    \val_reg[0]_0 ,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_1 ,
    context,
    de_context);
  output p_0_in_6;
  output \val_reg[1]_0 ;
  output [0:0]\val_reg[3]_0 ;
  output [0:0]\val_reg[0]_0 ;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_1 ;
  input [0:0]context;
  input [0:0]de_context;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire p_0_in_6;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(p_0_in_6),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_32
   (context,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    de_context,
    \val_reg[3]_0 ,
    clk,
    p_0_in_6,
    \val_reg[1]_1 ,
    \val_reg[0]_0 );
  output [0:0]context;
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output [0:0]de_context;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input p_0_in_6;
  input \val_reg[1]_1 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire p_0_in_6;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in_6),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_33
   (\val_reg[3]_0 ,
    dina,
    \val_reg[0]_0 ,
    context,
    de_context,
    \pixel_reg[0]_i_4 ,
    clk,
    \val_reg[2]_0 ,
    \val_reg[1]_0 );
  output \val_reg[3]_0 ;
  output [3:0]dina;
  output \val_reg[0]_0 ;
  input [2:0]context;
  input [3:0]de_context;
  input [0:0]\pixel_reg[0]_i_4 ;
  input clk;
  input \val_reg[2]_0 ;
  input \val_reg[1]_0 ;

  wire clk;
  wire [2:0]context;
  wire [3:0]de_context;
  wire [3:0]dina;
  wire [0:0]\pixel_reg[0]_i_4 ;
  wire \val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_13 
       (.I0(dina[0]),
        .I1(de_context[1]),
        .I2(\pixel_reg[0]_i_4 ),
        .I3(de_context[0]),
        .I4(de_context[3]),
        .I5(de_context[2]),
        .O(\val_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h8000)) 
    \pixel_reg[0]_i_14 
       (.I0(dina[3]),
        .I1(context[2]),
        .I2(context[1]),
        .I3(context[0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context[0]),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context[2]),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_34
   (context,
    de_context,
    douta,
    clk);
  output [0:0]context;
  output [0:0]de_context;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [1:0]douta;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_35
   (\val_reg[3]_0 ,
    context,
    de_context,
    \val_reg[3]_1 ,
    dina,
    clk,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output [0:0]context;
  output [0:0]de_context;
  input [1:0]\val_reg[3]_1 ;
  input [0:0]dina;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [0:0]dina;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire [1:0]\val_reg[3]_1 ;

  LUT4 #(
    .INIT(16'h0001)) 
    \pixel_reg[0]_i_18 
       (.I0(context),
        .I1(\val_reg[3]_1 [1]),
        .I2(dina),
        .I3(\val_reg[3]_1 [0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 [1]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_36
   (context,
    de_context,
    \val_reg[3]_0 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]context;
  output [0:0]de_context;
  input [0:0]\val_reg[3]_0 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_37
   (clk_0,
    clk_1,
    \val_reg[3]_0 ,
    context,
    de_context,
    douta,
    clk,
    \val_reg[3]_1 ,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output \val_reg[3]_0 ;
  output [0:0]context;
  output [0:0]de_context;
  input [1:0]douta;
  input clk;
  input [2:0]\val_reg[3]_1 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [1:0]douta;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire [2:0]\val_reg[3]_1 ;

  LUT4 #(
    .INIT(16'h8000)) 
    \pixel_reg[0]_i_15 
       (.I0(context),
        .I1(\val_reg[3]_1 [2]),
        .I2(\val_reg[3]_1 [1]),
        .I3(\val_reg[3]_1 [0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_1/median_context/genblk1[3].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_1/median_context/genblk1[3].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\otwierac/part_1/median_context/genblk1[3].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_1/median_context/genblk1[3].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 [2]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_38
   (dina,
    \val_reg[3]_0 ,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    context,
    de_context);
  output [3:0]dina;
  output \val_reg[3]_0 ;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input [5:0]context;
  input [0:0]de_context;

  wire clk;
  wire [5:0]context;
  wire [0:0]de_context;
  wire [3:0]dina;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_16 
       (.I0(dina[3]),
        .I1(context[1]),
        .I2(context[2]),
        .I3(context[3]),
        .I4(context[5]),
        .I5(context[4]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context[0]),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_39
   (\val_reg[3]_0 ,
    context,
    \val_reg[0]_0 ,
    de_context,
    dina,
    \pixel_reg[0]_i_8 ,
    \pixel_reg[0]_i_4 ,
    douta,
    clk);
  output \val_reg[3]_0 ;
  output [0:0]context;
  output \val_reg[0]_0 ;
  output [0:0]de_context;
  input [1:0]dina;
  input [1:0]\pixel_reg[0]_i_8 ;
  input [3:0]\pixel_reg[0]_i_4 ;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [1:0]dina;
  wire [1:0]douta;
  wire [3:0]\pixel_reg[0]_i_4 ;
  wire [1:0]\pixel_reg[0]_i_8 ;
  wire \val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_12 
       (.I0(de_context),
        .I1(\pixel_reg[0]_i_4 [1]),
        .I2(\pixel_reg[0]_i_4 [0]),
        .I3(dina[0]),
        .I4(\pixel_reg[0]_i_4 [3]),
        .I5(\pixel_reg[0]_i_4 [2]),
        .O(\val_reg[0]_0 ));
  LUT4 #(
    .INIT(16'h0001)) 
    \pixel_reg[0]_i_17 
       (.I0(context),
        .I1(dina[1]),
        .I2(\pixel_reg[0]_i_8 [1]),
        .I3(\pixel_reg[0]_i_8 [0]),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_4
   (\val_reg[3]_0 ,
    de_context__0,
    douta,
    clk);
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_40
   (\val_reg[3]_0 ,
    context,
    \val_reg[0]_0 ,
    \pixel_reg[0]_i_3 ,
    \pixel_reg[0]_i_3_0 ,
    clk,
    de_context);
  output \val_reg[3]_0 ;
  output [0:0]context;
  output [0:0]\val_reg[0]_0 ;
  input [3:0]\pixel_reg[0]_i_3 ;
  input \pixel_reg[0]_i_3_0 ;
  input clk;
  input [0:0]de_context;

  wire clk;
  wire [0:0]context;
  wire [0:0]de_context;
  wire [3:0]\pixel_reg[0]_i_3 ;
  wire \pixel_reg[0]_i_3_0 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT5 #(
    .INIT(32'h00010000)) 
    \pixel_reg[0]_i_8 
       (.I0(context),
        .I1(\pixel_reg[0]_i_3 [1]),
        .I2(\pixel_reg[0]_i_3 [2]),
        .I3(\pixel_reg[0]_i_3 [3]),
        .I4(\pixel_reg[0]_i_3_0 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg[0]_i_3 [0]),
        .Q(context),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_41
   (\val_reg[3]_0 ,
    \val_reg[0]_0 ,
    context,
    clk,
    \val_reg[0]_1 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]\val_reg[0]_0 ;
  input [0:0]context;
  input clk;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire [0:0]context;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(context),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_42
   (\val_reg[3]_0 ,
    \val_reg[0]_0 ,
    \val_reg[3]_1 ,
    clk,
    \val_reg[0]_1 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]\val_reg[0]_0 ;
  input [0:0]\val_reg[3]_1 ;
  input clk;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_43
   (\val_reg[3]_0 ,
    \val_reg[0]_0 ,
    \val_reg[3]_1 ,
    clk,
    \val_reg[0]_1 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]\val_reg[0]_0 ;
  input [0:0]\val_reg[3]_1 ;
  input clk;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_5
   (\val_reg[3]_0 ,
    de_context__0,
    \val_reg[3]_1 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_1 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_51
   (p_1_in,
    de_context__0,
    \fin_sum[2]_i_2 ,
    \val_reg[3]_0 ,
    D,
    clk,
    \fin_sum_reg[2] ,
    \fin_sum_reg[2]_0 ,
    \fin_sum_reg[2]_1 ,
    \fin_sum_reg[2]_2 ,
    \fin_sum_reg[2]_3 ,
    \fin_sum_reg[2]_4 ,
    \fin_sum_reg[2]_5 ,
    \fin_sum[4]_i_7_0 ,
    \fin_sum[4]_i_7_1 ,
    \fin_sum[4]_i_7_2 ,
    \fin_sum[4]_i_7_3 ,
    \fin_sum[4]_i_7_4 );
  output p_1_in;
  output [0:0]de_context__0;
  output [0:0]\fin_sum[2]_i_2 ;
  output \val_reg[3]_0 ;
  input [1:0]D;
  input clk;
  input \fin_sum_reg[2] ;
  input \fin_sum_reg[2]_0 ;
  input \fin_sum_reg[2]_1 ;
  input \fin_sum_reg[2]_2 ;
  input \fin_sum_reg[2]_3 ;
  input \fin_sum_reg[2]_4 ;
  input \fin_sum_reg[2]_5 ;
  input \fin_sum[4]_i_7_0 ;
  input \fin_sum[4]_i_7_1 ;
  input \fin_sum[4]_i_7_2 ;
  input \fin_sum[4]_i_7_3 ;
  input \fin_sum[4]_i_7_4 ;

  wire [1:0]D;
  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]\fin_sum[2]_i_2 ;
  wire \fin_sum[4]_i_13_n_0 ;
  wire \fin_sum[4]_i_7_0 ;
  wire \fin_sum[4]_i_7_1 ;
  wire \fin_sum[4]_i_7_2 ;
  wire \fin_sum[4]_i_7_3 ;
  wire \fin_sum[4]_i_7_4 ;
  wire \fin_sum_reg[2] ;
  wire \fin_sum_reg[2]_0 ;
  wire \fin_sum_reg[2]_1 ;
  wire \fin_sum_reg[2]_2 ;
  wire \fin_sum_reg[2]_3 ;
  wire \fin_sum_reg[2]_4 ;
  wire \fin_sum_reg[2]_5 ;
  wire p_1_in;
  wire \val_reg[3]_0 ;

  LUT3 #(
    .INIT(8'h69)) 
    \fin_sum[2]_i_1 
       (.I0(\val_reg[3]_0 ),
        .I1(\fin_sum_reg[2] ),
        .I2(\fin_sum_reg[2]_0 ),
        .O(\fin_sum[2]_i_2 ));
  LUT6 #(
    .INIT(64'h06606FF66FF60660)) 
    \fin_sum[4]_i_13 
       (.I0(p_1_in),
        .I1(\fin_sum[4]_i_7_0 ),
        .I2(\fin_sum[4]_i_7_1 ),
        .I3(\fin_sum[4]_i_7_2 ),
        .I4(\fin_sum[4]_i_7_3 ),
        .I5(\fin_sum[4]_i_7_4 ),
        .O(\fin_sum[4]_i_13_n_0 ));
  LUT6 #(
    .INIT(64'h7DD7D77DD77D7DD7)) 
    \fin_sum[4]_i_7 
       (.I0(\fin_sum[4]_i_13_n_0 ),
        .I1(\fin_sum_reg[2]_1 ),
        .I2(\fin_sum_reg[2]_2 ),
        .I3(\fin_sum_reg[2]_3 ),
        .I4(\fin_sum_reg[2]_4 ),
        .I5(\fin_sum_reg[2]_5 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(D[1]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(D[0]),
        .Q(p_1_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_52
   (\val_reg[3]_0 ,
    de_context__0,
    \val_reg[0]_0 ,
    p_1_in,
    clk,
    \pixel_reg[0]_i_4 ,
    de_context,
    dina);
  output \val_reg[3]_0 ;
  output [0:0]de_context__0;
  output \val_reg[0]_0 ;
  input p_1_in;
  input clk;
  input [2:0]\pixel_reg[0]_i_4 ;
  input [0:0]de_context;
  input [0:0]dina;

  wire clk;
  wire [0:0]de_context;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire p_1_in;
  wire [2:0]\pixel_reg[0]_i_4 ;
  wire \val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \pixel_reg[0]_i_11 
       (.I0(de_context__0),
        .I1(\pixel_reg[0]_i_4 [1]),
        .I2(de_context),
        .I3(\pixel_reg[0]_i_4 [0]),
        .I4(dina),
        .I5(\pixel_reg[0]_i_4 [2]),
        .O(\val_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg[0]_i_4 [0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_1_in),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_53
   (\val_reg[3]_0 ,
    \val_reg[0]_0 ,
    \val_reg[3]_1 ,
    sw_0_sp_1,
    \val_reg[3]_2 ,
    clk,
    de_context__0,
    p_0_in4_in,
    p_0_in3_in,
    \fin_sum_reg[0] ,
    \fin_sum_reg[0]_0 ,
    \fin_sum[1]_i_3_0 ,
    p_1_in,
    \pixel_reg_reg[0] ,
    \pixel_reg_reg[0]_0 ,
    sw,
    \pixel_reg_reg[0]_1 ,
    \pixel_reg_reg[0]_2 ,
    pixel_reg);
  output \val_reg[3]_0 ;
  output [0:0]\val_reg[0]_0 ;
  output \val_reg[3]_1 ;
  output sw_0_sp_1;
  input \val_reg[3]_2 ;
  input clk;
  input [0:0]de_context__0;
  input p_0_in4_in;
  input p_0_in3_in;
  input \fin_sum_reg[0] ;
  input \fin_sum_reg[0]_0 ;
  input \fin_sum[1]_i_3_0 ;
  input p_1_in;
  input \pixel_reg_reg[0] ;
  input \pixel_reg_reg[0]_0 ;
  input [0:0]sw;
  input \pixel_reg_reg[0]_1 ;
  input \pixel_reg_reg[0]_2 ;
  input pixel_reg;

  wire clk;
  wire [0:0]de_context__0;
  wire \fin_sum[1]_i_3_0 ;
  wire \fin_sum[1]_i_6_n_0 ;
  wire \fin_sum_reg[0] ;
  wire \fin_sum_reg[0]_0 ;
  wire p_0_in3_in;
  wire p_0_in4_in;
  wire p_1_in;
  wire pixel_reg;
  wire \pixel_reg[0]_i_2_n_0 ;
  wire \pixel_reg_reg[0] ;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire \pixel_reg_reg[0]_2 ;
  wire [0:0]sw;
  wire sw_0_sn_1;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  assign sw_0_sp_1 = sw_0_sn_1;
  LUT5 #(
    .INIT(32'h96696996)) 
    \fin_sum[1]_i_3 
       (.I0(\fin_sum[1]_i_6_n_0 ),
        .I1(p_0_in4_in),
        .I2(p_0_in3_in),
        .I3(\fin_sum_reg[0] ),
        .I4(\fin_sum_reg[0]_0 ),
        .O(\val_reg[3]_1 ));
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[1]_i_6 
       (.I0(\val_reg[3]_0 ),
        .I1(\val_reg[3]_2 ),
        .I2(\fin_sum[1]_i_3_0 ),
        .O(\fin_sum[1]_i_6_n_0 ));
  LUT5 #(
    .INIT(32'hABFFAB00)) 
    \pixel_reg[0]_i_1 
       (.I0(\pixel_reg[0]_i_2_n_0 ),
        .I1(sw),
        .I2(\pixel_reg_reg[0]_1 ),
        .I3(\pixel_reg_reg[0]_2 ),
        .I4(pixel_reg),
        .O(sw_0_sn_1));
  LUT5 #(
    .INIT(32'h80000000)) 
    \pixel_reg[0]_i_2 
       (.I0(\val_reg[3]_0 ),
        .I1(\val_reg[3]_2 ),
        .I2(p_1_in),
        .I3(\pixel_reg_reg[0] ),
        .I4(\pixel_reg_reg[0]_0 ),
        .O(\pixel_reg[0]_i_2_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_2 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_54
   (\val_reg[3]_0 ,
    \val_reg[0]_0 ,
    \val_reg[1] ,
    \val_reg[2] ,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    E,
    \val_reg[3]_3 ,
    clk,
    de_context__0,
    \v_sync_mux[1] ,
    \h_sync_mux[1] ,
    \fin_sum[4]_i_17 ,
    \fin_sum[4]_i_7 ,
    \fin_sum[4]_i_7_0 ,
    \pixel_reg_reg[0] ,
    \pixel_reg_reg[0]_0 ,
    \pixel_reg_reg[0]_1 ,
    dina);
  output \val_reg[3]_0 ;
  output [0:0]\val_reg[0]_0 ;
  output \val_reg[1] ;
  output \val_reg[2] ;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output [0:0]E;
  input \val_reg[3]_3 ;
  input clk;
  input [4:0]de_context__0;
  input \v_sync_mux[1] ;
  input \h_sync_mux[1] ;
  input \fin_sum[4]_i_17 ;
  input \fin_sum[4]_i_7 ;
  input \fin_sum[4]_i_7_0 ;
  input \pixel_reg_reg[0] ;
  input \pixel_reg_reg[0]_0 ;
  input \pixel_reg_reg[0]_1 ;
  input [0:0]dina;

  wire [0:0]E;
  wire clk;
  wire [4:0]de_context__0;
  wire [0:0]dina;
  wire \fin_sum[4]_i_17 ;
  wire \fin_sum[4]_i_3_n_0 ;
  wire \fin_sum[4]_i_7 ;
  wire \fin_sum[4]_i_7_0 ;
  wire \h_sync_mux[1] ;
  wire \pixel_reg_reg[0] ;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire \v_sync_mux[1] ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1] ;
  wire \val_reg[2] ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;
  wire \val_reg[3]_3 ;

  LUT5 #(
    .INIT(32'h80000000)) 
    \fin_sum[4]_i_1 
       (.I0(\fin_sum[4]_i_3_n_0 ),
        .I1(\pixel_reg_reg[0] ),
        .I2(\pixel_reg_reg[0]_0 ),
        .I3(de_context__0[0]),
        .I4(\pixel_reg_reg[0]_1 ),
        .O(E));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT5 #(
    .INIT(32'hFF969600)) 
    \fin_sum[4]_i_15 
       (.I0(\val_reg[3]_0 ),
        .I1(\fin_sum[4]_i_17 ),
        .I2(\val_reg[3]_3 ),
        .I3(\fin_sum[4]_i_7 ),
        .I4(\fin_sum[4]_i_7_0 ),
        .O(\val_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair3" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_24 
       (.I0(\val_reg[3]_0 ),
        .I1(\val_reg[3]_3 ),
        .I2(\fin_sum[4]_i_17 ),
        .O(\val_reg[3]_2 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fin_sum[4]_i_3 
       (.I0(\val_reg[0]_0 ),
        .I1(dina),
        .I2(de_context__0[1]),
        .I3(de_context__0[2]),
        .I4(de_context__0[4]),
        .I5(de_context__0[3]),
        .O(\fin_sum[4]_i_3_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0[2]),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  (* srl_bus_name = "inst/\median/median_context/genblk1[0].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[0].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\v_sync_mux[1] ),
        .Q(\val_reg[1] ));
  (* srl_bus_name = "inst/\median/median_context/genblk1[0].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[0].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(\h_sync_mux[1] ),
        .Q(\val_reg[2] ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_3 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_55
   (\val_reg[3]_0 ,
    dina,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    \val_reg[3]_3 ,
    clk,
    \val_reg[0]_0 ,
    \val_reg[1]_0 ,
    \val_reg[2]_0 ,
    p_0_in3_in,
    p_0_in4_in,
    \fin_sum[4]_i_13 ,
    \fin_sum[4]_i_13_0 ,
    p_1_in,
    \pixel_reg_reg[0] ,
    \pixel_reg_reg[0]_0 ,
    \pixel_reg_reg[0]_1 );
  output \val_reg[3]_0 ;
  output [2:0]dina;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  input \val_reg[3]_3 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;
  input \val_reg[1]_0 ;
  input \val_reg[2]_0 ;
  input p_0_in3_in;
  input p_0_in4_in;
  input \fin_sum[4]_i_13 ;
  input \fin_sum[4]_i_13_0 ;
  input p_1_in;
  input \pixel_reg_reg[0] ;
  input \pixel_reg_reg[0]_0 ;
  input \pixel_reg_reg[0]_1 ;

  wire clk;
  wire [2:0]dina;
  wire \fin_sum[4]_i_13 ;
  wire \fin_sum[4]_i_13_0 ;
  wire p_0_in3_in;
  wire p_0_in4_in;
  wire p_1_in;
  wire \pixel_reg_reg[0] ;
  wire \pixel_reg_reg[0]_0 ;
  wire \pixel_reg_reg[0]_1 ;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;
  wire \val_reg[3]_3 ;

  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \fin_sum[4]_i_28 
       (.I0(\val_reg[3]_0 ),
        .I1(p_0_in3_in),
        .I2(p_0_in4_in),
        .I3(\val_reg[3]_3 ),
        .I4(\fin_sum[4]_i_13 ),
        .I5(\fin_sum[4]_i_13_0 ),
        .O(\val_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h0100000000000000)) 
    \pixel_reg[0]_i_3 
       (.I0(\val_reg[3]_0 ),
        .I1(\val_reg[3]_3 ),
        .I2(p_1_in),
        .I3(\pixel_reg_reg[0] ),
        .I4(\pixel_reg_reg[0]_0 ),
        .I5(\pixel_reg_reg[0]_1 ),
        .O(\val_reg[3]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_3 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_56
   (p_0_in3_in,
    de_context__0,
    douta,
    clk);
  output p_0_in3_in;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire p_0_in3_in;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(p_0_in3_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_57
   (\val_reg[3]_0 ,
    p_0_in4_in,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    de_context__0,
    p_0_in3_in,
    \fin_sum[4]_i_11 ,
    \fin_sum[4]_i_7 ,
    \fin_sum[4]_i_7_0 ,
    \fin_sum[4]_i_7_1 ,
    \fin_sum[4]_i_7_2 ,
    clk,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output p_0_in4_in;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output [0:0]de_context__0;
  input p_0_in3_in;
  input \fin_sum[4]_i_11 ;
  input \fin_sum[4]_i_7 ;
  input \fin_sum[4]_i_7_0 ;
  input \fin_sum[4]_i_7_1 ;
  input \fin_sum[4]_i_7_2 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]de_context__0;
  wire \fin_sum[4]_i_11 ;
  wire \fin_sum[4]_i_7 ;
  wire \fin_sum[4]_i_7_0 ;
  wire \fin_sum[4]_i_7_1 ;
  wire \fin_sum[4]_i_7_2 ;
  wire p_0_in3_in;
  wire p_0_in4_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  LUT5 #(
    .INIT(32'h96696996)) 
    \fin_sum[4]_i_17 
       (.I0(\val_reg[3]_2 ),
        .I1(\fin_sum[4]_i_7 ),
        .I2(\fin_sum[4]_i_7_0 ),
        .I3(\fin_sum[4]_i_7_1 ),
        .I4(\fin_sum[4]_i_7_2 ),
        .O(\val_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_25 
       (.I0(p_0_in4_in),
        .I1(p_0_in3_in),
        .I2(\fin_sum[4]_i_11 ),
        .O(\val_reg[3]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair4" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[4]_i_30 
       (.I0(p_0_in4_in),
        .I1(p_0_in3_in),
        .I2(\fin_sum[4]_i_11 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in3_in),
        .Q(p_0_in4_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_58
   (\val_reg[3]_0 ,
    p_0_in5_in,
    de_context__0,
    p_0_in6_in,
    dina,
    \fin_sum_reg[3] ,
    \fin_sum_reg[3]_0 ,
    p_0_in4_in,
    clk,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output p_0_in5_in;
  output [0:0]de_context__0;
  input p_0_in6_in;
  input [0:0]dina;
  input \fin_sum_reg[3] ;
  input \fin_sum_reg[3]_0 ;
  input p_0_in4_in;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire \fin_sum_reg[3] ;
  wire \fin_sum_reg[3]_0 ;
  wire p_0_in4_in;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \fin_sum[4]_i_10 
       (.I0(p_0_in5_in),
        .I1(p_0_in6_in),
        .I2(dina),
        .I3(\fin_sum_reg[3] ),
        .I4(\fin_sum_reg[3]_0 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in4_in),
        .Q(p_0_in5_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_59
   (clk_0,
    clk_1,
    p_0_in6_in,
    de_context__0,
    douta,
    clk,
    p_0_in5_in,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output p_0_in6_in;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;
  input p_0_in5_in;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire [0:0]\val_reg[0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  (* srl_bus_name = "inst/\median/median_context/genblk1[1].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[1].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\median/median_context/genblk1[1].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[1].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in5_in),
        .Q(p_0_in6_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_6
   (\val_reg[3]_0 ,
    de_context__0,
    \val_reg[3]_1 ,
    clk,
    \val_reg[0]_0 );
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context__0;
  input [0:0]\val_reg[3]_1 ;
  input clk;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_60
   (dina,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[0]_0 ,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    p_0_in6_in,
    p_0_in5_in,
    de_context__0,
    \pixel_reg_reg[0] );
  output [3:0]dina;
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output \val_reg[0]_0 ;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input p_0_in6_in;
  input p_0_in5_in;
  input [3:0]de_context__0;
  input [0:0]\pixel_reg_reg[0] ;

  wire clk;
  wire [3:0]de_context__0;
  wire [3:0]dina;
  wire p_0_in5_in;
  wire p_0_in6_in;
  wire [0:0]\pixel_reg_reg[0] ;
  wire \val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[1]_i_7 
       (.I0(dina[3]),
        .I1(p_0_in6_in),
        .I2(p_0_in5_in),
        .O(\val_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair5" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_23 
       (.I0(dina[3]),
        .I1(p_0_in6_in),
        .I2(p_0_in5_in),
        .O(\val_reg[3]_1 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fin_sum[4]_i_6 
       (.I0(dina[0]),
        .I1(de_context__0[2]),
        .I2(de_context__0[0]),
        .I3(de_context__0[1]),
        .I4(\pixel_reg_reg[0] ),
        .I5(de_context__0[3]),
        .O(\val_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0[1]),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in6_in),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_61
   (\val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    p_0_in8_in,
    de_context__0,
    \fin_sum_reg[3] ,
    \fin_sum_reg[3]_0 ,
    \fin_sum_reg[3]_1 ,
    \fin_sum_reg[3]_2 ,
    \fin_sum_reg[3]_3 ,
    \fin_sum_reg[3]_4 ,
    \fin_sum_reg[3]_5 ,
    \fin_sum_reg[3]_6 ,
    p_0_in9_in,
    p_0_in10_in,
    \fin_sum[4]_i_7 ,
    \fin_sum[4]_i_7_0 ,
    douta,
    clk);
  output [1:0]\val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output p_0_in8_in;
  output [0:0]de_context__0;
  input \fin_sum_reg[3] ;
  input \fin_sum_reg[3]_0 ;
  input \fin_sum_reg[3]_1 ;
  input \fin_sum_reg[3]_2 ;
  input \fin_sum_reg[3]_3 ;
  input \fin_sum_reg[3]_4 ;
  input \fin_sum_reg[3]_5 ;
  input \fin_sum_reg[3]_6 ;
  input p_0_in9_in;
  input p_0_in10_in;
  input \fin_sum[4]_i_7 ;
  input \fin_sum[4]_i_7_0 ;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire \fin_sum[4]_i_12_n_0 ;
  wire \fin_sum[4]_i_7 ;
  wire \fin_sum[4]_i_7_0 ;
  wire \fin_sum_reg[3] ;
  wire \fin_sum_reg[3]_0 ;
  wire \fin_sum_reg[3]_1 ;
  wire \fin_sum_reg[3]_2 ;
  wire \fin_sum_reg[3]_3 ;
  wire \fin_sum_reg[3]_4 ;
  wire \fin_sum_reg[3]_5 ;
  wire \fin_sum_reg[3]_6 ;
  wire p_0_in10_in;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire [1:0]\val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  LUT6 #(
    .INIT(64'h244D4DDB4DDBDBB2)) 
    \fin_sum[3]_i_1 
       (.I0(\val_reg[3]_1 ),
        .I1(\fin_sum_reg[3] ),
        .I2(\fin_sum_reg[3]_0 ),
        .I3(\fin_sum_reg[3]_1 ),
        .I4(\fin_sum[4]_i_12_n_0 ),
        .I5(\fin_sum_reg[3]_2 ),
        .O(\val_reg[3]_0 [0]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_12 
       (.I0(\val_reg[3]_2 ),
        .I1(\fin_sum_reg[3]_3 ),
        .I2(\fin_sum_reg[3]_4 ),
        .O(\fin_sum[4]_i_12_n_0 ));
  LUT5 #(
    .INIT(32'hFF969600)) 
    \fin_sum[4]_i_16 
       (.I0(p_0_in8_in),
        .I1(p_0_in9_in),
        .I2(p_0_in10_in),
        .I3(\fin_sum[4]_i_7 ),
        .I4(\fin_sum[4]_i_7_0 ),
        .O(\val_reg[3]_2 ));
  LUT6 #(
    .INIT(64'hFDD4D440D4404000)) 
    \fin_sum[4]_i_2 
       (.I0(\fin_sum_reg[3] ),
        .I1(\val_reg[3]_1 ),
        .I2(\fin_sum_reg[3]_0 ),
        .I3(\fin_sum_reg[3]_1 ),
        .I4(\fin_sum_reg[3]_2 ),
        .I5(\fin_sum[4]_i_12_n_0 ),
        .O(\val_reg[3]_0 [1]));
  (* SOFT_HLUTNM = "soft_lutpair6" *) 
  LUT5 #(
    .INIT(32'hFF969600)) 
    \fin_sum[4]_i_8 
       (.I0(\val_reg[3]_2 ),
        .I1(\fin_sum_reg[3]_3 ),
        .I2(\fin_sum_reg[3]_4 ),
        .I3(\fin_sum_reg[3]_5 ),
        .I4(\fin_sum_reg[3]_6 ),
        .O(\val_reg[3]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(p_0_in8_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_62
   (clk_0,
    clk_1,
    p_0_in9_in,
    de_context__0,
    douta,
    clk,
    p_0_in8_in,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output p_0_in9_in;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;
  input p_0_in8_in;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire [0:0]\val_reg[0]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  (* srl_bus_name = "inst/\median/median_context/genblk1[2].genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[2].genblk1[1].regis_del/val_reg[1]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\median/median_context/genblk1[2].genblk1[1].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[2].genblk1[1].regis_del/val_reg[2]_srl2 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl2 
       (.A0(1'b1),
        .A1(1'b0),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in8_in),
        .Q(p_0_in9_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_63
   (\val_reg[2]_0 ,
    \val_reg[1]_0 ,
    \val_reg[3]_0 ,
    p_0_in10_in,
    \val_reg[3]_1 ,
    \val_reg[0]_0 ,
    \val_reg[2]_1 ,
    clk,
    \val_reg[1]_1 ,
    p_0_in13_in,
    dina,
    p_0_in11_in,
    \fin_sum_reg[0] ,
    p_0_in9_in,
    p_0_in8_in,
    de_context__0);
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output \val_reg[3]_0 ;
  output p_0_in10_in;
  output \val_reg[3]_1 ;
  output [0:0]\val_reg[0]_0 ;
  input \val_reg[2]_1 ;
  input clk;
  input \val_reg[1]_1 ;
  input p_0_in13_in;
  input [0:0]dina;
  input p_0_in11_in;
  input \fin_sum_reg[0] ;
  input p_0_in9_in;
  input p_0_in8_in;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire \fin_sum[1]_i_8_n_0 ;
  wire \fin_sum_reg[0] ;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in13_in;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[2]_1 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  LUT5 #(
    .INIT(32'h96696996)) 
    \fin_sum[1]_i_4 
       (.I0(\fin_sum[1]_i_8_n_0 ),
        .I1(p_0_in13_in),
        .I2(dina),
        .I3(p_0_in11_in),
        .I4(\fin_sum_reg[0] ),
        .O(\val_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[1]_i_8 
       (.I0(p_0_in10_in),
        .I1(p_0_in9_in),
        .I2(p_0_in8_in),
        .O(\fin_sum[1]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair7" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_21 
       (.I0(p_0_in10_in),
        .I1(p_0_in9_in),
        .I2(p_0_in8_in),
        .O(\val_reg[3]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_1 ),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in9_in),
        .Q(p_0_in10_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_64
   (\val_reg[3]_0 ,
    p_0_in11_in,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    de_context__0,
    dina,
    p_0_in13_in,
    p_0_in8_in,
    p_0_in9_in,
    p_0_in10_in,
    clk,
    \val_reg[2]_1 ,
    \val_reg[1]_1 ,
    \val_reg[0]_0 );
  output \val_reg[3]_0 ;
  output p_0_in11_in;
  output \val_reg[2]_0 ;
  output \val_reg[1]_0 ;
  output [0:0]de_context__0;
  input [0:0]dina;
  input p_0_in13_in;
  input p_0_in8_in;
  input p_0_in9_in;
  input p_0_in10_in;
  input clk;
  input \val_reg[2]_1 ;
  input \val_reg[1]_1 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire p_0_in10_in;
  wire p_0_in11_in;
  wire p_0_in13_in;
  wire p_0_in8_in;
  wire p_0_in9_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[1]_1 ;
  wire \val_reg[2]_0 ;
  wire \val_reg[2]_1 ;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \fin_sum[4]_i_27 
       (.I0(p_0_in11_in),
        .I1(dina),
        .I2(p_0_in13_in),
        .I3(p_0_in8_in),
        .I4(p_0_in9_in),
        .I5(p_0_in10_in),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_1 ),
        .Q(\val_reg[1]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_1 ),
        .Q(\val_reg[2]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in10_in),
        .Q(p_0_in11_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_65
   (dina,
    p_0_in11_in,
    clk,
    \val_reg[2]_0 ,
    \val_reg[1]_0 ,
    de_context__0);
  output [3:0]dina;
  input p_0_in11_in;
  input clk;
  input \val_reg[2]_0 ;
  input \val_reg[1]_0 ;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]de_context__0;
  wire [3:0]dina;
  wire p_0_in11_in;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in11_in),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_66
   (\val_reg[3]_0 ,
    p_0_in13_in,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    \val_reg[0]_0 ,
    de_context__0,
    dina,
    p_0_in11_in,
    \fin_sum_reg[3] ,
    \fin_sum_reg[3]_0 ,
    \fin_sum_reg[3]_1 ,
    \fin_sum_reg[3]_2 ,
    \pixel_reg_reg[0] ,
    douta,
    clk);
  output \val_reg[3]_0 ;
  output p_0_in13_in;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output \val_reg[0]_0 ;
  output [0:0]de_context__0;
  input [1:0]dina;
  input p_0_in11_in;
  input \fin_sum_reg[3] ;
  input \fin_sum_reg[3]_0 ;
  input \fin_sum_reg[3]_1 ;
  input \fin_sum_reg[3]_2 ;
  input [3:0]\pixel_reg_reg[0] ;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]de_context__0;
  wire [1:0]dina;
  wire [1:0]douta;
  wire \fin_sum_reg[3] ;
  wire \fin_sum_reg[3]_0 ;
  wire \fin_sum_reg[3]_1 ;
  wire \fin_sum_reg[3]_2 ;
  wire p_0_in11_in;
  wire p_0_in13_in;
  wire [3:0]\pixel_reg_reg[0] ;
  wire \val_reg[0]_0 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  LUT5 #(
    .INIT(32'hFF969600)) 
    \fin_sum[4]_i_11 
       (.I0(\val_reg[3]_2 ),
        .I1(\fin_sum_reg[3] ),
        .I2(\fin_sum_reg[3]_0 ),
        .I3(\fin_sum_reg[3]_1 ),
        .I4(\fin_sum_reg[3]_2 ),
        .O(\val_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_22 
       (.I0(p_0_in13_in),
        .I1(dina[1]),
        .I2(p_0_in11_in),
        .O(\val_reg[3]_2 ));
  (* SOFT_HLUTNM = "soft_lutpair8" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[4]_i_31 
       (.I0(p_0_in13_in),
        .I1(dina[1]),
        .I2(p_0_in11_in),
        .O(\val_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fin_sum[4]_i_5 
       (.I0(de_context__0),
        .I1(\pixel_reg_reg[0] [1]),
        .I2(\pixel_reg_reg[0] [0]),
        .I3(dina[0]),
        .I4(\pixel_reg_reg[0] [3]),
        .I5(\pixel_reg_reg[0] [2]),
        .O(\val_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(p_0_in13_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_67
   (\val_reg[3]_0 ,
    p_0_in14_in,
    \val_reg[0]_0 ,
    p_0_in15_in,
    p_0_in16_in,
    \fin_sum_reg[3] ,
    \fin_sum_reg[3]_0 ,
    p_0_in13_in,
    clk,
    de_context__0);
  output \val_reg[3]_0 ;
  output p_0_in14_in;
  output [0:0]\val_reg[0]_0 ;
  input p_0_in15_in;
  input p_0_in16_in;
  input \fin_sum_reg[3] ;
  input \fin_sum_reg[3]_0 ;
  input p_0_in13_in;
  input clk;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]de_context__0;
  wire \fin_sum_reg[3] ;
  wire \fin_sum_reg[3]_0 ;
  wire p_0_in13_in;
  wire p_0_in14_in;
  wire p_0_in15_in;
  wire p_0_in16_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT5 #(
    .INIT(32'hFFE8E800)) 
    \fin_sum[4]_i_9 
       (.I0(p_0_in14_in),
        .I1(p_0_in15_in),
        .I2(p_0_in16_in),
        .I3(\fin_sum_reg[3] ),
        .I4(\fin_sum_reg[3]_0 ),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in13_in),
        .Q(p_0_in14_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_68
   (p_0_in15_in,
    \val_reg[0]_0 ,
    p_0_in14_in,
    clk,
    \val_reg[0]_1 );
  output p_0_in15_in;
  output [0:0]\val_reg[0]_0 ;
  input p_0_in14_in;
  input clk;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire p_0_in14_in;
  wire p_0_in15_in;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in14_in),
        .Q(p_0_in15_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_69
   (clk_0,
    clk_1,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    p_0_in16_in,
    \val_reg[3]_2 ,
    \val_reg[0]_0 ,
    douta,
    clk,
    p_0_in19_in,
    p_0_in18_in,
    dina,
    \fin_sum[4]_i_7 ,
    p_0_in15_in,
    p_0_in14_in,
    \val_reg[0]_1 );
  output clk_0;
  output clk_1;
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output p_0_in16_in;
  output \val_reg[3]_2 ;
  output [0:0]\val_reg[0]_0 ;
  input [1:0]douta;
  input clk;
  input p_0_in19_in;
  input p_0_in18_in;
  input [0:0]dina;
  input \fin_sum[4]_i_7 ;
  input p_0_in15_in;
  input p_0_in14_in;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]dina;
  wire [1:0]douta;
  wire \fin_sum[4]_i_7 ;
  wire p_0_in14_in;
  wire p_0_in15_in;
  wire p_0_in16_in;
  wire p_0_in18_in;
  wire p_0_in19_in;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[1]_i_9 
       (.I0(p_0_in16_in),
        .I1(p_0_in15_in),
        .I2(p_0_in14_in),
        .O(\val_reg[3]_2 ));
  LUT5 #(
    .INIT(32'hA995566A)) 
    \fin_sum[4]_i_14 
       (.I0(\val_reg[3]_1 ),
        .I1(p_0_in19_in),
        .I2(p_0_in18_in),
        .I3(dina),
        .I4(\fin_sum[4]_i_7 ),
        .O(\val_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair9" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_29 
       (.I0(p_0_in16_in),
        .I1(p_0_in15_in),
        .I2(p_0_in14_in),
        .O(\val_reg[3]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  (* srl_bus_name = "inst/\median/median_context/genblk1[3].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[3].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\median/median_context/genblk1[3].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\median/median_context/genblk1[3].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in15_in),
        .Q(p_0_in16_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_7
   (clk_0,
    clk_1,
    \val_reg[3]_0 ,
    de_context__0,
    douta,
    clk,
    \val_reg[3]_1 ,
    \val_reg[0]_0 );
  output clk_0;
  output clk_1;
  output [0:0]\val_reg[3]_0 ;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;
  input [0:0]\val_reg[3]_1 ;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire clk_0;
  wire clk_1;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;
  wire [0:0]\val_reg[3]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(de_context__0),
        .R(1'b0));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[1].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[1].genblk1[3].regis_del/val_reg[1]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[1]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[0]),
        .Q(clk_1));
  (* srl_bus_name = "inst/\otwierac/part_2/median_context/genblk1[1].genblk1[3].regis_del/val_reg " *) 
  (* srl_name = "inst/\otwierac/part_2/median_context/genblk1[1].genblk1[3].regis_del/val_reg[2]_srl4 " *) 
  SRL16E #(
    .INIT(16'h0000)) 
    \val_reg[2]_srl4 
       (.A0(1'b1),
        .A1(1'b1),
        .A2(1'b0),
        .A3(1'b0),
        .CE(1'b1),
        .CLK(clk),
        .D(douta[1]),
        .Q(clk_0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_1 ),
        .Q(\val_reg[3]_0 ),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_70
   (dina,
    \val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    \fin_sum_reg[1] ,
    \fin_sum_reg[1]_0 ,
    \fin_sum_reg[1]_1 ,
    \fin_sum_reg[1]_2 ,
    \fin_sum_reg[1]_3 ,
    \fin_sum_reg[1]_4 ,
    \fin_sum_reg[1]_5 ,
    p_0_in18_in,
    p_0_in19_in,
    \fin_sum[4]_i_7 ,
    p_1_in,
    p_0_in16_in,
    \val_reg[0]_0 );
  output [3:0]dina;
  output [0:0]\val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input \fin_sum_reg[1] ;
  input \fin_sum_reg[1]_0 ;
  input \fin_sum_reg[1]_1 ;
  input \fin_sum_reg[1]_2 ;
  input \fin_sum_reg[1]_3 ;
  input \fin_sum_reg[1]_4 ;
  input \fin_sum_reg[1]_5 ;
  input p_0_in18_in;
  input p_0_in19_in;
  input \fin_sum[4]_i_7 ;
  input p_1_in;
  input p_0_in16_in;
  input [0:0]\val_reg[0]_0 ;

  wire clk;
  wire [3:0]dina;
  wire \fin_sum[1]_i_2_n_0 ;
  wire \fin_sum[4]_i_7 ;
  wire \fin_sum_reg[1] ;
  wire \fin_sum_reg[1]_0 ;
  wire \fin_sum_reg[1]_1 ;
  wire \fin_sum_reg[1]_2 ;
  wire \fin_sum_reg[1]_3 ;
  wire \fin_sum_reg[1]_4 ;
  wire \fin_sum_reg[1]_5 ;
  wire p_0_in16_in;
  wire p_0_in18_in;
  wire p_0_in19_in;
  wire p_1_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire [0:0]\val_reg[3]_0 ;
  wire \val_reg[3]_1 ;

  LUT4 #(
    .INIT(16'h566A)) 
    \fin_sum[1]_i_1 
       (.I0(\fin_sum[1]_i_2_n_0 ),
        .I1(\fin_sum_reg[1] ),
        .I2(\fin_sum_reg[1]_0 ),
        .I3(\fin_sum_reg[1]_1 ),
        .O(\val_reg[3]_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \fin_sum[1]_i_2 
       (.I0(\val_reg[3]_1 ),
        .I1(\fin_sum_reg[1]_2 ),
        .I2(\fin_sum_reg[1]_3 ),
        .I3(\fin_sum_reg[1]_4 ),
        .I4(\fin_sum_reg[1]_5 ),
        .O(\fin_sum[1]_i_2_n_0 ));
  LUT5 #(
    .INIT(32'hFF969600)) 
    \fin_sum[4]_i_18 
       (.I0(dina[3]),
        .I1(p_0_in18_in),
        .I2(p_0_in19_in),
        .I3(\fin_sum[4]_i_7 ),
        .I4(p_1_in),
        .O(\val_reg[3]_1 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_0 ),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in16_in),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_71
   (p_0_in18_in,
    de_context__0,
    douta,
    clk);
  output p_0_in18_in;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]de_context__0;
  wire [1:0]douta;
  wire p_0_in18_in;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(p_0_in18_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_72
   (\val_reg[3]_0 ,
    \val_reg[3]_1 ,
    \val_reg[3]_2 ,
    p_0_in19_in,
    \val_reg[0]_0 ,
    de_context__0,
    \fin_sum_reg[0] ,
    \fin_sum_reg[0]_0 ,
    p_0_in18_in,
    dina,
    p_0_in22_in,
    p_0_in21_in,
    p_0_in20_in,
    p_1_in,
    \pixel_reg_reg[0] ,
    clk);
  output [0:0]\val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output \val_reg[3]_2 ;
  output p_0_in19_in;
  output \val_reg[0]_0 ;
  output [0:0]de_context__0;
  input \fin_sum_reg[0] ;
  input \fin_sum_reg[0]_0 ;
  input p_0_in18_in;
  input [1:0]dina;
  input p_0_in22_in;
  input p_0_in21_in;
  input p_0_in20_in;
  input p_1_in;
  input [3:0]\pixel_reg_reg[0] ;
  input clk;

  wire clk;
  wire [0:0]de_context__0;
  wire [1:0]dina;
  wire \fin_sum[1]_i_10_n_0 ;
  wire \fin_sum_reg[0] ;
  wire \fin_sum_reg[0]_0 ;
  wire p_0_in18_in;
  wire p_0_in19_in;
  wire p_0_in20_in;
  wire p_0_in21_in;
  wire p_0_in22_in;
  wire p_1_in;
  wire [3:0]\pixel_reg_reg[0] ;
  wire \val_reg[0]_0 ;
  wire [0:0]\val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[0]_i_1 
       (.I0(\val_reg[3]_1 ),
        .I1(\fin_sum_reg[0] ),
        .I2(\fin_sum_reg[0]_0 ),
        .O(\val_reg[3]_0 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[1]_i_10 
       (.I0(p_0_in19_in),
        .I1(p_0_in18_in),
        .I2(dina[1]),
        .O(\fin_sum[1]_i_10_n_0 ));
  LUT5 #(
    .INIT(32'h96696996)) 
    \fin_sum[1]_i_5 
       (.I0(\fin_sum[1]_i_10_n_0 ),
        .I1(p_0_in22_in),
        .I2(p_0_in21_in),
        .I3(p_0_in20_in),
        .I4(p_1_in),
        .O(\val_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair10" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_19 
       (.I0(p_0_in19_in),
        .I1(p_0_in18_in),
        .I2(dina[1]),
        .O(\val_reg[3]_2 ));
  LUT6 #(
    .INIT(64'h8000000000000000)) 
    \fin_sum[4]_i_4 
       (.I0(de_context__0),
        .I1(\pixel_reg_reg[0] [1]),
        .I2(dina[0]),
        .I3(\pixel_reg_reg[0] [0]),
        .I4(\pixel_reg_reg[0] [3]),
        .I5(\pixel_reg_reg[0] [2]),
        .O(\val_reg[0]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\pixel_reg_reg[0] [0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in18_in),
        .Q(p_0_in19_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_73
   (\val_reg[3]_0 ,
    p_0_in20_in,
    \val_reg[0]_0 ,
    p_0_in21_in,
    p_0_in22_in,
    dina,
    p_0_in18_in,
    p_0_in19_in,
    clk,
    de_context__0);
  output \val_reg[3]_0 ;
  output p_0_in20_in;
  output [0:0]\val_reg[0]_0 ;
  input p_0_in21_in;
  input p_0_in22_in;
  input [0:0]dina;
  input p_0_in18_in;
  input p_0_in19_in;
  input clk;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]de_context__0;
  wire [0:0]dina;
  wire p_0_in18_in;
  wire p_0_in19_in;
  wire p_0_in20_in;
  wire p_0_in21_in;
  wire p_0_in22_in;
  wire [0:0]\val_reg[0]_0 ;
  wire \val_reg[3]_0 ;

  LUT6 #(
    .INIT(64'h6996966996696996)) 
    \fin_sum[4]_i_26 
       (.I0(p_0_in20_in),
        .I1(p_0_in21_in),
        .I2(p_0_in22_in),
        .I3(dina),
        .I4(p_0_in18_in),
        .I5(p_0_in19_in),
        .O(\val_reg[3]_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in19_in),
        .Q(p_0_in20_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_74
   (p_0_in21_in,
    \val_reg[0]_0 ,
    p_0_in20_in,
    clk,
    \val_reg[0]_1 );
  output p_0_in21_in;
  output [0:0]\val_reg[0]_0 ;
  input p_0_in20_in;
  input clk;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire p_0_in20_in;
  wire p_0_in21_in;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in20_in),
        .Q(p_0_in21_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_75
   (\val_reg[3]_0 ,
    \val_reg[3]_1 ,
    p_0_in22_in,
    \val_reg[3]_2 ,
    \val_reg[0]_0 ,
    \fin_sum_reg[2] ,
    \fin_sum_reg[2]_0 ,
    \fin_sum_reg[2]_1 ,
    \fin_sum_reg[2]_2 ,
    \fin_sum[2]_i_2_0 ,
    \fin_sum[2]_i_2_1 ,
    \fin_sum[2]_i_2_2 ,
    \fin_sum[2]_i_2_3 ,
    \fin_sum[2]_i_2_4 ,
    p_0_in21_in,
    p_0_in20_in,
    clk,
    \val_reg[0]_1 );
  output \val_reg[3]_0 ;
  output \val_reg[3]_1 ;
  output p_0_in22_in;
  output \val_reg[3]_2 ;
  output [0:0]\val_reg[0]_0 ;
  input \fin_sum_reg[2] ;
  input \fin_sum_reg[2]_0 ;
  input \fin_sum_reg[2]_1 ;
  input \fin_sum_reg[2]_2 ;
  input \fin_sum[2]_i_2_0 ;
  input \fin_sum[2]_i_2_1 ;
  input \fin_sum[2]_i_2_2 ;
  input \fin_sum[2]_i_2_3 ;
  input \fin_sum[2]_i_2_4 ;
  input p_0_in21_in;
  input p_0_in20_in;
  input clk;
  input [0:0]\val_reg[0]_1 ;

  wire clk;
  wire \fin_sum[2]_i_2_0 ;
  wire \fin_sum[2]_i_2_1 ;
  wire \fin_sum[2]_i_2_2 ;
  wire \fin_sum[2]_i_2_3 ;
  wire \fin_sum[2]_i_2_4 ;
  wire \fin_sum[2]_i_3_n_0 ;
  wire \fin_sum_reg[2] ;
  wire \fin_sum_reg[2]_0 ;
  wire \fin_sum_reg[2]_1 ;
  wire \fin_sum_reg[2]_2 ;
  wire p_0_in20_in;
  wire p_0_in21_in;
  wire p_0_in22_in;
  wire [0:0]\val_reg[0]_0 ;
  wire [0:0]\val_reg[0]_1 ;
  wire \val_reg[3]_0 ;
  wire \val_reg[3]_1 ;
  wire \val_reg[3]_2 ;

  LUT5 #(
    .INIT(32'hA995566A)) 
    \fin_sum[2]_i_2 
       (.I0(\fin_sum[2]_i_3_n_0 ),
        .I1(\fin_sum_reg[2] ),
        .I2(\fin_sum_reg[2]_0 ),
        .I3(\fin_sum_reg[2]_1 ),
        .I4(\fin_sum_reg[2]_2 ),
        .O(\val_reg[3]_0 ));
  LUT6 #(
    .INIT(64'h171717E817E8E8E8)) 
    \fin_sum[2]_i_3 
       (.I0(\val_reg[3]_1 ),
        .I1(\fin_sum[2]_i_2_0 ),
        .I2(\fin_sum[2]_i_2_1 ),
        .I3(\fin_sum[2]_i_2_2 ),
        .I4(\fin_sum[2]_i_2_3 ),
        .I5(\fin_sum[2]_i_2_4 ),
        .O(\fin_sum[2]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'hE8)) 
    \fin_sum[4]_i_20 
       (.I0(p_0_in22_in),
        .I1(p_0_in21_in),
        .I2(p_0_in20_in),
        .O(\val_reg[3]_1 ));
  (* SOFT_HLUTNM = "soft_lutpair11" *) 
  LUT3 #(
    .INIT(8'h96)) 
    \fin_sum[4]_i_32 
       (.I0(p_0_in22_in),
        .I1(p_0_in21_in),
        .I2(p_0_in20_in),
        .O(\val_reg[3]_2 ));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[0]_1 ),
        .Q(\val_reg[0]_0 ),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(p_0_in21_in),
        .Q(p_0_in22_in),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_8
   (dina,
    \val_reg[2]_0 ,
    clk,
    \val_reg[1]_0 ,
    \val_reg[3]_0 ,
    de_context__0);
  output [3:0]dina;
  input \val_reg[2]_0 ;
  input clk;
  input \val_reg[1]_0 ;
  input [0:0]\val_reg[3]_0 ;
  input [0:0]de_context__0;

  wire clk;
  wire [0:0]de_context__0;
  wire [3:0]dina;
  wire \val_reg[1]_0 ;
  wire \val_reg[2]_0 ;
  wire [0:0]\val_reg[3]_0 ;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(de_context__0),
        .Q(dina[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[1]_0 ),
        .Q(dina[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[2]_0 ),
        .Q(dina[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(\val_reg[3]_0 ),
        .Q(dina[3]),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "register" *) 
module hdmi_vga_vp_0_0_register__parameterized4_9
   (context__0,
    de_context__0,
    douta,
    clk);
  output [0:0]context__0;
  output [0:0]de_context__0;
  input [1:0]douta;
  input clk;

  wire clk;
  wire [0:0]context__0;
  wire [0:0]de_context__0;
  wire [1:0]douta;

  FDRE #(
    .INIT(1'b0)) 
    \val_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[0]),
        .Q(de_context__0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \val_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(douta[1]),
        .Q(context__0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "sub_cordinates" *) (* X_CORE_INFO = "c_addsub_v12_0_14,Vivado 2022.2" *) 
module hdmi_vga_vp_0_0_sub_cordinates
   (A,
    B,
    CLK,
    CE,
    S);
  input [10:0]A;
  input [10:0]B;
  input CLK;
  input CE;
  output [11:0]S;


endmodule

(* ORIG_REF_NAME = "vp" *) 
module hdmi_vga_vp_0_0_vp
   (pixel_in,
    h_sync_in,
    v_sync_in,
    de_in,
    clk,
    sw,
    pixel_out,
    h_sync_out,
    v_sync_out,
    de_out);
  input [23:0]pixel_in;
  input h_sync_in;
  input v_sync_in;
  input de_in;
  input clk;
  input [2:0]sw;
  output [23:0]pixel_out;
  output h_sync_out;
  output v_sync_out;
  output de_out;

  wire \centroid_ent/cent_counter/prev_h_sync ;
  wire \centroid_ent/cent_counter/prev_v_sync ;
  wire \centroid_ent/cent_counter/x_pos1 ;
  wire \centroid_ent/cent_counter/y_pos ;
  wire \centroid_ent/div_mx/dividend_reg ;
  wire \centroid_ent/div_mx/i0 ;
  wire \centroid_ent/div_my/dividend_reg ;
  wire \centroid_ent/div_my/i0 ;
  wire \centroid_ent/eof ;
  wire clk;
  wire [4:4]context;
  wire conv_n_4;
  wire [4:4]de_context;
  wire [24:24]de_context_0;
  wire de_in;
  wire \de_mux[1] ;
  wire \de_mux[4] ;
  wire \de_mux[6] ;
  wire de_out;
  wire de_reg;
  wire h_sync_in;
  wire \h_sync_mux[1] ;
  wire \h_sync_mux[4] ;
  wire \h_sync_mux[6] ;
  wire h_sync_out;
  wire h_sync_reg;
  wire lust_n_0;
  wire lust_n_1;
  wire lust_n_10;
  wire lust_n_2;
  wire lust_n_3;
  wire lust_n_4;
  wire lust_n_5;
  wire lust_n_6;
  wire lust_n_7;
  wire lust_n_8;
  wire lust_n_9;
  wire median_n_1;
  wire median_n_10;
  wire median_n_11;
  wire median_n_12;
  wire median_n_2;
  wire median_n_8;
  wire median_n_9;
  wire ms_centroid_n_5;
  wire ms_centroid_n_6;
  wire ms_centroid_n_7;
  wire otwierac_n_10;
  wire otwierac_n_5;
  wire otwierac_n_6;
  wire otwierac_n_7;
  wire otwierac_n_8;
  wire otwierac_n_9;
  wire p_0_in;
  wire p_0_in0_in;
  wire p_0_in1_in;
  wire [0:0]\pix_mux[3] ;
  wire [0:0]\pix_mux[5] ;
  wire [23:23]\pix_mux[6] ;
  wire [23:0]pix_reg;
  wire \pix_reg[23]_i_3_n_0 ;
  wire \pix_reg[23]_i_5_n_0 ;
  wire \pix_reg[23]_i_8_n_0 ;
  wire \pix_reg[23]_i_9_n_0 ;
  wire [23:0]pixel_in;
  wire [23:0]pixel_out;
  wire pixel_reg;
  wire [2:0]sw;
  wire v_sync_in;
  wire \v_sync_mux[1] ;
  wire \v_sync_mux[4] ;
  wire \v_sync_mux[6] ;
  wire v_sync_out;
  wire v_sync_reg;

  hdmi_vga_vp_0_0_YCrCb_module conv
       (.D(pix_reg),
        .E(\de_mux[1] ),
        .\FSM_onehot_state_reg[0] (\centroid_ent/div_mx/dividend_reg ),
        .\FSM_onehot_state_reg[0]_0 (\centroid_ent/div_my/dividend_reg ),
        .SR(\centroid_ent/cent_counter/y_pos ),
        .clk(clk),
        .de_in(de_in),
        .\de_mux[6] (\de_mux[6] ),
        .de_reg(de_reg),
        .de_reg_reg(lust_n_2),
        .de_reg_reg_0(median_n_8),
        .eof(\centroid_ent/eof ),
        .h_sync_in(h_sync_in),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\h_sync_mux[6] (\h_sync_mux[6] ),
        .h_sync_reg(h_sync_reg),
        .h_sync_reg_reg(lust_n_0),
        .h_sync_reg_reg_0(median_n_10),
        .i0(\centroid_ent/div_mx/i0 ),
        .i0_0(\centroid_ent/div_my/i0 ),
        .i_primitive(\pix_mux[3] ),
        .\pix_reg_reg[15] (ms_centroid_n_6),
        .\pix_reg_reg[16] (lust_n_3),
        .\pix_reg_reg[17] (lust_n_4),
        .\pix_reg_reg[18] (lust_n_5),
        .\pix_reg_reg[19] (lust_n_6),
        .\pix_reg_reg[20] (lust_n_7),
        .\pix_reg_reg[21] (lust_n_8),
        .\pix_reg_reg[22] (lust_n_9),
        .\pix_reg_reg[23] (\pix_reg[23]_i_3_n_0 ),
        .\pix_reg_reg[23]_0 (\pix_reg[23]_i_5_n_0 ),
        .\pix_reg_reg[23]_1 (ms_centroid_n_7),
        .\pix_reg_reg[23]_2 (lust_n_10),
        .\pix_reg_reg[7] (ms_centroid_n_5),
        .pixel_in(pixel_in),
        .prev_h_sync(\centroid_ent/cent_counter/prev_h_sync ),
        .prev_v_sync(\centroid_ent/cent_counter/prev_v_sync ),
        .sw(sw),
        .v_sync_in(v_sync_in),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\v_sync_mux[6] (\v_sync_mux[6] ),
        .v_sync_reg(v_sync_reg),
        .v_sync_reg_reg(lust_n_1),
        .v_sync_reg_reg_0(median_n_9),
        .\val_reg[0] (conv_n_4),
        .\val_reg[2] (\centroid_ent/cent_counter/x_pos1 ));
  FDRE #(
    .INIT(1'b0)) 
    de_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_reg),
        .Q(de_out),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    h_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(h_sync_reg),
        .Q(h_sync_out),
        .R(1'b0));
  hdmi_vga_vp_0_0_xil_internal_svlib_LUTs lust
       (.clk(clk),
        .de_in(de_in),
        .de_reg_reg_0(lust_n_2),
        .h_sync_in(h_sync_in),
        .h_sync_reg_reg_0(lust_n_0),
        .pixel_in({pixel_in[23],pixel_in[15],pixel_in[7]}),
        .\qspo_int_reg[0] (lust_n_3),
        .\qspo_int_reg[0]_0 (lust_n_4),
        .\qspo_int_reg[0]_1 (lust_n_5),
        .\qspo_int_reg[0]_2 (lust_n_6),
        .\qspo_int_reg[0]_3 (lust_n_7),
        .\qspo_int_reg[0]_4 (lust_n_8),
        .\qspo_int_reg[0]_5 (lust_n_9),
        .\qspo_int_reg[0]_6 (lust_n_10),
        .sw(sw),
        .v_sync_in(v_sync_in),
        .v_sync_reg_reg_0(lust_n_1));
  hdmi_vga_vp_0_0_median_filter median
       (.D({\de_mux[1] ,\pix_mux[3] }),
        .clk(clk),
        .de_context(de_context_0),
        .\de_mux[4] (\de_mux[4] ),
        .de_reg_reg_0(median_n_8),
        .dina({median_n_1,median_n_2,de_context}),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\h_sync_mux[4] (\h_sync_mux[4] ),
        .h_sync_reg_reg_0(median_n_10),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .\pix_mux[5] (\pix_mux[5] ),
        .pixel_reg(pixel_reg),
        .\pixel_reg_reg[0]_0 (otwierac_n_9),
        .\pixel_reg_reg[0]_1 (otwierac_n_8),
        .\pixel_reg_reg[0]_2 (otwierac_n_5),
        .\pixel_reg_reg[0]_3 (otwierac_n_6),
        .\pixel_reg_reg[0]_4 (otwierac_n_7),
        .\pixel_reg_reg[0]_5 (otwierac_n_10),
        .sw(sw),
        .sw_0_sp_1(median_n_12),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\v_sync_mux[4] (\v_sync_mux[4] ),
        .v_sync_reg_reg_0(median_n_9),
        .\val_reg[0] (median_n_11),
        .\val_reg[3] (context));
  hdmi_vga_vp_0_0_mass_centroid ms_centroid
       (.D({\de_mux[1] ,\pix_mux[3] }),
        .E(\centroid_ent/div_mx/dividend_reg ),
        .SR(conv_n_4),
        .clk(clk),
        .\de_mux[4] (\de_mux[4] ),
        .\dividend_reg_reg[31] (\centroid_ent/div_my/dividend_reg ),
        .eof(\centroid_ent/eof ),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\h_sync_mux[4] (\h_sync_mux[4] ),
        .i0(\centroid_ent/div_mx/i0 ),
        .i0_0(\centroid_ent/div_my/i0 ),
        .\pix_mux[5] (\pix_mux[5] ),
        .\pix_mux[6] (\pix_mux[6] ),
        .\pix_reg_reg[15] (\pix_reg[23]_i_8_n_0 ),
        .\pix_reg_reg[15]_0 (\pix_reg[23]_i_9_n_0 ),
        .\pixel_reg_reg[0] (ms_centroid_n_5),
        .prev_h_sync(\centroid_ent/cent_counter/prev_h_sync ),
        .prev_v_sync(\centroid_ent/cent_counter/prev_v_sync ),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\v_sync_mux[4] (\v_sync_mux[4] ),
        .\val_reg[18] (ms_centroid_n_6),
        .\val_reg[26] (ms_centroid_n_7),
        .\y_pos_reg[10] (\centroid_ent/cent_counter/y_pos ),
        .\y_pos_reg[10]_0 (\centroid_ent/cent_counter/x_pos1 ));
  hdmi_vga_vp_0_0_otwzamk otwierac
       (.clk(clk),
        .\de_mux[6] (\de_mux[6] ),
        .dina({context,median_n_1,median_n_2,de_context}),
        .\h_sync_mux[6] (\h_sync_mux[6] ),
        .p_0_in(p_0_in),
        .p_0_in0_in(p_0_in0_in),
        .p_0_in1_in(p_0_in1_in),
        .\pix_mux[6] (\pix_mux[6] ),
        .pixel_reg(pixel_reg),
        .\pixel_reg_reg[0] (median_n_12),
        .\pixel_reg_reg[0]_0 (median_n_11),
        .sw(sw[0]),
        .\v_sync_mux[6] (\v_sync_mux[6] ),
        .\val_reg[0] (de_context_0),
        .\val_reg[0]_0 (otwierac_n_10),
        .\val_reg[3] (otwierac_n_5),
        .\val_reg[3]_0 (otwierac_n_6),
        .\val_reg[3]_1 (otwierac_n_7),
        .\val_reg[3]_2 (otwierac_n_8),
        .\val_reg[3]_3 (otwierac_n_9));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h01)) 
    \pix_reg[23]_i_3 
       (.I0(sw[2]),
        .I1(sw[0]),
        .I2(sw[1]),
        .O(\pix_reg[23]_i_3_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair50" *) 
  LUT3 #(
    .INIT(8'h10)) 
    \pix_reg[23]_i_5 
       (.I0(sw[2]),
        .I1(sw[1]),
        .I2(sw[0]),
        .O(\pix_reg[23]_i_5_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT2 #(
    .INIT(4'hB)) 
    \pix_reg[23]_i_8 
       (.I0(sw[1]),
        .I1(sw[2]),
        .O(\pix_reg[23]_i_8_n_0 ));
  (* SOFT_HLUTNM = "soft_lutpair51" *) 
  LUT3 #(
    .INIT(8'h4F)) 
    \pix_reg[23]_i_9 
       (.I0(sw[1]),
        .I1(sw[0]),
        .I2(sw[2]),
        .O(\pix_reg[23]_i_9_n_0 ));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[0] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[0]),
        .Q(pixel_out[8]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[10] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[10]),
        .Q(pixel_out[2]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[11] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[11]),
        .Q(pixel_out[3]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[12] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[12]),
        .Q(pixel_out[4]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[13] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[13]),
        .Q(pixel_out[5]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[14] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[14]),
        .Q(pixel_out[6]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[15] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[15]),
        .Q(pixel_out[7]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[16] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[16]),
        .Q(pixel_out[16]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[17] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[17]),
        .Q(pixel_out[17]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[18] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[18]),
        .Q(pixel_out[18]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[19] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[19]),
        .Q(pixel_out[19]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[1] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[1]),
        .Q(pixel_out[9]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[20] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[20]),
        .Q(pixel_out[20]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[21] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[21]),
        .Q(pixel_out[21]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[22] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[22]),
        .Q(pixel_out[22]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[23] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[23]),
        .Q(pixel_out[23]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[2] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[2]),
        .Q(pixel_out[10]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[3] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[3]),
        .Q(pixel_out[11]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[4] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[4]),
        .Q(pixel_out[12]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[5] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[5]),
        .Q(pixel_out[13]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[6] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[6]),
        .Q(pixel_out[14]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[7] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[7]),
        .Q(pixel_out[15]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[8] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[8]),
        .Q(pixel_out[0]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    \pix_reg_reg[9] 
       (.C(clk),
        .CE(1'b1),
        .D(pix_reg[9]),
        .Q(pixel_out[1]),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    v_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(v_sync_reg),
        .Q(v_sync_out),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_LUTs" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_LUTs
   (h_sync_reg_reg_0,
    v_sync_reg_reg_0,
    de_reg_reg_0,
    \qspo_int_reg[0] ,
    \qspo_int_reg[0]_0 ,
    \qspo_int_reg[0]_1 ,
    \qspo_int_reg[0]_2 ,
    \qspo_int_reg[0]_3 ,
    \qspo_int_reg[0]_4 ,
    \qspo_int_reg[0]_5 ,
    \qspo_int_reg[0]_6 ,
    pixel_in,
    clk,
    h_sync_in,
    v_sync_in,
    de_in,
    sw);
  output h_sync_reg_reg_0;
  output v_sync_reg_reg_0;
  output de_reg_reg_0;
  output \qspo_int_reg[0] ;
  output \qspo_int_reg[0]_0 ;
  output \qspo_int_reg[0]_1 ;
  output \qspo_int_reg[0]_2 ;
  output \qspo_int_reg[0]_3 ;
  output \qspo_int_reg[0]_4 ;
  output \qspo_int_reg[0]_5 ;
  output \qspo_int_reg[0]_6 ;
  input [2:0]pixel_in;
  input clk;
  input h_sync_in;
  input v_sync_in;
  input de_in;
  input [2:0]sw;

  wire clk;
  wire de_in;
  wire de_reg_reg_0;
  wire h_sync_in;
  wire h_sync_reg_reg_0;
  wire [2:0]pixel_in;
  wire [7:0]pixel_wire_0;
  wire [7:0]pixel_wire_16;
  wire [7:0]pixel_wire_8;
  wire \qspo_int_reg[0] ;
  wire \qspo_int_reg[0]_0 ;
  wire \qspo_int_reg[0]_1 ;
  wire \qspo_int_reg[0]_2 ;
  wire \qspo_int_reg[0]_3 ;
  wire \qspo_int_reg[0]_4 ;
  wire \qspo_int_reg[0]_5 ;
  wire \qspo_int_reg[0]_6 ;
  wire [2:0]sw;
  wire v_sync_in;
  wire v_sync_reg_reg_0;

  (* CHECK_LICENSE_TYPE = "dist_mem_gen_0,dist_mem_gen_v8_0_13,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_0__1 LUT1
       (.a({pixel_in[1],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clk(clk),
        .qspo(pixel_wire_0));
  (* CHECK_LICENSE_TYPE = "dist_mem_gen_0,dist_mem_gen_v8_0_13,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_0__2 LUT2
       (.a({pixel_in[0],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clk(clk),
        .qspo(pixel_wire_8));
  (* CHECK_LICENSE_TYPE = "dist_mem_gen_0,dist_mem_gen_v8_0_13,{}" *) 
  (* downgradeipidentifiedwarnings = "yes" *) 
  (* x_core_info = "dist_mem_gen_v8_0_13,Vivado 2022.2" *) 
  hdmi_vga_vp_0_0_dist_mem_gen_0 LUT3
       (.a({pixel_in[2],1'b0,1'b0,1'b0,1'b0,1'b0,1'b0,1'b0}),
        .clk(clk),
        .qspo(pixel_wire_16));
  FDRE #(
    .INIT(1'b0)) 
    de_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(de_in),
        .Q(de_reg_reg_0),
        .R(1'b0));
  FDRE #(
    .INIT(1'b0)) 
    h_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(h_sync_in),
        .Q(h_sync_reg_reg_0),
        .R(1'b0));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[16]_i_3 
       (.I0(pixel_wire_16[0]),
        .I1(pixel_wire_0[0]),
        .I2(pixel_wire_8[0]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0] ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[17]_i_3 
       (.I0(pixel_wire_16[1]),
        .I1(pixel_wire_0[1]),
        .I2(pixel_wire_8[1]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_0 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[18]_i_3 
       (.I0(pixel_wire_16[2]),
        .I1(pixel_wire_0[2]),
        .I2(pixel_wire_8[2]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_1 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[19]_i_3 
       (.I0(pixel_wire_16[3]),
        .I1(pixel_wire_0[3]),
        .I2(pixel_wire_8[3]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_2 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[20]_i_3 
       (.I0(pixel_wire_16[4]),
        .I1(pixel_wire_0[4]),
        .I2(pixel_wire_8[4]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_3 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[21]_i_3 
       (.I0(pixel_wire_16[5]),
        .I1(pixel_wire_0[5]),
        .I2(pixel_wire_8[5]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_4 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[22]_i_3 
       (.I0(pixel_wire_16[6]),
        .I1(pixel_wire_0[6]),
        .I2(pixel_wire_8[6]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_5 ));
  LUT6 #(
    .INIT(64'h0000008000000000)) 
    \pix_reg[23]_i_6 
       (.I0(pixel_wire_16[7]),
        .I1(pixel_wire_0[7]),
        .I2(pixel_wire_8[7]),
        .I3(sw[0]),
        .I4(sw[2]),
        .I5(sw[1]),
        .O(\qspo_int_reg[0]_6 ));
  FDRE #(
    .INIT(1'b0)) 
    v_sync_reg_reg
       (.C(clk),
        .CE(1'b1),
        .D(v_sync_in),
        .Q(v_sync_reg_reg_0),
        .R(1'b0));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line
   (A,
    P,
    clk);
  output [8:0]A;
  input [8:0]P;
  input clk;

  wire [8:0]A;
  wire [8:0]P;
  wire clk;
  wire [8:0]val;

  hdmi_vga_vp_0_0_register \genblk1[0].regis_del 
       (.P(P),
        .clk(clk),
        .val(val));
  hdmi_vga_vp_0_0_register_82 \genblk1[1].regis_del 
       (.A(A),
        .clk(clk),
        .val(val));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line_116
   (A,
    P,
    clk);
  output [8:0]A;
  input [8:0]P;
  input clk;

  wire [8:0]A;
  wire [8:0]P;
  wire clk;
  wire \genblk1[0].regis_del_n_0 ;
  wire \genblk1[0].regis_del_n_1 ;
  wire \genblk1[0].regis_del_n_2 ;
  wire \genblk1[0].regis_del_n_3 ;
  wire \genblk1[0].regis_del_n_4 ;
  wire \genblk1[0].regis_del_n_5 ;
  wire \genblk1[0].regis_del_n_6 ;
  wire \genblk1[0].regis_del_n_7 ;
  wire \genblk1[0].regis_del_n_8 ;

  hdmi_vga_vp_0_0_register_117 \genblk1[0].regis_del 
       (.P(P),
        .clk(clk),
        .\val_reg[0]_0 (\genblk1[0].regis_del_n_8 ),
        .\val_reg[1]_0 (\genblk1[0].regis_del_n_7 ),
        .\val_reg[2]_0 (\genblk1[0].regis_del_n_6 ),
        .\val_reg[3]_0 (\genblk1[0].regis_del_n_5 ),
        .\val_reg[4]_0 (\genblk1[0].regis_del_n_4 ),
        .\val_reg[5]_0 (\genblk1[0].regis_del_n_3 ),
        .\val_reg[6]_0 (\genblk1[0].regis_del_n_2 ),
        .\val_reg[7]_0 (\genblk1[0].regis_del_n_1 ),
        .\val_reg[8]_0 (\genblk1[0].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register_118 \genblk1[1].regis_del 
       (.A(A),
        .clk(clk),
        .\val_reg[0]_0 (\genblk1[0].regis_del_n_8 ),
        .\val_reg[1]_0 (\genblk1[0].regis_del_n_7 ),
        .\val_reg[2]_0 (\genblk1[0].regis_del_n_6 ),
        .\val_reg[3]_0 (\genblk1[0].regis_del_n_5 ),
        .\val_reg[4]_0 (\genblk1[0].regis_del_n_4 ),
        .\val_reg[5]_0 (\genblk1[0].regis_del_n_3 ),
        .\val_reg[6]_0 (\genblk1[0].regis_del_n_2 ),
        .\val_reg[7]_0 (\genblk1[0].regis_del_n_1 ),
        .\val_reg[8]_0 (\genblk1[0].regis_del_n_0 ));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line_95
   (A,
    P,
    clk);
  output [8:0]A;
  input [8:0]P;
  input clk;

  wire [8:0]A;
  wire [8:0]P;
  wire clk;
  wire \genblk1[0].regis_del_n_0 ;
  wire \genblk1[0].regis_del_n_1 ;
  wire \genblk1[0].regis_del_n_2 ;
  wire \genblk1[0].regis_del_n_3 ;
  wire \genblk1[0].regis_del_n_4 ;
  wire \genblk1[0].regis_del_n_5 ;
  wire \genblk1[0].regis_del_n_6 ;
  wire \genblk1[0].regis_del_n_7 ;
  wire \genblk1[0].regis_del_n_8 ;

  hdmi_vga_vp_0_0_register_96 \genblk1[0].regis_del 
       (.P(P),
        .clk(clk),
        .\val_reg[0]_0 (\genblk1[0].regis_del_n_8 ),
        .\val_reg[1]_0 (\genblk1[0].regis_del_n_7 ),
        .\val_reg[2]_0 (\genblk1[0].regis_del_n_6 ),
        .\val_reg[3]_0 (\genblk1[0].regis_del_n_5 ),
        .\val_reg[4]_0 (\genblk1[0].regis_del_n_4 ),
        .\val_reg[5]_0 (\genblk1[0].regis_del_n_3 ),
        .\val_reg[6]_0 (\genblk1[0].regis_del_n_2 ),
        .\val_reg[7]_0 (\genblk1[0].regis_del_n_1 ),
        .\val_reg[8]_0 (\genblk1[0].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register_97 \genblk1[1].regis_del 
       (.A(A),
        .clk(clk),
        .\val_reg[0]_0 (\genblk1[0].regis_del_n_8 ),
        .\val_reg[1]_0 (\genblk1[0].regis_del_n_7 ),
        .\val_reg[2]_0 (\genblk1[0].regis_del_n_6 ),
        .\val_reg[3]_0 (\genblk1[0].regis_del_n_5 ),
        .\val_reg[4]_0 (\genblk1[0].regis_del_n_4 ),
        .\val_reg[5]_0 (\genblk1[0].regis_del_n_3 ),
        .\val_reg[6]_0 (\genblk1[0].regis_del_n_2 ),
        .\val_reg[7]_0 (\genblk1[0].regis_del_n_1 ),
        .\val_reg[8]_0 (\genblk1[0].regis_del_n_0 ));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized0
   (\val_reg[2] ,
    \val_reg[1] ,
    E,
    SR,
    \val_reg[0] ,
    \val_reg[2]_0 ,
    \FSM_onehot_state_reg[0] ,
    eof,
    \FSM_onehot_state_reg[0]_0 ,
    de_reg,
    v_sync_reg,
    h_sync_reg,
    h_sync_in,
    clk,
    v_sync_in,
    de_in,
    prev_h_sync,
    i0,
    i0_0,
    prev_v_sync,
    sw,
    de_reg_reg,
    \de_mux[6] ,
    de_reg_reg_0,
    v_sync_reg_reg,
    \v_sync_mux[6] ,
    v_sync_reg_reg_0,
    h_sync_reg_reg,
    \h_sync_mux[6] ,
    h_sync_reg_reg_0);
  output \val_reg[2] ;
  output \val_reg[1] ;
  output [0:0]E;
  output [0:0]SR;
  output [0:0]\val_reg[0] ;
  output [0:0]\val_reg[2]_0 ;
  output [0:0]\FSM_onehot_state_reg[0] ;
  output eof;
  output [0:0]\FSM_onehot_state_reg[0]_0 ;
  output de_reg;
  output v_sync_reg;
  output h_sync_reg;
  input h_sync_in;
  input clk;
  input v_sync_in;
  input de_in;
  input prev_h_sync;
  input i0;
  input i0_0;
  input prev_v_sync;
  input [2:0]sw;
  input de_reg_reg;
  input \de_mux[6] ;
  input de_reg_reg_0;
  input v_sync_reg_reg;
  input \v_sync_mux[6] ;
  input v_sync_reg_reg_0;
  input h_sync_reg_reg;
  input \h_sync_mux[6] ;
  input h_sync_reg_reg_0;

  wire [0:0]E;
  wire [0:0]\FSM_onehot_state_reg[0] ;
  wire [0:0]\FSM_onehot_state_reg[0]_0 ;
  wire [0:0]SR;
  wire clk;
  wire de_in;
  wire \de_mux[6] ;
  wire de_reg;
  wire de_reg_reg;
  wire de_reg_reg_0;
  wire eof;
  wire \genblk1[7].regis_del_n_0 ;
  wire \genblk1[7].regis_del_n_1 ;
  wire \genblk1[7].regis_del_n_2 ;
  wire h_sync_in;
  wire \h_sync_mux[6] ;
  wire h_sync_reg;
  wire h_sync_reg_reg;
  wire h_sync_reg_reg_0;
  wire i0;
  wire i0_0;
  wire prev_h_sync;
  wire prev_v_sync;
  wire [2:0]sw;
  wire v_sync_in;
  wire \v_sync_mux[6] ;
  wire v_sync_reg;
  wire v_sync_reg_reg;
  wire v_sync_reg_reg_0;
  wire [0:0]\val_reg[0] ;
  wire \val_reg[1] ;
  wire \val_reg[2] ;
  wire [0:0]\val_reg[2]_0 ;

  hdmi_vga_vp_0_0_register__parameterized0_80 \genblk1[7].regis_del 
       (.clk(clk),
        .de_in(de_in),
        .de_in_0(\genblk1[7].regis_del_n_2 ),
        .h_sync_in(h_sync_in),
        .h_sync_in_0(\genblk1[7].regis_del_n_0 ),
        .v_sync_in(v_sync_in),
        .v_sync_in_0(\genblk1[7].regis_del_n_1 ));
  hdmi_vga_vp_0_0_register__parameterized0_81 \genblk1[8].regis_del 
       (.E(E),
        .\FSM_onehot_state_reg[0] (\FSM_onehot_state_reg[0] ),
        .\FSM_onehot_state_reg[0]_0 (\FSM_onehot_state_reg[0]_0 ),
        .SR(SR),
        .clk(clk),
        .de_in(de_in),
        .\de_mux[6] (\de_mux[6] ),
        .de_reg(de_reg),
        .de_reg_reg(de_reg_reg),
        .de_reg_reg_0(de_reg_reg_0),
        .eof(eof),
        .h_sync_in(h_sync_in),
        .\h_sync_mux[6] (\h_sync_mux[6] ),
        .h_sync_reg(h_sync_reg),
        .h_sync_reg_reg(h_sync_reg_reg),
        .h_sync_reg_reg_0(h_sync_reg_reg_0),
        .i0(i0),
        .i0_0(i0_0),
        .prev_h_sync(prev_h_sync),
        .prev_v_sync(prev_v_sync),
        .sw(sw),
        .v_sync_in(v_sync_in),
        .\v_sync_mux[6] (\v_sync_mux[6] ),
        .v_sync_reg(v_sync_reg),
        .v_sync_reg_reg(v_sync_reg_reg),
        .v_sync_reg_reg_0(v_sync_reg_reg_0),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[0]_1 (\genblk1[7].regis_del_n_2 ),
        .\val_reg[1]_0 (\val_reg[1] ),
        .\val_reg[1]_1 (\genblk1[7].regis_del_n_1 ),
        .\val_reg[2]_0 (\val_reg[2] ),
        .\val_reg[2]_1 (\val_reg[2]_0 ),
        .\val_reg[2]_2 (\genblk1[7].regis_del_n_0 ));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized1
   (E,
    Q,
    \val_reg[25] ,
    \val_reg[25]_0 ,
    \val_reg[25]_1 ,
    \val_reg[27] ,
    \v_sync_mux[4] ,
    \h_sync_mux[4] ,
    SR,
    clk,
    CO,
    \x_max_r_reg[10] ,
    \y_min_r_reg[10] ,
    \y_max_r_reg[10] ,
    eof,
    D,
    \val_reg[1]_fwrd__6 ,
    \val_reg[0]_fwrd );
  output [0:0]E;
  output [1:0]Q;
  output [0:0]\val_reg[25] ;
  output [0:0]\val_reg[25]_0 ;
  output [0:0]\val_reg[25]_1 ;
  output [0:0]\val_reg[27] ;
  output \v_sync_mux[4] ;
  output \h_sync_mux[4] ;
  input [0:0]SR;
  input clk;
  input [0:0]CO;
  input [0:0]\x_max_r_reg[10] ;
  input [0:0]\y_min_r_reg[10] ;
  input [0:0]\y_max_r_reg[10] ;
  input eof;
  input [1:0]D;
  input \val_reg[1]_fwrd__6 ;
  input \val_reg[0]_fwrd ;

  wire [0:0]CO;
  wire [1:0]D;
  wire [0:0]E;
  wire [1:0]Q;
  wire [0:0]SR;
  wire clk;
  wire eof;
  wire \h_sync_mux[4] ;
  wire \v_sync_mux[4] ;
  wire \val_reg[0]_fwrd ;
  wire \val_reg[1]_fwrd__6 ;
  wire [0:0]\val_reg[25] ;
  wire [0:0]\val_reg[25]_0 ;
  wire [0:0]\val_reg[25]_1 ;
  wire [0:0]\val_reg[27] ;
  wire [0:0]\x_max_r_reg[10] ;
  wire [0:0]\y_max_r_reg[10] ;
  wire [0:0]\y_min_r_reg[10] ;

  hdmi_vga_vp_0_0_register__parameterized1 \genblk1[0].regis_del 
       (.CO(CO),
        .D(D),
        .E(E),
        .Q(Q),
        .SR(SR),
        .clk(clk),
        .eof(eof),
        .\h_sync_mux[4] (\h_sync_mux[4] ),
        .\v_sync_mux[4] (\v_sync_mux[4] ),
        .\val_reg[0]_fwrd_0 (\val_reg[0]_fwrd ),
        .\val_reg[1]_fwrd__6_0 (\val_reg[1]_fwrd__6 ),
        .\val_reg[25]_0 (\val_reg[25] ),
        .\val_reg[25]_1 (\val_reg[25]_0 ),
        .\val_reg[25]_2 (\val_reg[25]_1 ),
        .\val_reg[27]_0 (\val_reg[27] ),
        .\x_max_r_reg[10] (\x_max_r_reg[10] ),
        .\y_max_r_reg[10] (\y_max_r_reg[10] ),
        .\y_min_r_reg[10] (\y_min_r_reg[10] ));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized2
   (CE,
    Q,
    clk);
  output CE;
  input [0:0]Q;
  input clk;

  wire CE;
  wire [0:0]Q;
  wire clk;

  hdmi_vga_vp_0_0_register__parameterized0 \genblk1[0].regis_del 
       (.CE(CE),
        .Q(Q),
        .clk(clk));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized3
   (\val_reg[0] ,
    CE,
    clk);
  output \val_reg[0] ;
  input CE;
  input clk;

  wire CE;
  wire clk;
  wire \genblk1[1].regis_del_n_0 ;
  wire \val_reg[0] ;

  hdmi_vga_vp_0_0_register__parameterized0_49 \genblk1[1].regis_del 
       (.CE(CE),
        .clk(clk),
        .\val_reg[2] (\genblk1[1].regis_del_n_0 ));
  hdmi_vga_vp_0_0_register__parameterized0_50 \genblk1[2].regis_del 
       (.clk(clk),
        .\val_reg[0]_0 (\val_reg[0] ),
        .\val_reg[0]_1 (\genblk1[1].regis_del_n_0 ));
endmodule

(* ORIG_REF_NAME = "xil_internal_svlib_delay_line" *) 
module hdmi_vga_vp_0_0_xil_internal_svlib_delay_line__parameterized4
   (\val_reg[1] ,
    \val_reg[2] ,
    \val_reg[26] ,
    \de_mux[4] ,
    \val_reg[18] ,
    \val_reg[26]_0 ,
    \v_sync_mux[1] ,
    clk,
    \h_sync_mux[1] ,
    \val_reg[26]_1 ,
    \val_reg[18]_0 ,
    \val_reg[2]_0 ,
    qspo,
    \pix_mux[6] ,
    \pix_reg_reg[15] ,
    \pix_reg_reg[15]_0 ,
    \pix_mux[5] );
  output \val_reg[1] ;
  output \val_reg[2] ;
  output \val_reg[26] ;
  output \de_mux[4] ;
  output \val_reg[18] ;
  output \val_reg[26]_0 ;
  input \v_sync_mux[1] ;
  input clk;
  input \h_sync_mux[1] ;
  input \val_reg[26]_1 ;
  input \val_reg[18]_0 ;
  input \val_reg[2]_0 ;
  input [0:0]qspo;
  input [0:0]\pix_mux[6] ;
  input \pix_reg_reg[15] ;
  input \pix_reg_reg[15]_0 ;
  input [0:0]\pix_mux[5] ;

  wire clk;
  wire \de_mux[4] ;
  wire \genblk1[4].regis_del_n_2 ;
  wire \genblk1[4].regis_del_n_3 ;
  wire \genblk1[4].regis_del_n_4 ;
  wire \h_sync_mux[1] ;
  wire [0:0]\pix_mux[5] ;
  wire [0:0]\pix_mux[6] ;
  wire \pix_reg_reg[15] ;
  wire \pix_reg_reg[15]_0 ;
  wire [0:0]qspo;
  wire \v_sync_mux[1] ;
  wire \val_reg[18] ;
  wire \val_reg[18]_0 ;
  wire \val_reg[1] ;
  wire \val_reg[26] ;
  wire \val_reg[26]_0 ;
  wire \val_reg[26]_1 ;
  wire \val_reg[2] ;
  wire \val_reg[2]_0 ;

  hdmi_vga_vp_0_0_register__parameterized3 \genblk1[4].regis_del 
       (.clk(clk),
        .clk_0(\genblk1[4].regis_del_n_2 ),
        .clk_1(\genblk1[4].regis_del_n_3 ),
        .\h_sync_mux[1] (\h_sync_mux[1] ),
        .\v_sync_mux[1] (\v_sync_mux[1] ),
        .\val_reg[0] (\genblk1[4].regis_del_n_4 ),
        .\val_reg[18] (\val_reg[18]_0 ),
        .\val_reg[1] (\val_reg[1] ),
        .\val_reg[26] (\val_reg[26]_1 ),
        .\val_reg[2] (\val_reg[2] ),
        .\val_reg[2]_0 (\val_reg[2]_0 ));
  hdmi_vga_vp_0_0_register__parameterized3_48 \genblk1[5].regis_del 
       (.clk(clk),
        .\de_mux[4] (\de_mux[4] ),
        .\pix_mux[5] (\pix_mux[5] ),
        .\pix_mux[6] (\pix_mux[6] ),
        .\pix_reg_reg[15] (\pix_reg_reg[15] ),
        .\pix_reg_reg[15]_0 (\pix_reg_reg[15]_0 ),
        .qspo(qspo),
        .\val_reg[18]_0 (\val_reg[18] ),
        .\val_reg[18]_1 (\genblk1[4].regis_del_n_3 ),
        .\val_reg[26]_0 (\val_reg[26] ),
        .\val_reg[26]_1 (\val_reg[26]_0 ),
        .\val_reg[26]_2 (\genblk1[4].regis_del_n_2 ),
        .\val_reg[2]_0 (\genblk1[4].regis_del_n_4 ));
endmodule
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
M9ERyrMNmk2Jjyg6ZCGYQpTqx5C+74+ICn/vAQ5KoRuxJNbql8tHJjFcOe3FAJX14Nokq4wtfvZP
2sPXAs/eYYzjjbnt4nx8oZRRPy0XyDpvba/qxyqBSxjChIoPMDwpXnxi+chZJU5N1zCNt9FZPAep
nLCjMCkQTlKbP3cUJIY=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
FBAg02qOh8M8uZkNvwWHoY3ELncwvHjjgL2y2qLN7xuxxaPQj3LdyD/IETTPdSjNCB/rhpJxbT1y
U5fbF28Hkp+bzDuxeTWPX251wMhiEmdm4jhyMl2z+GRf2Z6VJ4bVM5bieaJvsbjuyQ9Az6TDmueI
14citDEbyRCyJD9EiVckdS2mZcTl37oVFebKnIeJGmNjOc2XrcM84JVJIG5iv3ryS2hAG9/84hEr
u3DYC+xS2w5swJXVSf0zV+w8xZulS3PTPLELIM8O+SEFdHetZKnrgG1aJ7V5xu0RniGAsyVwVbgu
M1jPqNLyU+9kyETKfG9jcGEIM2I2gUfmOvRs+g==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
TYvdYOtu2OcY/hp0LCFlgwGgJeLJ5MSBDPjuyI3760LiXtklDVs7CUFlvRRXMgAzbHlMXbiHp/Xl
cvmN035ayt8D8gPWRXxnbQf3kRlW6EIFwFMZ1inL9b5f47gsuvCP6MaKiTg0W7+/ZeHbM4jHXvRe
b8HXvQvK5kVwtayEwt0=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
GkcGg32vdV7ZS9x4Uw9v3hZEcxD5hMmQXUqa6shDPbzqUGIxrKpTOb9W4Sgi8rq+qw7QpAZp2JW/
MkYAH1WikFlf+XWG57y55EFV7oRoKQDh2Yz0sZEwVhwTGwSAqfnjrmPITofdG5eiey1ySGprEKsT
mqWAV+ZN7TkQkKup0Ukf1O+8giYKT/7UibTRqG/CT9dgU/4atPgYh2QjNMVrsAH/uzDxh7stQMYe
nkjZBkpLWOq7mxEXTKVtYAD/8G5qCJELRcvCuUKYz4Une1wDj+L/vwRK3IAdWKQ+/5mvj0q5XEm7
IKu5HYvalbySwRWzaB00uobXZorNhfwSv45jHg==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
JnT3Bfv/DUBx2mIm4+jpmHjzhKoX4mNpcc/lgscv3iYrJw8Uble396hMwPsVZ+kkAsmYtegNCiTG
Z7kqnoNeWHv+Grdizsq0QM9S2KJ5EoZhjelE+3Cii/ztNHf7Y3c0nBPnioUQ5YmWk7vgoQl3SJ3d
vwD3G0c+fGJBRpi14hTJOB2wtu4EeWcJ1f+01LjKINeucLlwacjnN0tElyRgCNKfsRDAQiMqwKqg
XCleeNY0cyLXGI30pXMpnbLizYlNKgVD6DSeNaby0dhW4phR0a+9xteo8l8eRVzTO+VSOcYSy8rU
6Uj2y0Up19vcq91C+/YeHlh24VwNI2TJeUEDwQ==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
AWr8D+IaT/X0jMJSrwmWnhWOjt0+8oyULINYaH7QGBLgqKCVtf8rqo68R3/TZ8gTkN73fZOx0QCU
3WEp7Ga1gUsqEgy+2zGlncYhOzx62FJm4Pm7S6LbE1qdg3/9Pp55JLaf1ouYlZccQJ+yawj0HgL4
zR0T347Zg2aIFxQZ28icCuJbxAZsZgAT30scXsTMMvXlQQ9NI21OjirKgHRn3dldIjpkL+BrVBkQ
Q7MMiTBhpCn/c+WXk4H9BPc3vMrVoh6r5oo+e1858Hk7osyxNI9zuACaGwdAatsW756kQBMsQoUj
TmJksSfucjrHVSuLFffpztOARH3LXrhZcCZdoQ==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
fPVwMHnHe1L8weZTnbBxjlAabwZZnO4DZSHaO7tHGHAw6U+w+7Rc3BwfQXtiTyGXP15rvoLhvVpo
i1Tzs4zrV1X8vlWrxhS6XA2VO4RFkpCjmnHpvdgnW9mpk7w90QOEZIWZQST/o15t0wDT/kv4J36r
Ho59mVFCGQQSSYx0209u6sG2rNpJ5HtWMM+tDEDHUArucrBmPOoZSq0VSQsTHtjJQxr3U5fv9l6q
aEBWkjnLJ6zqLkt12B3q7V3iFORPpz6XNMqA6wzArzWirzgTCw3CduiSAgbNgoGmV4eNrVb2DfOT
5V4ni19GigMG1fHCD9dNPWGiRCWpY6iiN6iE1w==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
NkQB16Pku9sdGFuAkY+DjFhWzKYvb26AsK/VO1//MS5ztnK+V9d/0K8nVee9kGDNC4zorSd1NjRc
Jkj/JJm1k/9QiQQwOSB/94zKWUyVH2Rvw3UOuaTu9pWRQsIdmPNwXBKCOF5L17HHGaNqYzvHF7YY
REIp6VR4HcyLq2beYXn09Mq0f84obUr7+CMgh8i1SaLa/ydMPS9xsm1i0NFB3qcEC0dDq6xklwsX
s198UBI5mBJTEUKi38eytWXzQPFTmqdlD3Qn4CgstxSdoLrFHchISqt+L62U4xU6aVyYXmVaeebF
I1F3MAXQZwZwGETW7RW9t/+3pJtkjPfPtdnqu/Sg+zP+vLjSV/NcONctKnTj86/z+TTehoSH8ccr
BsjV0PhAtR3+RTr3VGkKJoUNeE8yFQIHlES8UamuSNMh5XrbmcbFx22MZ9gLOa350ytm1N124jNF
V860l5gGbt/8NcGf8I3EVPrYblJ5ZLGsZkVg1cKBMUys1yMm6Ci2Mruc

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
JDELzo7luYHcwIl8sAAMR3hvm1tr+ZaD3VKTvYj1uwYFwuIPCkUfjVi8OMAgp3Hh/R1wDZSeoY7T
xpO0sKF9MsovKwwArnByLL8zZflfJIe5AmC+jE5a8qUxydp4liMdOypRTLu6U6EUYUwSj6VOR0Uj
deCoQCr/gVZ2GdNKF5sKZsGXZSvx1Wag70BiGs69qhgUvVVlpbqpNRSB0DR/2IuSKCHhkucLXiTk
zVS7zC7GiyNYE6l/Yu5Ov25Cl+lY5cMZkqKvIFm90UiTBNYk4No5ofXnH/E0rNcbydv0BvWDmgKt
NXVratbi0ztKLb27z2lw5ZZzXCihB41kx4VjqA==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 10128)
`pragma protect data_block
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
`pragma protect end_protected
`pragma protect begin_protected
`pragma protect version = 1
`pragma protect encrypt_agent = "XILINX"
`pragma protect encrypt_agent_info = "Xilinx Encryption Tool 2022.2"
`pragma protect key_keyowner="Synopsys", key_keyname="SNPS-VCS-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
KdkdvVsuosc8qR9X5PxQ/ghTeTrEz4qKVuenhDR9wRSL/BO/mhSwQtiFj74UO0sGv0zvjAntaq/3
l2/v8gOiVKmM666gbk/2UCISA4OFA3FDR9jYmiXdNXb2qHeS1ywQz5n/sTR5iu4KFEfwrl3IXtQw
aEiGegL+CQMaovJsto4=

`pragma protect key_keyowner="Aldec", key_keyname="ALDEC15_001", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
pZCj3qT3VD1SCS5RiZExsqqu16KpMtHXilQL9p5/eBl7qrfQjT1VhFtVbYUusepbChjsCCmCn7hr
72SuHmOmDWG78UARN7MLdO/+sePuyS06ak4nAw5xwjT0g+9970uMWYKvTeeYqoz2i+k+zX60Cuvu
iwBfxWM22DqukHlYzbEFWhNyXIkgJe71p67vGdXBmqu4/2wmlwGApqBxlwR+alwZ9UGHlxNQS4N5
z1wHu3Cp8LwGRjlaXjElcY8RDpvyz5l59ey8ar5HXR9Zqf6e1unE2NdhzHhEGRerRFXoKZppk1HB
6kIEY4EHAWz+HvPcqoP9eoYKDazoAGkJRVP6YA==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VELOCE-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=128)
`pragma protect key_block
gLgm7VvY3cNcNvdXvikCQd2nRniE4ae4hePOcAUlPDMoHDzQAD7Ngo12MGFns9JNPcCaUXfAmxL2
JNGojjrDRUWrv8FPV6FOEbDHs96fef8+gqLF4OqLck4kWpKhnJwaJjjzQirvXEzZxP+GsBKnkSp8
ceVlZJwP0F6XRv+RpQA=

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-VERIF-SIM-RSA-2", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
GeZP242oKQSNuofqDs4oIIXZEufPhRVrlFFeRSLY4VCxhMEMwfPrNXe33xO0zIEBoPW2X9mvUoTY
izdWQEtWImFzjzPCjkSLhEdIMmUBH02Y+Tw3eW5x23T0cK96pmoV2MH8kl99I27MN6stVd977fuB
Mjao5MnSXIGZ/uXGtgfUO9Zjs4/2wGmsI2/lANN2WOL9Sz4xeA8k40c2dNYgxgHoCwx8Ya/RYIZS
Cpuvzq4ZyFSNT/kMXnUmqj75/flpXT3mmyW+frexux3j9PxpKHmxAE9crvDx85rMamGiA4ftl+ac
H0FtL2cBqdlP60x+FjqleWCJoN6AYdxA0YZaeg==

`pragma protect key_keyowner="Real Intent", key_keyname="RI-RSA-KEY-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
URmEGftuxvv0+tViRUdsFNnPXucZlVDfUQpjjXkpOA38QUzsIL9j1pGGp9doC4jcg/9MD149BTSw
vAG8684a3k+Tx/8sFGl/viK1q8ty9nktEABSahv8Etm5ZJVAzQJT7EaOzrYqyywSwabogvGUmN/7
DE3eOn6+sMCiMl6BLUhYyK39ntTWNFYVPiheclbBb36V1vzMOQl0mvPuS4hDXqba/+qBZXhqeYWK
ceNfwci6SsRRef6hLF/1S+20r2uBxJeYJjyfWGGFEGfxlAOz1MiYUUR/bEHWnbjwIcJTBHQNRdq4
4Ryb+iPuKcsXU/8ApD14i6ScW+VBPWSqnH9w+A==

`pragma protect key_keyowner="Xilinx", key_keyname="xilinxt_2021_07", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
NtQgA3rUKfJt+21sTot44yr4gmte57FoFl8Q/327tsRJeEyNAiwWZaZN2mbo2NFcvyN2GhDw6avJ
NsF1Oxs36P8shoqOOiloWWrdTcyAdMhdk+UjeZgKcNSqd4Js87w/5LVQTwjB2mcBDfe1jrivv+IW
ZRBC8NvlW5z/1wF7+vzXRMziLQYeOkLB0OkpIY+eT5cZXDKuZ+4l0FMPjd+El96JGAEHG7Q0qS3F
OEApYEp8+nSZnragoytq4pkhVJEC22ye0hBhoBClJpszCcg0u+Ugf+mYZsj8BC2uqSY6Hh/gpjjw
enQ7aEYBaUR7GCwQN7fZmNhZYtBkyvNqydRQcA==

`pragma protect key_keyowner="Metrics Technologies Inc.", key_keyname="DSim", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
CpIFM8Y8dBmpjtOVnOKcfppEFV+c1cRgsQtewNUe+5apiLDoRCdMyTqoCay7nz+Xagc0OvfZDg/Y
jSTsDjKVcEIyxOfix7iwjKW8Rz+a5wBIatI8wfCo7uLtuucz9otOWWI7BFQ2gn4VdQ73HJJlZMMY
OyEOd33tGjNSjxz3W07knDr1FwTE3BOfhq+Qj2ErnuV1dQbrTb3MiQMTnHaTCwtz6ip0pD6b5G4K
kBRUYe+UNXCMvSfNIN9MPSmolO4MjNwM5gnZZqLcR1hGuzH/Yeb/jPnhsZ7jFvlTT3nsM9JzMRAE
QwlzVuulHKQDS2I96arFosYPYMsalmn6CQW0gg==

`pragma protect key_keyowner="Atrenta", key_keyname="ATR-SG-RSA-1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=384)
`pragma protect key_block
qinIxHFISC9r9LS7OKOuYVGM5EBkuuQNV1nDRui+QVNLn2QFCrWPeEClQIlNViKOt8MX9urHvu4e
l2L+eZKw6+St9cW9yUsYu36yoB4LqwG+vKvfR9CW82LGPyMAxdgk/p3n+F0Xp9Y2HaERwWDL99tW
V7cDvLLhyIwz7w4rI0BWWV+KMjXP2F5MNgykzZn7tzV8oY6MxOykFqRdI8DLAdlYGAs90wjJ3x84
S3fHciSox97FYpDi64v31Vb4RmRrwueXcvCc3w8gzjuwg7qraWLMYyPB+mERB2v1htX80PsWWVHE
QXkWiHWYvvrXEykUS04MmLNHpV8ZgBXO/NBEGn7mrITDEswk3u1Yviqy7CW2wLPQBoo5xW+uiu2e
8YZV/E+bAt+P/EH5RsC9alBgtuVKU1s9DaiEH8eUPEgJQ/TXwQW01pg8ECTYgiBS+IQSbld23aq3
goVo0ZMzRu/SA00Jmwt7upvsMkh9Q+2732ahu1FmlSNmyNGB1+bYf782

`pragma protect key_keyowner="Cadence Design Systems.", key_keyname="CDS_RSA_KEY_VER_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
T1jqx5hmzZZMhPApzUC1oZLMAkHma8Ki4b2CvLNqxSn+MNWoTPomvQ775DMBEDai/gahYALsohdX
0f/e6LuPqt4zYtyAzmH+nRgOG/tilS1J674KsaHxudAfo4sM3awB/C4Q3VdYsO9FgvPQylnYKSGE
gJ46W+1Y789VQqPbt4dpnprhix6sLlwfww7We6cq2wu4PilFzovejouUBZqNMZHYi4suKcMcenp3
C7QRKloo8IF9yKrhGPcRJLQt2nus3bI0Q3ICxRk13Nrfhh/z4cdm0OGXz42q44snFEVy1lLxPOs7
W9tSe5ag3923oCT4NGGgK/gMTx5qXxFhV2MJUw==

`pragma protect key_keyowner="Mentor Graphics Corporation", key_keyname="MGC-PREC-RSA", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
U80kOfbO8gh8tw6h3aEVaqKsloKgiQYyeA4t/LeLPoGalqZqtTb3HlVfusdvarzS4vhrZrifzBZr
rZguJiUMbtcyDeryz8atT8p+OABo8vHCdJ7QxlCfavWkoxP7+R5pV3hcPYrgdOzBOctGzrAvMvC+
9K/ZDGK9DJU2sc8c6ie74HUBZ2P7k2G9sB6Km5rmML0XoJgQlSZ23d97htYgxjXxCZbZQJET9ncm
HFsdMPWfdRdNOyPz462vRwa8JqYCu81YX9CdgjACQ5IjZ3LM6z8WJfwfLXbKri4QtrQ4KkCOMWsG
ijGZafY+TQWp/N0V1348Yc8AcbT6/UbwsIQleQ==

`pragma protect key_keyowner="Synplicity", key_keyname="SYNP15_1", key_method="rsa"
`pragma protect encoding = (enctype="BASE64", line_length=76, bytes=256)
`pragma protect key_block
HBuyPua8aSV+lPG+71WWey6+oT3Ui+QnfcNwiwAYzv98ax+NqE6azvqDkmDhEHhAdT3oDg4W72Z1
Igmogu6uAh37slysMpPtSHtSRTmP9i3XtE5AXkmfOxAsrCUvJdEF0EQqYjjqOzsKxKzDM03wgXGg
yl0rgU1BDbPHtn3WV1scqgmjC31H4Mss2KNLqy/QVwg9URExNNCsQTi1n45pEQhPATJxLd6fEM0d
EYjVgRylsTQDSzTnDDC9Vaw0gnXV96iDNq8tEoekWXz0mgibl7NRDDmEZVpsjVK7TvhbQ2DAZzPl
Q6nq1JTvDf7y7TUNeZVLcOzyKAlCB/FHP/2LNw==

`pragma protect data_method = "AES128-CBC"
`pragma protect encoding = (enctype = "BASE64", line_length = 76, bytes = 332016)
`pragma protect data_block
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
`pragma protect end_protected
`ifndef GLBL
`define GLBL
`timescale  1 ps / 1 ps

module glbl ();

    parameter ROC_WIDTH = 100000;
    parameter TOC_WIDTH = 0;
    parameter GRES_WIDTH = 10000;
    parameter GRES_START = 10000;

//--------   STARTUP Globals --------------
    wire GSR;
    wire GTS;
    wire GWE;
    wire PRLD;
    wire GRESTORE;
    tri1 p_up_tmp;
    tri (weak1, strong0) PLL_LOCKG = p_up_tmp;

    wire PROGB_GLBL;
    wire CCLKO_GLBL;
    wire FCSBO_GLBL;
    wire [3:0] DO_GLBL;
    wire [3:0] DI_GLBL;
   
    reg GSR_int;
    reg GTS_int;
    reg PRLD_int;
    reg GRESTORE_int;

//--------   JTAG Globals --------------
    wire JTAG_TDO_GLBL;
    wire JTAG_TCK_GLBL;
    wire JTAG_TDI_GLBL;
    wire JTAG_TMS_GLBL;
    wire JTAG_TRST_GLBL;

    reg JTAG_CAPTURE_GLBL;
    reg JTAG_RESET_GLBL;
    reg JTAG_SHIFT_GLBL;
    reg JTAG_UPDATE_GLBL;
    reg JTAG_RUNTEST_GLBL;

    reg JTAG_SEL1_GLBL = 0;
    reg JTAG_SEL2_GLBL = 0 ;
    reg JTAG_SEL3_GLBL = 0;
    reg JTAG_SEL4_GLBL = 0;

    reg JTAG_USER_TDO1_GLBL = 1'bz;
    reg JTAG_USER_TDO2_GLBL = 1'bz;
    reg JTAG_USER_TDO3_GLBL = 1'bz;
    reg JTAG_USER_TDO4_GLBL = 1'bz;

    assign (strong1, weak0) GSR = GSR_int;
    assign (strong1, weak0) GTS = GTS_int;
    assign (weak1, weak0) PRLD = PRLD_int;
    assign (strong1, weak0) GRESTORE = GRESTORE_int;

    initial begin
	GSR_int = 1'b1;
	PRLD_int = 1'b1;
	#(ROC_WIDTH)
	GSR_int = 1'b0;
	PRLD_int = 1'b0;
    end

    initial begin
	GTS_int = 1'b1;
	#(TOC_WIDTH)
	GTS_int = 1'b0;
    end

    initial begin 
	GRESTORE_int = 1'b0;
	#(GRES_START);
	GRESTORE_int = 1'b1;
	#(GRES_WIDTH);
	GRESTORE_int = 1'b0;
    end

endmodule
`endif
